!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
#	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> # :if !<sid>SearchNext("b")<bar>execute "norm! #"<bar>endif<cr>$/;"	m
*	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> * :if !<sid>SearchNext()<bar>execute "norm! *"<bar>endif<cr>$/;"	m
<C-C>	plugin/script/bundle/comments/plugin/comments.vim	/^noremap  <silent> <C-C> :call CommentLine()<CR>$/;"	m
<C-C>	plugin/script/bundle/comments/plugin/comments.vim	/^vnoremap <silent> <C-C> :call RangeCommentLine()<CR>$/;"	m
<C-X>	plugin/script/bundle/comments/plugin/comments.vim	/^noremap  <silent> <C-X> :call UnCommentLine()<CR>$/;"	m
<C-X>	plugin/script/bundle/comments/plugin/comments.vim	/^vnoremap <silent> <C-X> :call RangeUnCommentLine()<CR>$/;"	m
<F5>	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^      imap <unique> <expr> <silent> <F5> (pumvisible() ? "\\<Plug>LookupFileCE" :$/;"	m
<F5>	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^      nmap <unique> <silent> <F5> <Plug>LookupFile$/;"	m
<leader>#	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <leader># :call <sid>SearchCurrentMark("b")<cr>$/;"	m
<leader>*	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <leader>* :call <sid>SearchCurrentMark()<cr>$/;"	m
<leader>/	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <leader>\/ :call <sid>SearchAnyMark()<cr>$/;"	m
<leader>?	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <leader>? :call <sid>SearchAnyMark("b")<cr>$/;"	m
<leader>m	plugin/script/bundle/mark.vim/plugin/mark.vim	/^	nmap <unique> <silent> <leader>m <Plug>MarkSet$/;"	m
<leader>m	plugin/script/bundle/mark.vim/plugin/mark.vim	/^	vmap <unique> <silent> <leader>m <Plug>MarkSet$/;"	m
<leader>n	plugin/script/bundle/mark.vim/plugin/mark.vim	/^	nmap <unique> <silent> <leader>n <Plug>MarkClear$/;"	m
<leader>r	plugin/script/bundle/mark.vim/plugin/mark.vim	/^	nmap <unique> <silent> <leader>r <Plug>MarkRegex$/;"	m
<leader>r	plugin/script/bundle/mark.vim/plugin/mark.vim	/^	vmap <unique> <silent> <leader>r <Plug>MarkRegex$/;"	m
<Plug>LookupFile	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  noremap <script> <silent> <Plug>LookupFile :LookupFile<CR>$/;"	m
<Plug>LookupFileCE	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^      inoremap <Plug>LookupFileCE <C-E>$/;"	m
<Plug>MarkClear	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkClear :call$/;"	m
<Plug>MarkRegex	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkRegex :call$/;"	m
<Plug>MarkRegex	plugin/script/bundle/mark.vim/plugin/mark.vim	/^vnoremap <silent> <Plug>MarkRegex <c-\\><c-n>:call$/;"	m
<Plug>MarkSet	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSet   :call$/;"	m
<Plug>MarkSet	plugin/script/bundle/mark.vim/plugin/mark.vim	/^vnoremap <silent> <Plug>MarkSet   <c-\\><c-n>:call$/;"	m
<SID>xx	plugin/script/bundle/taglist/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
AcceptFile	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:AcceptFile(splitWin, key)$/;"	f
AddCleanup	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:AddCleanup(cmd)$/;"	f
AddPattern	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:AddPattern()$/;"	f
AnyMark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:AnyMark()$/;"	f
AsyncRun	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^command! -bang -nargs=+ -complete=file AsyncRun $/;"	c
asyncrun#quickfix_toggle	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#quickfix_toggle(size, ...)$/;"	f
asyncrun#run	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#run(bang, opts, args)$/;"	f
asyncrun#status	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#status()$/;"	f
asyncrun#stop	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#stop(bang)$/;"	f
asyncrun#version	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#version()$/;"	f
AsyncRun_Job_AutoCmd	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_AutoCmd(mode, auto)$/;"	f
AsyncRun_Job_AutoScroll	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_AutoScroll()$/;"	f
AsyncRun_Job_CheckScroll	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_CheckScroll()$/;"	f
AsyncRun_Job_Cursor	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Cursor()$/;"	f
AsyncRun_Job_NeoVim	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_NeoVim(job_id, data, event)$/;"	f
AsyncRun_Job_OnCallback	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnCallback(channel, text)$/;"	f
AsyncRun_Job_OnClose	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnClose(channel)$/;"	f
AsyncRun_Job_OnExit	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnExit(job, message)$/;"	f
AsyncRun_Job_OnFinish	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnFinish()$/;"	f
AsyncRun_Job_OnTimer	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! g:AsyncRun_Job_OnTimer(id)$/;"	f
AsyncRun_Job_QuickReset	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_QuickReset()$/;"	f
AsyncRun_Job_Scroll	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Scroll()$/;"	f
AsyncRun_Job_Start	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Start(cmd)$/;"	f
AsyncRun_Job_Status	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Status()$/;"	f
AsyncRun_Job_Stop	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Stop(how)$/;"	f
AsyncRun_Job_Update	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Update(count)$/;"	f
AsyncRun_Job_ViewReset	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_ViewReset()$/;"	f
AsyncStop	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^command! -bang -nargs=0 AsyncStop call asyncrun#stop('<bang>')$/;"	c
AutoCmd	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AutoCmd(name)$/;"	f
BinSearchToAppend	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:BinSearchToAppend(start, end, line, cmp, direction)$/;"	f
BinSearchToAppend2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:BinSearchToAppend2(start, end, line, cmp, direction, accessor,$/;"	f
BufLineAccessor	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:BufLineAccessor(line, context)$/;"	f
BufLineMover	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:BufLineMover(from, to, context)$/;"	f
BufLineSwapper	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:BufLineSwapper(line1, line2, context)$/;"	f
BuildContextStack	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:BuildContextStack(namespaces, szCurrentScope)$/;"	f
build_all_help	build_all.sh	/^function build_all_help()$/;"	f
build_vimconf_dir	build_all.sh	/^function build_vimconf_dir()$/;"	f
CanUseOmnicompletion	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/maycomplete.vim	/^function! s:CanUseOmnicompletion()$/;"	f
Char2Num	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:Char2Num(c)$/;"	f
CmpByName	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:CmpByName(i1, i2)$/;"	f
combine_vimrcs	build_all.sh	/^function combine_vimrcs()$/;"	f
CommentLine	plugin/script/bundle/comments/plugin/comments.vim	/^function! CommentLine()$/;"	f
complete_install	build_all.sh	/^function complete_install()$/;"	f
ConfigBufs	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:ConfigBufs()$/;"	f
ConfigWalk	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:ConfigWalk()$/;"	f
config_object	build_all.sh	/^function config_object()$/;"	f
config_vimrc	build_all.sh	/^function config_vimrc()$/;"	f
CurrentMark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:CurrentMark()$/;"	f
debug_vimtool	build_all.sh	/^function debug_vimtool()$/;"	f
DisplayIncludeTree	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^function! s:DisplayIncludeTree(szFilePath, indent, ...)$/;"	f
DoMark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:DoMark(...) " DoMark(regexp)$/;"	f
ErrorMsg	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:ErrorMsg(msg)$/;"	f
ExecWinCmdNoEa	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:ExecWinCmdNoEa(winCmd)$/;"	f
ExtendTagItemToPopupItem	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:ExtendTagItemToPopupItem(tagItem, szTypeName)$/;"	f
ExtractOpt	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:ExtractOpt(command) $/;"	f
ExtractScopeFromTypeInfo	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! s:ExtractScopeFromTypeInfo(szTypeInfo)$/;"	f
ExtractTypeInfoFromDecl	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:ExtractTypeInfoFromDecl(tokens)$/;"	f
FilePatIgnoreCase	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:FilePatIgnoreCase(filePat)$/;"	f
FilterClassMembers	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:FilterClassMembers(tagPopupList, szAccessFilter)$/;"	f
FilterClassScopeMembers	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:FilterClassScopeMembers(tagPopupList, szAccessFilter)$/;"	f
FilterNamespaceScopeMembers	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:FilterNamespaceScopeMembers(tagPopupList)$/;"	f
FilterOverloadedFunctions	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:FilterOverloadedFunctions(tagPopupList)$/;"	f
FilterStaticClassMembers	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:FilterStaticClassMembers(tagPopupList, szAccessFilter)$/;"	f
FindBufferForName	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:FindBufferForName(fileName)$/;"	f
FindStartPositionOfCompletion	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:FindStartPositionOfCompletion()$/;"	f
FormatFileResults	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:FormatFileResults(fl, parentLen, matchPat, matchingCase, dirsOnly)$/;"	f
g:asyncrun_auto	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_auto = ''$/;"	v
g:asyncrun_bell	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_bell = 0$/;"	v
g:asyncrun_code	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_code = ''$/;"	v
g:asyncrun_encs	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_encs = ''$/;"	v
g:asyncrun_exit	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_exit = ''$/;"	v
g:asyncrun_hook	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_hook = ''$/;"	v
g:asyncrun_last	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_last = 0$/;"	v
g:asyncrun_local	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_local = 1$/;"	v
g:asyncrun_mode	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_mode = 0$/;"	v
g:asyncrun_shell	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_shell = ''$/;"	v
g:asyncrun_shellflag	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_shellflag = ''$/;"	v
g:asyncrun_status	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_status = ''$/;"	v
g:asyncrun_stop	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_stop = ''$/;"	v
g:asyncrun_support	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^		let g:asyncrun_support = 1$/;"	v
g:asyncrun_support	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_support = 1$/;"	v
g:asyncrun_support	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_support = 0$/;"	v
g:asyncrun_text	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_text = ''$/;"	v
g:asyncrun_timer	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_timer = 25$/;"	v
g:asyncrun_trim	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_trim = 0$/;"	v
g:asyncrun_windows	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_windows = 1$/;"	v
g:asyncrun_windows	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_windows = 0$/;"	v
g:indentLine_bufNameExclude	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_bufNameExclude = get(g:,'indentLine_bufNameExclude',[])$/;"	v
g:indentLine_char	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_char = get(g:,'indentLine_char',(&encoding is# "utf-8" && &term isnot# "linux" ? '¦' : '|'))$/;"	v
g:indentLine_enabled	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_enabled = get(g:,'indentLine_enabled',1)$/;"	v
g:indentLine_faster	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_faster = get(g:,'indentLine_faster',0)$/;"	v
g:indentLine_fileType	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_fileType = get(g:,'indentLine_fileType',[])$/;"	v
g:indentLine_fileTypeExclude	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_fileTypeExclude = get(g:,'indentLine_fileTypeExclude',[])$/;"	v
g:indentLine_first_char	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_first_char = get(g:,'indentLine_first_char',(&encoding is# "utf-8" && &term isnot# "linux"  ? '¦' : '|'))$/;"	v
g:indentLine_indentLevel	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_indentLevel = get(g:,'indentLine_indentLevel',10)$/;"	v
g:indentLine_leadingSpaceChar	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceChar = get(g:,'indentLine_leadingSpaceChar',(&encoding is# "utf-8" && &term isnot# "linux" ? '·' : '.'))$/;"	v
g:indentLine_leadingSpaceEnabled	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceEnabled = get(g:,'indentLine_leadingSpaceEnabled',0)$/;"	v
g:indentLine_loaded	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_loaded = 1$/;"	v
g:indentLine_maxLines	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_maxLines = get(g:,'indentLine_maxLines',3000)$/;"	v
g:indentLine_setColors	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_setColors = get(g:,'indentLine_setColors',1)$/;"	v
g:indentLine_showFirstIndentLevel	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_showFirstIndentLevel = get(g:,'indentLine_showFirstIndentLevel',0)$/;"	v
g:loaded_lookupfile	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^let g:loaded_lookupfile = 108$/;"	v
g:loaded_pathogen	plugin/script/autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:lookupfile#lastPattern	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^let g:lookupfile#lastPattern = ""$/;"	v
g:lookupfile#lastResults	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^let g:lookupfile#lastResults = []$/;"	v
g:lookupfile#lastStatsMsg	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^let g:lookupfile#lastStatsMsg = []$/;"	v
g:lookupfile#recentFiles	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^let g:lookupfile#recentFiles = []$/;"	v
g:LookupFile_AllowNewFiles	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_AllowNewFiles = 1$/;"	v
g:LookupFile_AlwaysAcceptFirst	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_AlwaysAcceptFirst = 0$/;"	v
g:LookupFile_Bufs_BufListExpr	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_Bufs_BufListExpr = ''$/;"	v
g:LookupFile_Bufs_LikeBufCmd	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_Bufs_LikeBufCmd = 1$/;"	v
g:LookupFile_Bufs_SkipUnlisted	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_Bufs_SkipUnlisted = 1$/;"	v
g:LookupFile_DefaultCmd	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_DefaultCmd = ':LUTags'$/;"	v
g:LookupFile_DisableDefaultMap	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_DisableDefaultMap = 0$/;"	v
g:LookupFile_EnableRemapCmd	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_EnableRemapCmd = 1$/;"	v
g:LookupFile_EscCancelsPopup	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_EscCancelsPopup = 1$/;"	v
g:LookupFile_FileFilter	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_FileFilter = ''$/;"	v
g:LookupFile_LookupAcceptFunc	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_LookupAcceptFunc = ''$/;"	v
g:LookupFile_LookupFunc	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_LookupFunc = ''$/;"	v
g:LookupFile_LookupNotifyFunc	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_LookupNotifyFunc = ''$/;"	v
g:LookupFile_MinPatLength	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_MinPatLength = 4$/;"	v
g:LookupFile_OnCursorMovedI	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_OnCursorMovedI = 0$/;"	v
g:LookupFile_PreserveLastPattern	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_PreserveLastPattern = 1$/;"	v
g:LookupFile_PreservePatternHistory	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_PreservePatternHistory = 1$/;"	v
g:LookupFile_RecentFileListSize	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_RecentFileListSize = 20$/;"	v
g:LookupFile_SearchForBufsInTabs	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_SearchForBufsInTabs = 1$/;"	v
g:LookupFile_ShowFiller	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_ShowFiller = 1$/;"	v
g:LookupFile_SortMethod	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_SortMethod = 'alpha'$/;"	v
g:LookupFile_TagExpr	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_TagExpr = '&tags'$/;"	v
g:LookupFile_TagsExpandCamelCase	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_TagsExpandCamelCase = 1$/;"	v
g:LookupFile_UpdateTime	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_UpdateTime = 300$/;"	v
g:LookupFile_UsingSpecializedTags	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_UsingSpecializedTags = 0$/;"	v
g:makeArgumentList	plugin/script/bundle/genutils/autoload/genutils.vim	/^let g:makeArgumentList = 'exec genutils#MakeArgumentList()'$/;"	v
g:makeArgumentString	plugin/script/bundle/genutils/autoload/genutils.vim	/^let g:makeArgumentString = 'exec genutils#MakeArgumentString()'$/;"	v
g:omni#cpp#includes#CACHE_FILE_TIME	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_FILE_TIME = {}$/;"	v
g:omni#cpp#includes#CACHE_INCLUDES	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_INCLUDES = {}$/;"	v
g:omni#cpp#namespaces#CacheResolve	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheResolve = {}$/;"	v
g:omni#cpp#namespaces#CacheUsing	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheUsing = {}$/;"	v
g:omni#cpp#utils#CACHE_TAG_INHERITS	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#CACHE_TAG_INHERITS = {}$/;"	v
g:omni#cpp#utils#szFilterGlobalScope	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope .= "&& (!has_key(v:val, 'enum') || (has_key(v:val, 'enum') && v:val.enum =~ '^\\\\w\\\\+$')))"$/;"	v
g:omni#cpp#utils#szFilterGlobalScope	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope = "(!has_key(v:val, 'class') && !has_key(v:val, 'struct') && !has_key(v:val, 'union') && !has_key(v:val, 'namespace')"$/;"	v
g:SrcExpl_gobackKey	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_gobackKey = '<SPACE>'$/;"	v
g:SrcExpl_isUpdateTags	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_isUpdateTags = 1$/;"	v
g:SrcExpl_jumpKey	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_jumpKey = '<CR>'$/;"	v
g:SrcExpl_markList	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let g:SrcExpl_markList = []$/;"	v
g:SrcExpl_nextDefKey	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_nextDefKey = ''$/;"	v
g:SrcExpl_pluginList	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_pluginList = [$/;"	v
g:SrcExpl_prevDefKey	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_prevDefKey = ''$/;"	v
g:SrcExpl_refreshTime	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_refreshTime = 100$/;"	v
g:SrcExpl_searchLocalDef	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_searchLocalDef = 1$/;"	v
g:SrcExpl_updateTagsCmd	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_updateTagsCmd = 'ctags --sort=foldcase -R .'$/;"	v
g:SrcExpl_updateTagsKey	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_updateTagsKey = ''$/;"	v
g:SrcExpl_winHeight	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_winHeight = 8$/;"	v
g:ST_WIN_CMD	plugin/script/bundle/genutils/autoload/genutils.vim	/^let g:ST_WIN_CMD = 0 | let g:ST_WIN_SH = 1 | let g:ST_UNIX = 2$/;"	v
genutils#AddNotifyWindowClose	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#AddNotifyWindowClose(windowTitle, functionName)$/;"	f
genutils#AddToFCShellPre	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#AddToFCShellPre(funcName)$/;"	f
genutils#AlignWordWithWordInPreviousLine	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#AlignWordWithWordInPreviousLine()$/;"	f
genutils#ArrayVarExists	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ArrayVarExists(varName, index)$/;"	f
genutils#BinInsertSort	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#BinInsertSort(cmp, direction) range$/;"	f
genutils#BinInsertSort2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#BinInsertSort2(start, end, cmp, direction, accessor, mover, context)$/;"	f
genutils#BinSearchForInsert	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#BinSearchForInsert(start, end, line, cmp, direction)$/;"	f
genutils#BinSearchForInsert2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#BinSearchForInsert2(start, end, line, cmp, direction,$/;"	f
genutils#BinSearchList	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#BinSearchList(list, start, end, item, cmp)$/;"	f
genutils#CenterWordInSpace	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CenterWordInSpace()$/;"	f
genutils#CheckWindowClose	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CheckWindowClose()$/;"	f
genutils#CleanDiffOptions	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CleanDiffOptions()$/;"	f
genutils#CleanupFileName	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CleanupFileName(fileName)$/;"	f
genutils#CleanupFileName2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CleanupFileName2(fileName, win32ProtectedChars)$/;"	f
genutils#ClearAllSigns	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ClearAllSigns()$/;"	f
genutils#CloseWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CloseWindow(win, force)$/;"	f
genutils#CloseWinNoEa	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CloseWinNoEa(winnr, force)$/;"	f
genutils#CmpByLength	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByLength(line1, line2, ...)$/;"	f
genutils#CmpByLineLengthNname	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByLineLengthNname(line1, line2, ...)$/;"	f
genutils#CmpByNumber	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByNumber(line1, line2, ...)$/;"	f
genutils#CmpByString	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByString(line1, line2, ...)$/;"	f
genutils#CmpByStringIgnoreCase	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByStringIgnoreCase(line1, line2, ...)$/;"	f
genutils#CmpJavaImports	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpJavaImports(line1, line2, ...)$/;"	f
genutils#CommonPath	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CommonPath(path1, path2, ...)$/;"	f
genutils#CommonString	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CommonString(str1, str2)$/;"	f
genutils#CreateArgString	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CreateArgString(argList, sep, ...)$/;"	f
genutils#CrUnProtectedCharsPattern	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CrUnProtectedCharsPattern(chars, ...)$/;"	f
genutils#CurLineHasSign	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CurLineHasSign()$/;"	f
genutils#DebugShowArgs	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#DebugShowArgs(...)$/;"	f
genutils#DeEscape	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#DeEscape(str)$/;"	f
genutils#DefFCShellInstall	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#DefFCShellInstall()$/;"	f
genutils#DefFCShellUninstall	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#DefFCShellUninstall()$/;"	f
genutils#DefFileChangedShell	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#DefFileChangedShell()$/;"	f
genutils#EatChar	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#EatChar(pat)$/;"	f
genutils#Escape	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#Escape(str, chars)$/;"	f
genutils#EscapeCommand	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#EscapeCommand(cmd, args, pipe)$/;"	f
genutils#ExpandStr	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ExpandStr(str)$/;"	f
genutils#ExtractFuncListing	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ExtractFuncListing(funcName, hLines, tLines)$/;"	f
genutils#FindBufferForName	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#FindBufferForName(fileName)$/;"	f
genutils#FindWindowForBuffer	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#FindWindowForBuffer(bufferName, checkUnlisted)$/;"	f
genutils#GetBufNameForAu	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetBufNameForAu(bufName)$/;"	f
genutils#GetColPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetColPosition(id)$/;"	f
genutils#GetLastWinnrInStack	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetLastWinnrInStack(dir)$/;"	f
genutils#GetLinePosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetLinePosition(id)$/;"	f
genutils#GetNextWinnrInStack	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetNextWinnrInStack(dir)$/;"	f
genutils#GetPersistentVar	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetPersistentVar(pluginName, persistentVar, default)$/;"	f
genutils#GetPreviewWinnr	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetPreviewWinnr()$/;"	f
genutils#GetSelectedIndex	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetSelectedIndex()$/;"	f
genutils#GetShellEnvType	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetShellEnvType()$/;"	f
genutils#GetSpacer	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetSpacer(width)$/;"	f
genutils#GetVimCmdOutput	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetVimCmdOutput(cmd)$/;"	f
genutils#IsOnlyHorizontalWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#IsOnlyHorizontalWindow()$/;"	f
genutils#IsOnlyVerticalWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#IsOnlyVerticalWindow()$/;"	f
genutils#IsPositionSet	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#IsPositionSet(id)$/;"	f
genutils#MakeArgumentList	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MakeArgumentList(...)$/;"	f
genutils#MakeArgumentString	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MakeArgumentString(...)$/;"	f
genutils#MapAppendCascaded	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MapAppendCascaded(lhs, rhs, mapMode)$/;"	f
genutils#MarkActiveWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MarkActiveWindow()$/;"	f
genutils#MoveCurLineToWinLine	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MoveCurLineToWinLine(n)$/;"	f
genutils#MoveCursorToLastInWinStack	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MoveCursorToLastInWinStack(dir)$/;"	f
genutils#MoveCursorToNextInWinStack	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MoveCursorToNextInWinStack(dir)$/;"	f
genutils#MoveCursorToWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MoveCursorToWindow(winno)$/;"	f
genutils#NumberOfWindows	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#NumberOfWindows()$/;"	f
genutils#OnMS	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#OnMS()$/;"	f
genutils#OpenWinNoEa	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#OpenWinNoEa(winOpenCmd)$/;"	f
genutils#OptClearBuffer	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#OptClearBuffer()$/;"	f
genutils#PathIsAbsolute	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#PathIsAbsolute(path)$/;"	f
genutils#PathIsFileNameOnly	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#PathIsFileNameOnly(path)$/;"	f
genutils#PromptForElement	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#PromptForElement(array, default, msg, skip, useDialog,$/;"	f
genutils#PutPersistentVar	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#PutPersistentVar(pluginName, persistentVar, value)$/;"	f
genutils#QSort	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#QSort(cmp, direction) range$/;"	f
genutils#QSort2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#QSort2(start, end, cmp, direction, accessor, swapper, context)$/;"	f
genutils#QuoteStr	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#QuoteStr(str)$/;"	f
genutils#RelPathFromDir	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RelPathFromDir(srcDir, tgtFile)$/;"	f
genutils#RelPathFromFile	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RelPathFromFile(srcFile, tgtFile)$/;"	f
genutils#RemoveFromFCShellPre	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RemoveFromFCShellPre(funcName)$/;"	f
genutils#RemoveNotifyWindowClose	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RemoveNotifyWindowClose(windowTitle)$/;"	f
genutils#ResetHardPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetHardPosition(id)$/;"	f
genutils#ResetHardPositionWithContext	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetHardPositionWithContext(id)$/;"	f
genutils#ResetSoftPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetSoftPosition(id)$/;"	f
genutils#ResetWindowSettings	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetWindowSettings()$/;"	f
genutils#ResetWindowSettings2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetWindowSettings2(id)$/;"	f
genutils#RestoreActiveWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreActiveWindow()$/;"	f
genutils#RestoreHardPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreHardPosition(id)$/;"	f
genutils#RestoreHardPositionWithContext	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreHardPositionWithContext(id)$/;"	f
genutils#RestoreSoftPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreSoftPosition(id)$/;"	f
genutils#RestoreVisualSelection	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreVisualSelection(id)$/;"	f
genutils#RestoreWindowSettings	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings()$/;"	f
genutils#RestoreWindowSettings2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings2(id)$/;"	f
genutils#Roman2Decimal	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#Roman2Decimal(str)$/;"	f
genutils#SaveHardPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveHardPosition(id)$/;"	f
genutils#SaveHardPositionWithContext	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveHardPositionWithContext(id)$/;"	f
genutils#SaveSoftPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveSoftPosition(id)$/;"	f
genutils#SaveVisualSelection	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveVisualSelection(id)$/;"	f
genutils#SaveWindowSettings	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveWindowSettings()$/;"	f
genutils#SaveWindowSettings2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveWindowSettings2(id, overwrite)$/;"	f
genutils#SetupScratchBuffer	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SetupScratchBuffer()$/;"	f
genutils#ShiftWordInSpace	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ShiftWordInSpace(dir)$/;"	f
genutils#ShowLinesWithSyntax	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ShowLinesWithSyntax() range$/;"	f
genutils#SilentDelete	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SilentDelete(arg1, ...)$/;"	f
genutils#SilentSubstitute	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SilentSubstitute(pat, cmd)$/;"	f
genutils#UnEscape	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#UnEscape(str, chars)$/;"	f
genutils#UserDirComplete2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#UserDirComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f
genutils#UserFileComplete	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#UserFileComplete(ArgLead, CmdLine, CursorPos, smartSlash,$/;"	f
genutils#UserFileComplete2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#UserFileComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f
genutils#UserFileExpand	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#UserFileExpand(fileArgs)$/;"	f
GetAccessFilter	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:GetAccessFilter(szFilter, szAccessFilter)$/;"	f
GetAllUsingNamespaceMapFromCurrentBuffer	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromCurrentBuffer(...)$/;"	f
GetAllUsingNamespaceMapFromFile	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromFile(szFilePath, ...)$/;"	f
GetClassScopeAtCursor	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetClassScopeAtCursor()$/;"	f
GetCommand	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:GetCommand(withPopupTrigger, withSkipPat, actCmd, innerCmd)$/;"	f
GetDefDir	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:GetDefDir()$/;"	f
GetIncludeListFromCurrentBuffer	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromCurrentBuffer()$/;"	f
GetIncludeListFromFile	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromFile(szFilePath, bUpdate) $/;"	f
GetNamespaceAliasListFromLine	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasListFromLine(szLine)$/;"	f
GetNamespaceAliasMap	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasMap()$/;"	f
GetNamespaceListFromLine	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceListFromLine(szLine)$/;"	f
GetNextWinnrInStack	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:GetNextWinnrInStack(dir)$/;"	f
GetStopPositionForLocalSearch	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetStopPositionForLocalSearch()$/;"	f
GetSymbol	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:GetSymbol(tokens)$/;"	f
GetTagOfSameScope	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! s:GetTagOfSameScope(listTags, szScopeToMatch)$/;"	f
GetTypeInfoOfReturnedType	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfReturnedType(contextStack, szFunctionName)$/;"	f
GetTypeInfoOfVariable	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfVariable(contextStack, szVariable, bSearchDecl)$/;"	f
GetUsingNamespaceListFromMap	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetUsingNamespaceListFromMap(namespaceMap, ...)$/;"	f
GetVisualSelection	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:GetVisualSelection()$/;"	f
GetVisualSelectionEscaped	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:GetVisualSelectionEscaped(flags)$/;"	f
GetWinDim	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:GetWinDim(dir, win)$/;"	f
GUDebugEcho	plugin/script/bundle/genutils/autoload/genutils.vim	/^command! -complete=file -nargs=* GUDebugEcho :echo <q-args>$/;"	c
HasATagFileOrTagEnvChanged	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:HasATagFileOrTagEnvChanged()$/;"	f
HasTagEnvChanged	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:HasTagEnvChanged()$/;"	f
Helptags	plugin/script/autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HidePopup	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:HidePopup()$/;"	f
IdoAccept	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:IdoAccept(splitWin, key)$/;"	f
IdoBS	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:IdoBS()$/;"	f
IdoSwitchTo	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:IdoSwitchTo(mode)$/;"	f
IdoTab	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:IdoTab()$/;"	f
indentLine	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^augroup indentLine$/;"	a
IndentLinesDisable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! IndentLinesDisable call <SID>IndentLinesDisable()$/;"	c
IndentLinesDisable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesDisable()$/;"	f
IndentLinesEnable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! IndentLinesEnable call <SID>IndentLinesEnable()$/;"	c
IndentLinesEnable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesEnable()$/;"	f
IndentLinesReset	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! -nargs=? IndentLinesReset call <SID>ResetWidth(<f-args>)$/;"	c
IndentLinesToggle	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! IndentLinesToggle call <SID>IndentLinesToggle()$/;"	c
IndentLinesToggle	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesToggle()$/;"	f
InitColor	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:InitColor()$/;"	f
InitComplete	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:InitComplete()$/;"	f
InitMarkVariables	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:InitMarkVariables()$/;"	f
init_vimrc	build_all.sh	/^function init_vimrc()$/;"	f
install_config	build_all.sh	/^function install_config()$/;"	f
install_plugin	build_all.sh	/^function install_plugin()$/;"	f
install_vim	build_all.sh	/^function install_vim()$/;"	f
install_vimtool	build_all.sh	/^function install_vimtool()$/;"	f
InvokeFuncs	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:InvokeFuncs(funcList)$/;"	f
IsCached	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:IsCached(cache, szKey1, szKey2)$/;"	f
IsTypeInfoResolved	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! s:IsTypeInfoResolved(szTypeInfo)$/;"	f
IsUnnamedType	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:IsUnnamedType(tagItem)$/;"	f
IsValid	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:IsValid(fileName)$/;"	f
l:winnr	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let l:winnr = winnr()			$/;"	v
LeadingSpaceDisable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! LeadingSpaceDisable call <SID>LeadingSpaceDisable()$/;"	c
LeadingSpaceDisable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceDisable()$/;"	f
LeadingSpaceEnable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! LeadingSpaceEnable call <SID>LeadingSpaceEnable()$/;"	c
LeadingSpaceEnable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceEnable()$/;"	f
LeadingSpaceToggle	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! LeadingSpaceToggle call <SID>LeadingSpaceToggle()$/;"	c
LeadingSpaceToggle	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceToggle()$/;"	f
loaded_comments_plugin	plugin/script/bundle/comments/plugin/comments.vim	/^let loaded_comments_plugin="v2.10"$/;"	v
loaded_genutils	plugin/script/bundle/genutils/plugin/genutils.vim	/^let loaded_genutils = 205$/;"	v
loaded_srcexpl	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let loaded_srcexpl = 1$/;"	v
loaded_taglist	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	plugin/script/bundle/taglist/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	plugin/script/bundle/taglist/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
LocalSearchDecl	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:LocalSearchDecl(name)$/;"	f
LookupArgs	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:LookupArgs(pattern)$/;"	f
LookupBufs	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:LookupBufs(pattern)$/;"	f
LookupFile	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=file LookupFile :call$/;"	c
lookupfile#AcceptFile	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#AcceptFile(splitWin, key)$/;"	f
lookupfile#ClearCache	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#ClearCache()$/;"	f
lookupfile#CloseWindow	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#CloseWindow()$/;"	f
lookupfile#Complete	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#Complete(findstart, base)$/;"	f
lookupfile#ExpandCamelCase	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#ExpandCamelCase(str)$/;"	f
lookupfile#IsPopupHidden	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#IsPopupHidden()$/;"	f
lookupfile#LookupFile	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#LookupFile(showingFiller, ...)$/;"	f
lookupfile#OpenWindow	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#OpenWindow(bang, initPat)$/;"	f
LookupFileReset	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:LookupFileReset(force)$/;"	f
LookupFileSet	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:LookupFileSet()$/;"	f
LookupPath	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:LookupPath(pattern)$/;"	f
LookupReset	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:LookupReset()$/;"	f
LookupUsing	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:LookupUsing(ftr, bang, initPat, minPatLen)$/;"	f
LookupWalk	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:LookupWalk(pattern)$/;"	f
LUArgs	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=file LUArgs :call$/;"	c
LUBufs	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=file LUBufs :call$/;"	c
LUPath	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=file LUPath :call$/;"	c
LUTags	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=tag LUTags :call$/;"	c
LUWalk	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=dir LUWalk :call$/;"	c
Mark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^command! -nargs=? Mark call s:DoMark(<f-args>)$/;"	c
MarkCurrentWord	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:MarkCurrentWord()$/;"	f
MarkRegex	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:MarkRegex(...) " MarkRegex(regexp)$/;"	f
Match	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:Match(expr, pat, start)$/;"	f
MatchingExactCase	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:MatchingExactCase(filePat)$/;"	f
NotSupport	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:NotSupport()$/;"	f
no_vim	build_all.sh	/^function no_vim()$/;"	f
omni#common#debug#End	plugin/script/bundle/omnicppcomplete/autoload/omni/common/debug.vim	/^function! omni#common#debug#End()$/;"	f
omni#common#debug#Start	plugin/script/bundle/omnicppcomplete/autoload/omni/common/debug.vim	/^function! omni#common#debug#Start()$/;"	f
omni#common#debug#Trace	plugin/script/bundle/omnicppcomplete/autoload/omni/common/debug.vim	/^function! omni#common#debug#Trace(szFuncName, ...)$/;"	f
omni#common#utils#CompareNumber	plugin/script/bundle/omnicppcomplete/autoload/omni/common/utils.vim	/^function! omni#common#utils#CompareNumber(i1, i2)$/;"	f
omni#common#utils#GetWordUnderCursor	plugin/script/bundle/omnicppcomplete/autoload/omni/common/utils.vim	/^function! omni#common#utils#GetWordUnderCursor()$/;"	f
omni#common#utils#TagList	plugin/script/bundle/omnicppcomplete/autoload/omni/common/utils.vim	/^function! omni#common#utils#TagList(szTagQuery)$/;"	f
omni#common#utils#TagListNoThrow	plugin/script/bundle/omnicppcomplete/autoload/omni/common/utils.vim	/^function! omni#common#utils#TagListNoThrow(szTagQuery)$/;"	f
omni#cpp#complete#Init	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Init()$/;"	f
omni#cpp#complete#Main	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Main(findstart, base)$/;"	f
omni#cpp#includes#Display	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#Display()$/;"	f
omni#cpp#includes#GetList	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#GetList(...)$/;"	f
omni#cpp#items#Get	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! omni#cpp#items#Get(tokens, ...)$/;"	f
omni#cpp#items#ResolveItemsTypeInfo	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! omni#cpp#items#ResolveItemsTypeInfo(contextStack, items)$/;"	f
omni#cpp#maycomplete#Arrow	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Arrow()$/;"	f
omni#cpp#maycomplete#Complete	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Complete()$/;"	f
omni#cpp#maycomplete#Dot	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Dot()$/;"	f
omni#cpp#maycomplete#Scope	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Scope()$/;"	f
omni#cpp#namespaces#GetContexts	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetContexts()$/;"	f
omni#cpp#namespaces#GetListFromCurrentBuffer	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetListFromCurrentBuffer(...)$/;"	f
omni#cpp#namespaces#GetMapFromBuffer	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromBuffer(szFilePath, ...)$/;"	f
omni#cpp#namespaces#GetMapFromCurrentBuffer	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromCurrentBuffer()$/;"	f
omni#cpp#namespaces#GetUsingNamespaces	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetUsingNamespaces()$/;"	f
omni#cpp#namespaces#ResolveAlias	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAlias(mapNamespaceAlias, szNamespace)$/;"	f
omni#cpp#namespaces#ResolveAll	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAll(namespacesUsed)$/;"	f
omni#cpp#settings#Init	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/settings.vim	/^function! omni#cpp#settings#Init()$/;"	f
omni#cpp#tokenizer#Tokenize	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^function! omni#cpp#tokenizer#Tokenize(szCode)$/;"	f
omni#cpp#utils#BuildParenthesisGroups	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#BuildParenthesisGroups(tokens)$/;"	f
omni#cpp#utils#CreateTypeInfo	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#CreateTypeInfo(param)$/;"	f
omni#cpp#utils#expIgnoreComments	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#expIgnoreComments = 'getline(".") =~ g:omni#cpp#utils#reIgnoreComment'$/;"	v
omni#cpp#utils#ExtractCmdFromTagItem	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractCmdFromTagItem(tagItem)$/;"	f
omni#cpp#utils#ExtractScope	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractScope(tagItem)$/;"	f
omni#cpp#utils#ExtractTypeInfoFromTag	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTag(tagItem)$/;"	f
omni#cpp#utils#ExtractTypeInfoFromTokens	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTokens(tokens)$/;"	f
omni#cpp#utils#GetCastType	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCastType(tokens)$/;"	f
omni#cpp#utils#GetClassInheritanceList	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetClassInheritanceList(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetCode	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCode(posStart, posEnd)$/;"	f
omni#cpp#utils#GetCodeFromLine	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCodeFromLine(szSingleLine)$/;"	f
omni#cpp#utils#GetPreviewWindowStringFromTagItem	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetPreviewWindowStringFromTagItem(tagItem)$/;"	f
omni#cpp#utils#GetResolvedTagItem	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTagItem(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetResolvedTags	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTags(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetTypeInfoString	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetTypeInfoString(typeInfo)$/;"	f
omni#cpp#utils#IsCursorInCommentOrString	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsCursorInCommentOrString()$/;"	f
omni#cpp#utils#IsTypeInfoValid	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsTypeInfoValid(typeInfo)$/;"	f
omni#cpp#utils#reIgnoreComment	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#reIgnoreComment = escape('\\\/\\\/\\|\\\/\\*\\|\\*\\\/', '*\/\\')$/;"	v
omni#cpp#utils#ResolveFilePath	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ResolveFilePath(szFile)$/;"	f
omni#cpp#utils#SimplifyParenthesis	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyParenthesis(tokens)$/;"	f
omni#cpp#utils#SimplifyScope	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyScope(szScope)$/;"	f
omni#cpp#utils#szEscapedCharacters	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#szEscapedCharacters = ' %#'$/;"	v
omni#cpp#utils#TokenizeCurrentInstruction	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstruction(...)$/;"	f
omni#cpp#utils#TokenizeCurrentInstructionUntilWord	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstructionUntilWord()$/;"	f
only_vim	build_all.sh	/^function only_vim()$/;"	f
OpenCurFile	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:OpenCurFile(splitWin)$/;"	f
pathogen#cycle_filetype	plugin/script/autoload/pathogen.vim	/^function! pathogen#cycle_filetype() abort$/;"	f
pathogen#execute	plugin/script/autoload/pathogen.vim	/^function! pathogen#execute(...) abort$/;"	f
pathogen#expand	plugin/script/autoload/pathogen.vim	/^function! pathogen#expand(pattern, ...) abort$/;"	f
pathogen#fnameescape	plugin/script/autoload/pathogen.vim	/^function! pathogen#fnameescape(string) abort$/;"	f
pathogen#glob	plugin/script/autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort$/;"	f
pathogen#glob_directories	plugin/script/autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort$/;"	f
pathogen#helptags	plugin/script/autoload/pathogen.vim	/^function! pathogen#helptags() abort$/;"	f
pathogen#incubate	plugin/script/autoload/pathogen.vim	/^function! pathogen#incubate(...) abort$/;"	f
pathogen#infect	plugin/script/autoload/pathogen.vim	/^function! pathogen#infect(...) abort$/;"	f
pathogen#interpose	plugin/script/autoload/pathogen.vim	/^function! pathogen#interpose(name) abort$/;"	f
pathogen#is_absolute	plugin/script/autoload/pathogen.vim	/^function! pathogen#is_absolute(path) abort$/;"	f
pathogen#is_disabled	plugin/script/autoload/pathogen.vim	/^function! pathogen#is_disabled(path) abort$/;"	f
pathogen#join	plugin/script/autoload/pathogen.vim	/^function! pathogen#join(...) abort$/;"	f
pathogen#legacyjoin	plugin/script/autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort$/;"	f
pathogen#runtime_append_all_bundles	plugin/script/autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) abort$/;"	f
pathogen#runtime_findfile	plugin/script/autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) abort$/;"	f
pathogen#runtime_prepend_subdirectories	plugin/script/autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) abort$/;"	f
pathogen#separator	plugin/script/autoload/pathogen.vim	/^function! pathogen#separator() abort$/;"	f
pathogen#slash	plugin/script/autoload/pathogen.vim	/^function! pathogen#slash() abort$/;"	f
pathogen#split	plugin/script/autoload/pathogen.vim	/^function! pathogen#split(path) abort$/;"	f
pathogen#surround	plugin/script/autoload/pathogen.vim	/^function! pathogen#surround(path) abort$/;"	f
pathogen#uniq	plugin/script/autoload/pathogen.vim	/^function! pathogen#uniq(list) abort$/;"	f
PersistentVarName	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:PersistentVarName(pluginName, persistentVar)$/;"	f
PrevWord	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:PrevWord()$/;"	f
QSortR	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:QSortR(start, end, cmp, direction, accessor, swapper, context)$/;"	f
RangeCommentLine	plugin/script/bundle/comments/plugin/comments.vim	/^function! RangeCommentLine()$/;"	f
RangeUnCommentLine	plugin/script/bundle/comments/plugin/comments.vim	/^function! RangeUnCommentLine()$/;"	f
RemapLookupFile	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:RemapLookupFile(cmd)$/;"	f
RemoveCComments	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! s:RemoveCComments(szLine)$/;"	f
ResetWidth	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:ResetWidth(...)$/;"	f
ResolveAliasInNamespaceList	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasInNamespaceList(mapNamespaceAlias, listNamespaces)$/;"	f
ResolveAliasKey	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKey(mapNamespaceAlias, szAlias)$/;"	f
ResolveAliasKeys	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKeys(mapNamespaceAlias)$/;"	f
ResolveCast	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:ResolveCast(tokens, startChar, endChar)$/;"	f
ResolveCCast	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:ResolveCCast(tokens)$/;"	f
ResolveCppCast	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:ResolveCppCast(tokens)$/;"	f
ResolveNamespace	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveNamespace(namespace, mapCurrentContexts)$/;"	f
ResolveSymbol	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:ResolveSymbol(contextStack, szSymbol, szTagFilter)$/;"	f
RestoreWindowSettings2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:RestoreWindowSettings2(id)$/;"	f
s:asyncrun_support	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^		let s:asyncrun_support = 1$/;"	v
s:asyncrun_support	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:asyncrun_support = 1$/;"	v
s:asyncrun_support	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:asyncrun_support = 0$/;"	v
s:asyncrun_windows	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:asyncrun_windows = 1$/;"	v
s:asyncrun_windows	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:asyncrun_windows = 0$/;"	v
s:async_code	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_code = 0$/;"	v
s:async_congest	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_congest = 0$/;"	v
s:async_congest	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_congest = has('patch-8.0.100')? 1 : 0$/;"	v
s:async_congest	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_congest = 0$/;"	v
s:async_debug	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_debug = 0$/;"	v
s:async_efm	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_efm = &errorformat$/;"	v
s:async_head	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_head = 0$/;"	v
s:async_hold	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_hold = (v:version >= 800 || has('patch-7.4.2100'))? 0 : 1$/;"	v
s:async_hold	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_hold = 1$/;"	v
s:async_hold	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_hold = 0$/;"	v
s:async_info	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_info = { 'text':"", 'post':'', 'postsave':'' }$/;"	v
s:async_nvim	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_nvim = has('nvim')? 1 : 0$/;"	v
s:async_output	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_output = {}$/;"	v
s:async_quick	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_quick = (v:version >= 800 || has('patch-7.4.1997'))? 1 : 0$/;"	v
s:async_quick	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_quick = 0$/;"	v
s:async_quick	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_quick = 0$/;"	v
s:async_scroll	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_scroll = 0$/;"	v
s:async_start	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_start = 0.0$/;"	v
s:async_state	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_state = 0$/;"	v
s:async_tail	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_tail = 0$/;"	v
s:baseBufNr	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^let s:baseBufNr = 0$/;"	v
s:bMayComplete	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:bMayComplete = 0$/;"	v
s:bufList	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^let s:bufList = [1]$/;"	v
s:C	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:C = 100$/;"	v
s:CACHE_DEBUG_TRACE	plugin/script/bundle/omnicppcomplete/autoload/omni/common/debug.vim	/^let s:CACHE_DEBUG_TRACE = []$/;"	v
s:CACHE_OVERLOADED_FUNCTIONS	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:CACHE_OVERLOADED_FUNCTIONS = {}$/;"	v
s:CACHE_TAG_ENV	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_ENV = ''$/;"	v
s:CACHE_TAG_FILES	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_FILES = {}$/;"	v
s:CACHE_TAG_POPUP_ITEMS	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_POPUP_ITEMS = {}$/;"	v
s:cpo_save	plugin/script/bundle/taglist/plugin/taglist.vim	/^    let s:cpo_save = &cpo$/;"	v
s:cppKeyword	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:cppKeyword = ['asm', 'auto', 'bool', 'break', 'case', 'catch', 'char', 'class', 'const', 'const_cast', 'continue', 'default', 'delete', 'do', 'double', 'dynamic_cast', 'else', 'enum', 'explicit', 'export', 'extern', 'false', 'float', 'for', 'friend', 'goto', 'if', 'inline', 'int', 'long', 'mutable', 'namespace', 'new', 'operator', 'private', 'protected', 'public', 'register', 'reinterpret_cast', 'return', 'short', 'signed', 'sizeof', 'static', 'static_cast', 'struct', 'switch', 'template', 'this', 'throw', 'true', 'try', 'typedef', 'typeid', 'typename', 'union', 'unsigned', 'using', 'virtual', 'void', 'volatile', 'wchar_t', 'while', 'and', 'and_eq', 'bitand', 'bitor', 'compl', 'not', 'not_eq', 'or', 'or_eq', 'xor', 'xor_eq']$/;"	v
s:cppOperatorPunctuator	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:cppOperatorPunctuator = ['->*', '->', '--', '-=', '-', '!=', '!', '##', '#', '%:%:', '%=', '%>', '%:', '%', '&&', '&=', '&', '(', ')', '*=', '*', ',', '...', '.*', '.', '\/=', '\/', '::', ':>', ':', ';', '?', '[', ']', '^=', '^', '{', '||', '|=', '|', '}', '~', '++', '+=', '+', '<<=', '<%', '<:', '<<', '<=', '<', '==', '=', '>>=', '>>', '>=', '>']$/;"	v
s:D	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:D = 500$/;"	v
s:defFCShellInstalled	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:defFCShellInstalled = 0$/;"	v
s:done_bundles	plugin/script/autoload/pathogen.vim	/^let s:done_bundles = {}$/;"	v
s:fcShellPreFuncs	plugin/script/bundle/genutils/autoload/genutils.vim	/^  let s:fcShellPreFuncs = {}$/;"	v
s:fileWild	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^let s:fileWild = {}$/;"	v
s:hasPreviewWindow	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindow = match(&completeopt, 'preview')>=0$/;"	v
s:hasPreviewWindowOld	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindowOld = s:hasPreviewWindow$/;"	v
s:I	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:I = 1$/;"	v
s:L	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:L = 50$/;"	v
s:M	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:M = 1000$/;"	v
s:makeArgumentList	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:makeArgumentList = ''$/;"	v
s:makeArgumentString	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:makeArgumentString = ''$/;"	v
s:menu_char_prefix	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:myBufNum	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^  let s:myBufNum = -1$/;"	v
s:mySNR	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:mySNR = ''$/;"	v
s:mySNR	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^let s:mySNR = ''$/;"	v
s:notifyWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:notifyWindow = {}$/;"	v
s:OmniCpp_ShowAccess	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowAccess = g:OmniCpp_ShowAccess$/;"	v
s:OmniCpp_ShowPrototypeInAbbr	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowPrototypeInAbbr = g:OmniCpp_ShowPrototypeInAbbr$/;"	v
s:OmniCpp_ShowScopeInAbbr	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowScopeInAbbr = g:OmniCpp_ShowScopeInAbbr$/;"	v
s:popupIsHidden	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^  let s:popupIsHidden = 0$/;"	v
s:popupItemResultList	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:popupItemResultList = []$/;"	v
s:quickfix_open	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:quickfix_open = 0$/;"	v
s:reCComment	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:reCComment = '\\\/\\*\\|\\*\\\/'$/;"	v
s:reComment	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:reComment = s:reCComment.'\\|'.s:reCppComment$/;"	v
s:reCppComment	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:reCppComment = '\\\/\\\/'$/;"	v
s:reCppKeyword	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:reCppKeyword = '\\C\\<'.join(s:cppKeyword, '\\>\\|\\<').'\\>'$/;"	v
s:reCppOperatorOrPunctuator	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:reCppOperatorOrPunctuator = escape(join(s:cppOperatorPunctuator, '\\|'), '*.\/^~[]')$/;"	v
s:reIncludeFilePart	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^let s:reIncludeFilePart = '\\(<\\|"\\)\\(\\f\\|\\s\\)\\+\\(>\\|"\\)'$/;"	v
s:rePreprocIncludeFile	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludeFile = s:rePreprocIncludePart . s:reIncludeFilePart$/;"	v
s:rePreprocIncludePart	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludePart = '\\C#\\s*include\\s*'$/;"	v
s:save_cpo	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/mark.vim/plugin/mark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:selection	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:selection = -1$/;"	v
s:spacer	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:spacer= "                                                               ".$/;"	v
s:SrcExpl_bufName	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_bufName = 'Source_Explorer'$/;"	v
s:SrcExpl_isDebug	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_isDebug = 0$/;"	v
s:SrcExpl_isRunning	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_isRunning = 0$/;"	v
s:SrcExpl_logPath	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_logPath = '~\/srcexpl.log'$/;"	v
s:SrcExpl_pluginName	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_pluginName = 'Source Explorer'$/;"	v
s:SrcExpl_pluginVer	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_pluginVer = 5.3$/;"	v
s:SrcExpl_winName	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_winName = 'SrcExpl'$/;"	v
s:SrcExpl_winVar	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_winVar = -1$/;"	v
s:szCurrentWorkingDir	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:szCurrentWorkingDir = getcwd()$/;"	v
s:tlist_app_name	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_ant_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_ant_settings = 'ant;p:projects;t:targets'$/;"	v
s:tlist_def_asm_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings =$/;"	v
s:tlist_def_aspvbs_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings =$/;"	v
s:tlist_def_awk_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_basic_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_basic_settings =$/;"	v
s:tlist_def_beta_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_cobol_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_csh_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_cs_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_c_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_dosbatch_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_dosbatch_settings = 'dosbatch;l:labels;v:variables'$/;"	v
s:tlist_def_d_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_d_settings = 'c++;n:namespace;v:variable;t:typedef;' .$/;"	v
s:tlist_def_eiffel_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_flex_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_flex_settings = 'flex;v:global;c:classes;p:properties;'.$/;"	v
s:tlist_def_fortran_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_go_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_go_settings = 'go;f:function;p:package;t:struct'$/;"	v
s:tlist_def_html_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:function'$/;"	v
s:tlist_def_javascript_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_javascript_settings =$/;"	v
s:tlist_def_java_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_lisp_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_matlab_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_matlab_settings = 'matlab;f:function'$/;"	v
s:tlist_def_ocamal_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_ocamal_settings = 'ocamal;M:module;v:global;t:type;'.$/;"	v
s:tlist_def_pascal_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_php_settings =$/;"	v
s:tlist_def_python_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;f:functions;' .$/;"	v
s:tlist_def_tcl_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_tex_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_tex_settings = 'tex;c:chapters;s:sections;u:subsections;'.$/;"	v
s:tlist_def_vera_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vhdl_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_vhdl_settings = 'vhdl;c:constant;t:type;T:subtype;r:record;e:entity;f:function;p:procedure;P:package'$/;"	v
s:tlist_def_vim_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_vim_settings =$/;"	v
s:tlist_def_yacc_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_names	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_file_name_idx_cache	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_ftype_count	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	plugin/script/bundle/taglist/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	plugin/script/bundle/taglist/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:Tlist_Skip_Refresh	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:tlist_winsize_chgd	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:tlist_win_maximized	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:UNPROTECTED_CHAR_PRFX	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:UNPROTECTED_CHAR_PRFX = '\\%(\\%([^\\\\]\\|^\\)\\\\\\%(\\\\\\\\\\)*\\)\\@<!' " Doesn't eat slashes.$/;"	v
s:V	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:V = 5$/;"	v
s:windowName	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^  let s:windowName = '[Lookup File]'$/;"	v
s:X	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:X = 10$/;"	v
SaveSett	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:SaveSett(sett)$/;"	f
ScriptWrite	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:ScriptWrite(command, pause)$/;"	f
script_plugin	build_all.sh	/^function script_plugin()$/;"	f
script_tar_bz2_plugin	build_all.sh	/^function script_tar_bz2_plugin()$/;"	f
script_tar_gz_plugin	build_all.sh	/^function script_tar_gz_plugin()$/;"	f
script_tar_plugin	build_all.sh	/^function script_tar_plugin()$/;"	f
script_vim_plugin	build_all.sh	/^function script_vim_plugin()$/;"	f
script_zip_plugin	build_all.sh	/^function script_zip_plugin()$/;"	f
SearchAnyMark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:SearchAnyMark(...) " SearchAnyMark(flags)$/;"	f
SearchCurrentMark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:SearchCurrentMark(...) " SearchCurrentMark(flags)$/;"	f
SearchDecl	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:SearchDecl(szVariable)$/;"	f
SearchGlobalMembers	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:SearchGlobalMembers(szBase)$/;"	f
SearchMembers	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:SearchMembers(resolvedTagItem, szBase)$/;"	f
SearchNext	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:SearchNext(...) " SearchNext(flags)$/;"	f
SearchTypeInfoOfDecl	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:SearchTypeInfoOfDecl(szVariable)$/;"	f
SetIndentLine	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:SetIndentLine()$/;"	f
Setup	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:Setup()$/;"	f
SetupBuf	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:SetupBuf()$/;"	f
ShowFiller	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:ShowFiller()$/;"	f
silent!	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	noautocmd silent! exec ''.l:winnr.'wincmd w'$/;"	m
SNR	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:SNR()$/;"	f
SNR	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:SNR()$/;"	f
source_plugin	build_all.sh	/^function source_plugin()$/;"	f
source_tar_bz2_plugin	build_all.sh	/^function source_tar_bz2_plugin()$/;"	f
source_tar_gz_plugin	build_all.sh	/^function source_tar_gz_plugin()$/;"	f
source_tar_plugin	build_all.sh	/^function source_tar_plugin()$/;"	f
source_zip_plugin	build_all.sh	/^function source_zip_plugin()$/;"	f
SrcExpl	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^command! -nargs=0 -bar SrcExpl$/;"	c
SrcExpl	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl()$/;"	f
SrcExplClose	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^command! -nargs=0 -bar SrcExplClose$/;"	c
SrcExplToggle	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^command! -nargs=0 -bar SrcExplToggle$/;"	c
SrcExpl_AdaptPlugins	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_AdaptPlugins()$/;"	f
SrcExpl_CleanUp	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_CleanUp()$/;"	f
SrcExpl_Close	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_Close()$/;"	f
SrcExpl_ColorExpr	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ColorExpr()$/;"	f
SrcExpl_ColorLine	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ColorLine()$/;"	f
SrcExpl_Debug	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_Debug(log)$/;"	f
SrcExpl_GetEditWin	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GetEditWin()$/;"	f
SrcExpl_GetInput	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GetInput(note)$/;"	f
SrcExpl_GetMarkList	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GetMarkList()$/;"	f
SrcExpl_GetSymbol	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GetSymbol()$/;"	f
SrcExpl_GetVer	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_GetVer()$/;"	f
SrcExpl_GetWin	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_GetWin()$/;"	f
SrcExpl_GoBack	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_GoBack()$/;"	f
SrcExpl_GoDecl	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GoDecl(expr)$/;"	f
SrcExpl_Init	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_Init()$/;"	f
SrcExpl_Jump	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_Jump()$/;"	f
SrcExpl_JumpDef	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_JumpDef(dir)$/;"	f
SrcExpl_ListMultiDefs	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ListMultiDefs(list, len)$/;"	f
SrcExpl_MatchExpr	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_MatchExpr()$/;"	f
SrcExpl_NextDef	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_NextDef()$/;"	f
SrcExpl_PrevDef	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_PrevDef()$/;"	f
SrcExpl_Refresh	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_Refresh()$/;"	f
SrcExpl_ReportErr	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ReportErr(err)$/;"	f
SrcExpl_SelToJump	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_SelToJump(dir)$/;"	f
SrcExpl_SetCurrMark	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_SetCurrMark()$/;"	f
SrcExpl_SetMarkList	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_SetMarkList()$/;"	f
SrcExpl_TagSth	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_TagSth(expr)$/;"	f
SrcExpl_Toggle	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_Toggle()$/;"	f
SrcExpl_UpdateTags	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_UpdateTags()$/;"	f
SrcExpl_ViewOneDef	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ViewOneDef(fpath, excmd)$/;"	f
SrcExpl_WinActive	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinActive()$/;"	f
SrcExpl_WinClose	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinClose()$/;"	f
SrcExpl_WinDelete	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinDelete()$/;"	f
SrcExpl_WinEdit	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinEdit(wincmd)$/;"	f
SrcExpl_WinEnter	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinEnter()$/;"	f
SrcExpl_WinGo	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinGo()$/;"	f
SrcExpl_WinNew	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinNew(wincmd)$/;"	f
SrcExpl_WinOpen	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinOpen()$/;"	f
SrcExpl_WinPrompt	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinPrompt(prompt)$/;"	f
StringReplace	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:StringReplace(text, old, new)$/;"	f
StringStrip	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:StringStrip(text)$/;"	f
TagList_IsValid	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_title	plugin/script/bundle/taglist/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TagList_WrapUp	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagPopupList	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:TagPopupList(szTypeName, szBase)$/;"	f
Tlist	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Create_Folds_For_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Create_Folds_For_File(fidx)$/;"	f
Tlist_Ctags_Cmd	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tagtype	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_Extract_Tag_Scope	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_FileType_Init	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_Filenames	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Get_Filenames()$/;"	f
Tlist_Get_File_Index	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Tagname_By_Line	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Get_Tag_Linenum	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_Scope	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Scope(fidx, tidx)$/;"	f
Tlist_Get_Tag_SearchPat	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_Filelist	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Process_File_Always	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
tlist_pyrex_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let tlist_pyrex_settings='python;c:classe;m:memder;f:function'$/;"	v
Tlist_Refresh	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_User_Removed_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Use_Horiz_Window	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_Vim_Session_Load	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_Window_Check_Auto_Open	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
Tlist_WinHeight	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
TokensToString	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:TokensToString(tokens)$/;"	f
TranslateAlpha	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:TranslateAlpha(pat)$/;"	f
TranslateFileRegex	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:TranslateFileRegex(filePat)$/;"	f
TranslateFileWild	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:TranslateFileWild(fileWild)$/;"	f
UnCommentLine	plugin/script/bundle/comments/plugin/comments.vim	/^function! UnCommentLine()$/;"	f
UpdateMark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:UpdateMark()$/;"	f
vimtool_finish	build_all.sh	/^function vimtool_finish()$/;"	f
warn	plugin/script/autoload/pathogen.vim	/^function! s:warn(msg) abort$/;"	f
windo	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	noautocmd windo call s:WindowCheck(0)$/;"	m
windo	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	noautocmd windo call s:WindowCheck(1)$/;"	m
_makeArgumentList	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:_makeArgumentList()$/;"	f
_makeArgumentString	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:_makeArgumentString()$/;"	f
