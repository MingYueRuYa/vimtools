!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
#	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> # :if !<sid>SearchNext("b")<bar>execute "norm! #"<bar>endif<cr>$/;"	m
$DISPLAY	plugin/script/bundle/deoplete.nvim/vim-themis/macros/themis_startup.vim	/^  let $DISPLAY = ''$/;"	v
*	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> * :if !<sid>SearchNext()<bar>execute "norm! *"<bar>endif<cr>$/;"	m
<C-C>	plugin/script/bundle/comments/plugin/comments.vim	/^noremap  <silent> <C-C> :call CommentLine()<CR>$/;"	m
<C-C>	plugin/script/bundle/comments/plugin/comments.vim	/^vnoremap <silent> <C-C> :call RangeCommentLine()<CR>$/;"	m
<C-X>	plugin/script/bundle/comments/plugin/comments.vim	/^noremap  <silent> <C-X> :call UnCommentLine()<CR>$/;"	m
<C-X>	plugin/script/bundle/comments/plugin/comments.vim	/^vnoremap <silent> <C-X> :call RangeUnCommentLine()<CR>$/;"	m
<F5>	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^      imap <unique> <expr> <silent> <F5> (pumvisible() ? "\\<Plug>LookupFileCE" :$/;"	m
<F5>	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^      nmap <unique> <silent> <F5> <Plug>LookupFile$/;"	m
<leader>#	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <leader># :call <sid>SearchCurrentMark("b")<cr>$/;"	m
<leader>*	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <leader>* :call <sid>SearchCurrentMark()<cr>$/;"	m
<leader>/	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <leader>\/ :call <sid>SearchAnyMark()<cr>$/;"	m
<leader>?	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <leader>? :call <sid>SearchAnyMark("b")<cr>$/;"	m
<leader>m	plugin/script/bundle/mark.vim/plugin/mark.vim	/^	nmap <unique> <silent> <leader>m <Plug>MarkSet$/;"	m
<leader>m	plugin/script/bundle/mark.vim/plugin/mark.vim	/^	vmap <unique> <silent> <leader>m <Plug>MarkSet$/;"	m
<leader>n	plugin/script/bundle/mark.vim/plugin/mark.vim	/^	nmap <unique> <silent> <leader>n <Plug>MarkClear$/;"	m
<leader>r	plugin/script/bundle/mark.vim/plugin/mark.vim	/^	nmap <unique> <silent> <leader>r <Plug>MarkRegex$/;"	m
<leader>r	plugin/script/bundle/mark.vim/plugin/mark.vim	/^	vmap <unique> <silent> <leader>r <Plug>MarkRegex$/;"	m
<Plug>(vimshell_create)	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^nnoremap <silent> <Plug>(vimshell_create)$/;"	m
<Plug>(vimshell_split_create)	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^nnoremap <silent> <Plug>(vimshell_split_create)$/;"	m
<Plug>(vimshell_split_switch)	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^nnoremap <silent> <Plug>(vimshell_split_switch)$/;"	m
<Plug>(vimshell_switch)	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^nnoremap <silent> <Plug>(vimshell_switch)$/;"	m
<Plug>LookupFile	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  noremap <script> <silent> <Plug>LookupFile :LookupFile<CR>$/;"	m
<Plug>LookupFileCE	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^      inoremap <Plug>LookupFileCE <C-E>$/;"	m
<Plug>MarkClear	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkClear :call$/;"	m
<Plug>MarkRegex	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkRegex :call$/;"	m
<Plug>MarkRegex	plugin/script/bundle/mark.vim/plugin/mark.vim	/^vnoremap <silent> <Plug>MarkRegex <c-\\><c-n>:call$/;"	m
<Plug>MarkSet	plugin/script/bundle/mark.vim/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSet   :call$/;"	m
<Plug>MarkSet	plugin/script/bundle/mark.vim/plugin/mark.vim	/^vnoremap <silent> <Plug>MarkSet   <c-\\><c-n>:call$/;"	m
<SID>xx	plugin/script/bundle/taglist/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
Abs	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:Abs(num)$/;"	f
AbsoluteTreeRoot	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:AbsoluteTreeRoot()$/;"	f
AcceptFile	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:AcceptFile(splitWin, key)$/;"	f
ActivateNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:ActivateNode(forceKeepWindowOpen)$/;"	f
AddApacheLicense	plugin/script/bundle/vim-header/plugin/header.vim	/^command! AddApacheLicense call header#add_header(2, 'apache', 0)$/;"	c
AddCleanup	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:AddCleanup(cmd)$/;"	f
AddGNULicense	plugin/script/bundle/vim-header/plugin/header.vim	/^command! AddGNULicense call header#add_header(2, 'gnu', 0)$/;"	c
AddHeader	plugin/script/bundle/vim-header/plugin/header.vim	/^command! AddHeader call header#add_header(0, 0, 0)$/;"	c
AddMinHeader	plugin/script/bundle/vim-header/plugin/header.vim	/^command! AddMinHeader call header#add_header(1, 0, 0)$/;"	c
AddMITLicense	plugin/script/bundle/vim-header/plugin/header.vim	/^command! AddMITLicense call header#add_header(2, 'mit', 0)$/;"	c
AddPattern	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:AddPattern()$/;"	f
add_header	plugin/script/bundle/vim-header/autoload/header.vim	/^fun s:add_header()$/;"	f
add_license_header	plugin/script/bundle/vim-header/autoload/header.vim	/^fun s:add_license_header(license_name)$/;"	f
add_min_header	plugin/script/bundle/vim-header/autoload/header.vim	/^fun s:add_min_header()$/;"	f
add_tag_recursive	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:add_tag_recursive(parent, taginfo, pathlist) abort$/;"	f
all	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:all(f, xs)$/;"	f
all	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
all	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
analyze_dictionary_variable_line	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_dictionary_variable_line(line, keyword_dict, var_name) "{{{$/;"	f
analyze_function_line	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_function_line(line, keyword_dict, prototype) "{{{$/;"	f
analyze_variable_line	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_variable_line(line, keyword_dict) "{{{$/;"	f
and	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:and(xs)$/;"	f
and	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:and(xs) abort$/;"	f
and	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:and(xs) abort$/;"	f
any	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:any(f, xs)$/;"	f
any	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
any	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
AnyMark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:AnyMark()$/;"	f
append_end	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! s:append_end() abort "{{{$/;"	f
append_end	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:append_end() abort "{{{$/;"	f
append_enter	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! s:append_enter() abort "{{{$/;"	f
append_enter	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:append_enter() abort "{{{$/;"	f
append_rtp	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:append_rtp(path) abort$/;"	f
append_rtp	plugin/script/bundle/deoplete.nvim/vim-themis/macros/themis_startup.vim	/^function! s:append_rtp(path) abort$/;"	f
Assert.can_access_to_function_local_scope	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^    function! Assert.can_access_to_function_local_scope() abort$/;"	f
Assert.can_access_to_with_scope	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^    function! Assert.can_access_to_with_scope() abort$/;"	f
Assert.can_use_double_quote_in_argument	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^    function! Assert.can_use_double_quote_in_argument() abort$/;"	f
Assert.throw_a_report_when_the_argument_is_not_truthy	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^    function! Assert.throw_a_report_when_the_argument_is_not_truthy() abort$/;"	f
assert_compare	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_compare(left, expr, right, ...) abort$/;"	f
assert_empty	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_empty(expr, ...) abort$/;"	f
assert_equals	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_equals(actual, expect, ...) abort$/;"	f
assert_exists	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_exists(expr, ...) abort$/;"	f
assert_fail	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_fail(mes) abort$/;"	f
assert_false	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_false(value, ...) abort$/;"	f
assert_falsy	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_falsy(value, ...) abort$/;"	f
assert_has_key	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_has_key(value, key, ...) abort$/;"	f
assert_is_dictionary	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_is_dictionary(value, ...) abort$/;"	f
assert_is_float	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_is_float(value, ...) abort$/;"	f
assert_is_function	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_is_function(value, ...) abort$/;"	f
assert_is_list	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_is_list(value, ...) abort$/;"	f
assert_is_not_dictionary	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_is_not_dictionary(value, ...) abort$/;"	f
assert_is_not_float	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_is_not_float(value, ...) abort$/;"	f
assert_is_not_function	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_is_not_function(value, ...) abort$/;"	f
assert_is_not_list	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_is_not_list(value, ...) abort$/;"	f
assert_is_not_number	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_is_not_number(value, ...) abort$/;"	f
assert_is_not_string	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_is_not_string(value, ...) abort$/;"	f
assert_is_number	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_is_number(value, ...) abort$/;"	f
assert_is_string	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_is_string(value, ...) abort$/;"	f
assert_key_exists	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_key_exists(value, key, ...) abort$/;"	f
assert_key_not_exists	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_key_not_exists(value, key, ...) abort$/;"	f
assert_length_of	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_length_of(value, length, ...) abort$/;"	f
assert_match	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_match(actual, pattern, ...) abort$/;"	f
assert_not_empty	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_not_empty(expr, ...) abort$/;"	f
assert_not_equals	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_not_equals(actual, expect, ...) abort$/;"	f
assert_not_match	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_not_match(actual, pattern, ...) abort$/;"	f
assert_not_same	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_not_same(actual, expect, ...) abort$/;"	f
assert_same	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_same(actual, expect, ...) abort$/;"	f
assert_skip	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_skip(mes) abort$/;"	f
assert_todo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_todo(...) abort$/;"	f
assert_true	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_true(value, ...) abort$/;"	f
assert_truthy	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_truthy(value, ...) abort$/;"	f
assert_type_of	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:assert_type_of(value, names, ...) abort$/;"	f
AsyncRun	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^command! -bang -nargs=+ -complete=file AsyncRun $/;"	c
asyncrun#quickfix_toggle	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#quickfix_toggle(size, ...)$/;"	f
asyncrun#run	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#run(bang, opts, args)$/;"	f
asyncrun#status	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#status()$/;"	f
asyncrun#stop	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#stop(bang)$/;"	f
asyncrun#version	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#version()$/;"	f
AsyncRun_Job_AutoCmd	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_AutoCmd(mode, auto)$/;"	f
AsyncRun_Job_AutoScroll	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_AutoScroll()$/;"	f
AsyncRun_Job_CheckScroll	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_CheckScroll()$/;"	f
AsyncRun_Job_Cursor	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Cursor()$/;"	f
AsyncRun_Job_NeoVim	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_NeoVim(job_id, data, event)$/;"	f
AsyncRun_Job_OnCallback	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnCallback(channel, text)$/;"	f
AsyncRun_Job_OnClose	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnClose(channel)$/;"	f
AsyncRun_Job_OnExit	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnExit(job, message)$/;"	f
AsyncRun_Job_OnFinish	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnFinish()$/;"	f
AsyncRun_Job_OnTimer	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! g:AsyncRun_Job_OnTimer(id)$/;"	f
AsyncRun_Job_QuickReset	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_QuickReset()$/;"	f
AsyncRun_Job_Scroll	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Scroll()$/;"	f
AsyncRun_Job_Start	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Start(cmd)$/;"	f
AsyncRun_Job_Status	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Status()$/;"	f
AsyncRun_Job_Stop	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Stop(how)$/;"	f
AsyncRun_Job_Update	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Update(count)$/;"	f
AsyncRun_Job_ViewReset	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_ViewReset()$/;"	f
AsyncStop	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^command! -bang -nargs=0 AsyncStop call asyncrun#stop('<bang>')$/;"	c
async_load	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! s:async_load(argv, cache_dir, filename) "{{{$/;"	f
async_load	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! s:async_load(argv, cache_dir, filename) abort "{{{$/;"	f
AutoCmd	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AutoCmd(name)$/;"	f
AutoUpdate	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force, ...) abort$/;"	f
b:current_syntax	plugin/script/bundle/deoplete.nvim/vim-themis/syntax/vimspec.vim	/^let b:current_syntax = 'vimspec'$/;"	v
b:current_syntax	plugin/script/bundle/tagbar/syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:current_syntax	plugin/script/bundle/vimshell.vim/syntax/vimshell.vim	/^let b:current_syntax = 'vimshell'$/;"	v
b:current_syntax	plugin/script/bundle/vimshell.vim/syntax/vimshrc.vim	/^let b:current_syntax = 'vimshrc'$/;"	v
b:did_fold	plugin/script/bundle/deoplete.nvim/vim-themis/ftplugin/vimspec/foldexpr.vim	/^let b:did_fold = 1$/;"	v
b:did_ftplugin	plugin/script/bundle/deoplete.nvim/vim-themis/ftplugin/vimspec.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugin/script/bundle/Vundle.vim/ftplugin/vundlelog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	plugin/script/bundle/deoplete.nvim/vim-themis/indent/vimspec.vim	/^let b:did_indent = 1$/;"	v
b:match_words	plugin/script/bundle/deoplete.nvim/vim-themis/ftplugin/vimspec.vim	/^  let b:match_words .= ','$/;"	v
b:match_words	plugin/script/bundle/deoplete.nvim/vim-themis/ftplugin/vimspec.vim	/^  let b:match_words = ''$/;"	v
b:match_words	plugin/script/bundle/deoplete.nvim/vim-themis/ftplugin/vimspec.vim	/^let b:match_words .= '\\%(^\\s*\\)\\@<=\\<\\%([Dd]escribe\\|[Cc]ontext\\|[Ii]t\\|[Bb]efore\\|[Aa]fter\\)\\>:\\<[Ee]nd\\>'$/;"	v
b:undo_ftplugin	plugin/script/bundle/deoplete.nvim/vim-themis/ftplugin/vimspec.vim	/^  let b:undo_ftplugin = ' | ' . b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugin/script/bundle/deoplete.nvim/vim-themis/ftplugin/vimspec.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	plugin/script/bundle/deoplete.nvim/vim-themis/ftplugin/vimspec.vim	/^let b:undo_ftplugin = 'unlet! b:match_words' . b:undo_ftplugin$/;"	v
Base	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^class Base(LoggingMixin):$/;"	c
Base	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^class Base(LoggingMixin):$/;"	c
BaseTag.addChild	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.addChild(tag) abort dict$/;"	f
BaseTag.closeFold	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.closeFold() abort dict$/;"	f
BaseTag.getChildren	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getChildren() dict abort$/;"	f
BaseTag.getChildrenByName	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getChildrenByName(tagname) dict abort$/;"	f
BaseTag.getClosedParentTline	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getClosedParentTline() abort dict$/;"	f
BaseTag.getPrototype	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getPrototype(short) abort dict$/;"	f
BaseTag.initFoldState	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.initFoldState() abort dict$/;"	f
BaseTag.isFoldable	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFoldable() abort dict$/;"	f
BaseTag.isFolded	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFolded() abort dict$/;"	f
BaseTag.isKindheader	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isKindheader() abort dict$/;"	f
BaseTag.isNormalTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isNormalTag() abort dict$/;"	f
BaseTag.isPseudoTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isPseudoTag() abort dict$/;"	f
BaseTag.New	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.New(name) abort dict$/;"	f
BaseTag.openFold	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openFold() abort dict$/;"	f
BaseTag.openParents	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openParents() abort dict$/;"	f
BaseTag.removeChild	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.removeChild(tag) dict abort$/;"	f
BaseTag.setFolded	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.setFolded(folded) abort dict$/;"	f
BaseTag._getPrefix	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._getPrefix() abort dict$/;"	f
BaseTag._init	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._init(name) abort dict$/;"	f
base_bundle	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! s:base_bundle() abort$/;"	f
BASE_DIR	plugin/script/bundle/deoplete.nvim/test/conftest.py	/^BASE_DIR = os.path.dirname(os.path.dirname(__file__))$/;"	v
binary_search	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
binary_search	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
BindMappings	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:BindMappings()$/;"	f
BinSearchToAppend	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:BinSearchToAppend(start, end, line, cmp, direction)$/;"	f
BinSearchToAppend2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:BinSearchToAppend2(start, end, line, cmp, direction, accessor,$/;"	f
BookmarkNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:BookmarkNode(name)$/;"	f
BookmarkToRoot	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:BookmarkToRoot(name)$/;"	f
break	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:break(f, xs)$/;"	f
break	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
break	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
BufInWindows	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:BufInWindows(bnum)$/;"	f
BufLineAccessor	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:BufLineAccessor(line, context)$/;"	f
BufLineMover	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:BufLineMover(from, to, context)$/;"	f
BufLineSwapper	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:BufLineSwapper(line1, line2, context)$/;"	f
buflisted	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! s:buflisted(bufnr) abort "{{{$/;"	f
BuildContextStack	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:BuildContextStack(namespaces, szCurrentScope)$/;"	f
build_all_help	build_all.sh	/^function build_all_help()$/;"	f
build_vimconf_dir	build_all.sh	/^function build_vimconf_dir()$/;"	f
Bundle	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=+                                                Bundle        call vundle#config#bundle(<args>)$/;"	c
Bundle.add_child	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.add_child(bundle) abort$/;"	f
Bundle.all_test_entries	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.all_test_entries() abort$/;"	f
Bundle.get_child	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.get_child(title) abort$/;"	f
Bundle.get_description	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.get_description(entry) abort$/;"	f
Bundle.get_parent	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.get_parent() abort$/;"	f
Bundle.get_style	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.get_style() abort$/;"	f
Bundle.get_test_entries	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.get_test_entries() abort$/;"	f
Bundle.get_test_full_title	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.get_test_full_title(entry) abort$/;"	f
Bundle.get_test_title	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.get_test_title(entry) abort$/;"	f
Bundle.get_title	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.get_title() abort$/;"	f
Bundle.has_parent	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.has_parent() abort$/;"	f
Bundle.is_empty	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.is_empty() abort$/;"	f
bundle.is_pinned	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:bundle.is_pinned()$/;"	f
bundle.path	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:bundle.path()$/;"	f
Bundle.remove_child	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.remove_child(child) abort$/;"	f
Bundle.run_test	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.run_test(entry) abort$/;"	f
Bundle.select_tests	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.select_tests(pattern) abort$/;"	f
Bundle.select_tests_recursive	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.select_tests_recursive(pattern) abort$/;"	f
Bundle.total_test_count	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:Bundle.total_test_count() abort$/;"	f
BundleClean	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang                                          BundleClean   PluginClean<bang>$/;"	c
BundleDocs	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0                                                BundleDocs    PluginDocs$/;"	c
BundleInstall	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleInstall PluginInstall<bang> <args>$/;"	c
BundleList	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0 -bang                                          BundleList    PluginList<bang>$/;"	c
BundleSearch	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleSearch  PluginSearch<bang> <args>$/;"	c
BundleUpdate	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com!                                                         BundleUpdate  PluginInstall!$/;"	c
bytepos2charpos	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def bytepos2charpos(encoding, input, pos):$/;"	f
cache_output	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:cache_output(interactive) abort "{{{$/;"	f
caching	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:caching() "{{{$/;"	f
caching	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:caching() "{{{$/;"	f
caching_completion_from_dict	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_completion_from_dict(dict_name) "{{{$/;"	f
caching_current_buffer	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:caching_current_buffer(start, end) "{{{$/;"	f
caching_current_buffer	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:caching_current_buffer(start, end) "{{{$/;"	f
caching_current_files	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:caching_current_files() "{{{$/;"	f
caching_dictionary	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:caching_dictionary(filetype)$/;"	f
caching_from_dict	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_from_dict(dict_name, kind) "{{{$/;"	f
caching_from_syn	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:caching_from_syn(filetype) "{{{$/;"	f
caching_prototype_from_dict	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_prototype_from_dict(dict_name) "{{{$/;"	f
call_hook	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:call_hook(bundle, point) abort$/;"	f
call_vimshell	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^function! s:call_vimshell(default, args) abort "{{{$/;"	f
CanUseOmnicompletion	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/maycomplete.vim	/^function! s:CanUseOmnicompletion()$/;"	f
can_handle	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:can_handle(styles, file) abort$/;"	f
CenterView	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:CenterView()$/;"	f
Char2Num	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:Char2Num(c)$/;"	f
charpos2bytepos	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def charpos2bytepos(encoding, input, pos):$/;"	f
charwidth	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def charwidth(c):$/;"	f
char_range	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:char_range(from, to)$/;"	f
char_range	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
char_range	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
ChCwd	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:ChCwd()$/;"	f
CheckExCtagsVersion	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
CheckForActivate	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:CheckForActivate()$/;"	f
CheckForExCtags	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
CheckFTCtags	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
CheckMouseClick	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
check_all_output	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:check_all_output(is_hold) abort "{{{$/;"	f
check_async_cache	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:check_async_cache(context) abort "{{{$/;"	f
check_buffer	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:check_buffer(bufnumber, is_force) "{{{$/;"	f
check_bundle_name	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^funct! s:check_bundle_name(bundle)$/;"	f
check_cache	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_cache() "{{{$/;"	f
check_cache	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:check_cache() "{{{$/;"	f
check_changed_buffer	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_changed_buffer(bufnumber) "{{{$/;"	f
check_changed_buffer	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:check_changed_buffer(bufnr) abort "{{{$/;"	f
check_exception	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:check_exception(lnum, thrown_expection, expected_exception) abort$/;"	f
check_fallback	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! s:check_fallback(cur_text) abort "{{{$/;"	f
check_force_omni	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! s:check_force_omni(cur_text) abort "{{{$/;"	f
check_in_do_auto_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! s:check_in_do_auto_complete() "{{{$/;"	f
check_in_do_auto_complete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! s:check_in_do_auto_complete(event) abort "{{{$/;"	f
check_neovim	plugin/script/bundle/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_neovim() abort$/;"	f
check_old_cache	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:check_old_cache(cache_dir, filename)$/;"	f
check_old_cache	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
check_output	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:check_output(interactive, bufnr, bufnr_save) abort "{{{$/;"	f
check_password_input	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:check_password_input(string) abort "{{{$/;"	f
check_recache	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def check_recache(self, context):$/;"	m	class:Deoplete
check_recache	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_recache() "{{{$/;"	f
check_required_python_for_deoplete	plugin/script/bundle/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_required_python_for_deoplete() abort$/;"	f
check_scrollback	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:check_scrollback() abort "{{{$/;"	f
check_source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_source() "{{{$/;"	f
check_source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:check_source() abort "{{{$/;"	f
check_str	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:check_str(string) abort "{{{$/;"	f
check_throw	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^function! s:check_throw(cmd, args, expected_exception) abort$/;"	f
check_throw	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^function! s:check_throw(target, actual, ...) abort$/;"	f
check_truthy	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:check_truthy(value) abort$/;"	f
check_type	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:check_type(value, expected_types, not, additional_message) abort$/;"	f
child	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  let child = themis#bundle#new()$/;"	v
child	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  let child.suite.called = self.suite.called$/;"	v
child.suite.after	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  function! child.suite.after() abort$/;"	f
child.suite.after_each	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  function! child.suite.after_each() abort$/;"	f
child.suite.before	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  function! child.suite.before() abort$/;"	f
child.suite.before_each	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  function! child.suite.before_each() abort$/;"	f
child.suite.parent_test1	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  function! child.suite.parent_test1() abort$/;"	f
child.suite.parent_test2	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  function! child.suite.parent_test2() abort$/;"	f
chomp	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:chomp(str) "{{{$/;"	f
chomp	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
chomp	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
chomp_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:chomp_prompt(cur_text, line, interactive) abort "{{{$/;"	f
chop	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:chop(str) "{{{$/;"	f
chop	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
chop	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
ChRoot	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:ChRoot()$/;"	f
clean	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:clean() abort "{{{$/;"	f
clear	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:clear(list)$/;"	f
clear	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clear	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:clear(is_insert) abort "{{{$/;"	f
clear	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^function! s:clear(dict) abort$/;"	f
clear	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:clear(list) abort$/;"	f
ClearBookmarks	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:ClearBookmarks(bookmarks)$/;"	f
CloseChildren	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:CloseChildren()$/;"	f
CloseCurrentDir	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:CloseCurrentDir()$/;"	f
CloseFold	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
CloseTree	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:CloseTree()$/;"	f
CloseTreeIfOpen	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:CloseTreeIfOpen()$/;"	f
CloseTreeIfQuitOnOpen	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:CloseTreeIfQuitOnOpen()$/;"	f
CloseWindow	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
close_preview_window	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! s:close_preview_window() "{{{$/;"	f
close_preview_window	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! s:close_preview_window() abort "{{{$/;"	f
CmpByName	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:CmpByName(i1, i2)$/;"	f
combinations	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
combinations	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
combine_vimrcs	build_all.sh	/^function combine_vimrcs()$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/bg.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/build.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/cd.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/cdup.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/exe.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/export.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/gexe.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/iexe.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/less.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/popd.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/scp.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/ssh.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/sudo.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/whereis.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/which.vim	/^function! s:command.complete(args) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/alias.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/bg.vim	/^function! s:command.execute(commands, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/build.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/cd.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/cdup.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/clear.vim	/^function! s:command.execute(args, context) abort$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/dirs.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/echo.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/eval.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/exe.vim	/^function! s:command.execute(commands, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/exit.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/export.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/galias.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/gcd.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/gendoc.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/gexe.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/h.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/histdel.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/history.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/iexe.vim	/^function! s:command.execute(commands, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/less.vim	/^function! s:command.execute(commands, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/let.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/ls.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/mkcd.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/nop.vim	/^function! s:command.execute(args, context) abort$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/open.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/popd.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/pwd.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/repeat.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/sexe.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/shell.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/source.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/source_shellcmd.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/sudo.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/time.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/vexe.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/view.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/vimdiff.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/vimsh.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/whereis.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/which.vim	/^function! s:command.execute(args, context) abort "{{{$/;"	f
command.__Fail__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^  function! command.__Fail__() abort$/;"	f
command.__Skip__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^  function! command.__Skip__() abort$/;"	f
command.__Throws__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^  function! command.__Throws__() abort$/;"	f
command.__TODO__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^  function! command.__TODO__() abort$/;"	f
command_vim.execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/vim.vim	/^function! s:command_vim.execute(args, context) abort "{{{$/;"	f
CommentLine	plugin/script/bundle/comments/plugin/comments.vim	/^function! CommentLine()$/;"	f
common_head	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:common_head(strs)$/;"	f
common_head	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
common_head	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
communicate	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def communicate(self, timeout):$/;"	m	class:Process
compare	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_length.vim	/^function! s:compare(i1, i2)$/;"	f
compare	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_rank.vim	/^function! s:compare(i1, i2)$/;"	f
compare	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_length.vim	/^function! s:compare(i1, i2) abort$/;"	f
compare	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_word.vim	/^function! s:compare(i1, i2) abort$/;"	f
CompareBookmarks	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:CompareBookmarks(first, second)$/;"	f
CompareByKind	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByKind(tag1, tag2) abort$/;"	f
CompareByLine	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByLine(tag1, tag2) abort$/;"	f
CompareNodes	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:CompareNodes(n1, n2)$/;"	f
compare_pos	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/context_filetype.vim	/^function! s:compare_pos(i1, i2)$/;"	f
compare_source_rank	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! s:compare_source_rank(i1, i2)$/;"	f
compare_source_rank	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/complete.vim	/^function! s:compare_source_rank(i1, i2) abort$/;"	f
comparison.throws_a_report_when_comparison_result_is_false	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! comparison.throws_a_report_when_comparison_result_is_false() abort$/;"	f
compile_specfile	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:compile_specfile(specfile_path, result_path) abort$/;"	f
CompleteBookmarks	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:CompleteBookmarks(A,L,P)$/;"	f
complete_delay	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! s:complete_delay(timer) abort "{{{$/;"	f
complete_done	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:complete_done() abort$/;"	f
complete_install	build_all.sh	/^function complete_install()$/;"	f
complete_key	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! s:complete_key(key) abort "{{{$/;"	f
completion_async	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_async(timer) abort$/;"	f
completion_begin	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_begin(event) abort$/;"	f
completion_begin	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def completion_begin(self, context):$/;"	m	class:Deoplete
completion_begin	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def completion_begin(self, context):$/;"	m	class:DeopleteHandlers
concat	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:concat(list)$/;"	f
concat	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:concat(list) abort$/;"	f
concat	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:concat(list) abort$/;"	f
ConfigBufs	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:ConfigBufs()$/;"	f
ConfigWalk	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:ConfigWalk()$/;"	f
config_object	build_all.sh	/^function config_object()$/;"	f
config_vimrc	build_all.sh	/^function config_vimrc()$/;"	f
conj	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:conj(xs, x)$/;"	f
conj	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
conj	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
cons	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:cons(x, xs)$/;"	f
cons	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
cons	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
contains_multibyte	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
contains_multibyte	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
control.bell	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:control.bell() abort "{{{$/;"	f
control.carriage_return	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:control.carriage_return() abort "{{{$/;"	f
control.delete_backword_char	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:control.delete_backword_char() abort "{{{$/;"	f
control.delete_multi_backword_char	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:control.delete_multi_backword_char() abort "{{{$/;"	f
control.ignore	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:control.ignore() abort "{{{$/;"	f
control.newline	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:control.newline() abort "{{{$/;"	f
control.shift_in	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:control.shift_in() abort "{{{$/;"	f
control.shift_out	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:control.shift_out() abort "{{{$/;"	f
convert2candidates	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def convert2candidates(l):$/;"	f
convert2list	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def convert2list(expr):$/;"	f
converter.filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_abbr.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_case.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_delimiter.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_nothing.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_abbr.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
converter.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_add_paren.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
converter.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_case.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
converter.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_delimiter.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
converter.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_disable_abbr.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
converter.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
converter.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_remove_overlap.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
convert_lines	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_zsh_complete.vim	/^function! s:convert_lines(lines) abort$/;"	f
CopyNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:CopyNode()$/;"	f
CorrectFocusOnStartup	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
CreateAutocommands	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
CreateTreeWin	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:CreateTreeWin()$/;"	f
create_changelog	plugin/script/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:create_changelog() abort$/;"	f
create_pseudotag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:create_pseudotag(name, parent, kind, typeinfo, fileinfo) abort$/;"	f
create_shell	plugin/script/bundle/vimshell.vim/autoload/vimshell/init.vim	/^function! s:create_shell(path, context) abort "{{{$/;"	f
critical	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def critical(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
CtagsErrMsg	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
CurrentMark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:CurrentMark()$/;"	f
custom_matcher.after	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! custom_matcher.after() abort$/;"	f
custom_matcher.can_be_defined	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! custom_matcher.can_be_defined() abort$/;"	f
custom_matcher.provides_failre_message_definition	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! custom_matcher.provides_failre_message_definition() abort$/;"	f
debug	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def debug(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
debug	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def debug(vim, expr):$/;"	f
debug	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:debug(msg) abort$/;"	f
debug_enabled	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    debug_enabled = False$/;"	v	class:LoggingMixin
debug_vimtool	build_all.sh	/^function debug_vimtool()$/;"	f
default_failure_message	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/expect.vim	/^function! s:default_failure_message(not, name, ...) abort$/;"	f
default_settings	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/iexe.vim	/^function! s:default_settings() abort "{{{$/;"	f
default_settings	plugin/script/bundle/vimshell.vim/autoload/vimshell/init.vim	/^function! s:default_settings() abort "{{{$/;"	f
default_syntax	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/iexe.vim	/^function! s:default_syntax() abort "{{{$/;"	f
define_assert	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:define_assert(command) abort$/;"	f
define_fail	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:define_fail(command) abort$/;"	f
define_skip	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:define_skip(command) abort$/;"	f
define_throws	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:define_throws(command) abort$/;"	f
define_todo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:define_todo(command) abort$/;"	f
delcommand	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:delcommand(cmd) abort$/;"	f
delete	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:delete(cache_dir, filename)$/;"	f
delete	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
deletefile	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:deletefile(cache_dir, filename)$/;"	f
deletefile	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
DeleteNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:DeleteNode()$/;"	f
delete_another_backward_char	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:delete_another_backward_char() abort "{{{$/;"	f
delete_backward_char	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! s:delete_backward_char(is_auto_select) abort "{{{$/;"	f
delete_backward_char	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:delete_backward_char() abort "{{{$/;"	f
delete_backward_line	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! s:delete_backward_line() abort "{{{$/;"	f
delete_backward_line	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:delete_backward_line() abort "{{{$/;"	f
delete_line	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:delete_line() abort "{{{$/;"	f
delete_previous_output	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:delete_previous_output() abort "{{{$/;"	f
Deoplete	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^class Deoplete(logger.LoggingMixin):$/;"	c
deoplete#cancel_popup	plugin/script/bundle/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#cancel_popup() abort$/;"	f
deoplete#close_popup	plugin/script/bundle/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#close_popup() abort$/;"	f
deoplete#custom#get	plugin/script/bundle/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#get() abort$/;"	f
deoplete#custom#get_source_var	plugin/script/bundle/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#get_source_var(source_name) abort$/;"	f
deoplete#custom#set	plugin/script/bundle/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#set(source_name, option_name, value) abort$/;"	f
deoplete#disable	plugin/script/bundle/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#disable() abort$/;"	f
deoplete#enable	plugin/script/bundle/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#enable() abort$/;"	f
deoplete#enable_logging	plugin/script/bundle/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#enable_logging(level, logfile) abort$/;"	f
deoplete#handler#_async_timer_start	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_async_timer_start() abort$/;"	f
deoplete#handler#_async_timer_stop	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_async_timer_stop() abort$/;"	f
deoplete#handler#_init	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_init() abort$/;"	f
deoplete#init#_channel	plugin/script/bundle/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_channel() abort$/;"	f
deoplete#init#_context	plugin/script/bundle/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_context(event, sources) abort$/;"	f
deoplete#init#_disable	plugin/script/bundle/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_disable() abort$/;"	f
deoplete#init#_enable	plugin/script/bundle/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_enable() abort$/;"	f
deoplete#init#_initialize	plugin/script/bundle/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_initialize() abort$/;"	f
deoplete#init#_is_enabled	plugin/script/bundle/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_is_enabled() abort$/;"	f
deoplete#init#_variables	plugin/script/bundle/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_variables() abort$/;"	f
deoplete#initialize	plugin/script/bundle/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#initialize() abort$/;"	f
deoplete#manual_complete	plugin/script/bundle/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#manual_complete(...) abort$/;"	f
deoplete#mapping#_complete	plugin/script/bundle/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_complete() abort$/;"	f
deoplete#mapping#_completefunc	plugin/script/bundle/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_completefunc(findstart, base) abort$/;"	f
deoplete#mapping#_init	plugin/script/bundle/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_init() abort$/;"	f
deoplete#mapping#_restore_completeopt	plugin/script/bundle/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_restore_completeopt() abort$/;"	f
deoplete#mapping#_rpcrequest_wrapper	plugin/script/bundle/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_rpcrequest_wrapper(sources) abort$/;"	f
deoplete#mapping#_set_completeopt	plugin/script/bundle/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_set_completeopt() abort$/;"	f
deoplete#mappings#cancel_popup	plugin/script/bundle/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#cancel_popup() abort$/;"	f
deoplete#mappings#close_popup	plugin/script/bundle/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#close_popup() abort$/;"	f
deoplete#mappings#manual_complete	plugin/script/bundle/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#manual_complete(...) abort$/;"	f
deoplete#mappings#refresh	plugin/script/bundle/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#refresh() abort$/;"	f
deoplete#mappings#smart_close_popup	plugin/script/bundle/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#smart_close_popup() abort$/;"	f
deoplete#mappings#undo_completion	plugin/script/bundle/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#undo_completion() abort$/;"	f
deoplete#refresh	plugin/script/bundle/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#refresh() abort$/;"	f
deoplete#smart_close_popup	plugin/script/bundle/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#smart_close_popup() abort$/;"	f
deoplete#toggle	plugin/script/bundle/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#toggle() abort$/;"	f
deoplete#undo_completion	plugin/script/bundle/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#undo_completion() abort$/;"	f
deoplete#util#convert2list	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#convert2list(expr) abort$/;"	f
deoplete#util#exists_omnifunc	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#exists_omnifunc(name) abort$/;"	f
deoplete#util#get_buffer_config	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_buffer_config($/;"	f
deoplete#util#get_input	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_input(event) abort$/;"	f
deoplete#util#get_next_input	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_next_input(event) abort$/;"	f
deoplete#util#get_prev_event	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_prev_event() abort$/;"	f
deoplete#util#get_simple_buffer_config	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_simple_buffer_config(buffer_var, user_var) abort$/;"	f
deoplete#util#get_syn_names	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_syn_names() abort$/;"	f
deoplete#util#neovim_version	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#neovim_version() abort$/;"	f
deoplete#util#print_debug	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_debug(string) abort$/;"	f
deoplete#util#print_error	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_error(string) abort$/;"	f
deoplete#util#print_warning	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_warning(string) abort$/;"	f
deoplete#util#redir	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#redir(cmd) abort$/;"	f
deoplete#util#set_default	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#set_default(var, val, ...)  abort$/;"	f
deoplete#util#set_pattern	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#set_pattern(variable, keys, pattern) abort$/;"	f
deoplete#util#string	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#string(expr) abort$/;"	f
deoplete#util#uniq	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#uniq(list) abort$/;"	f
deoplete#util#versioncmp	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#versioncmp(a, b) abort$/;"	f
deoplete#util#vimoption2python	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#vimoption2python(option) abort$/;"	f
deoplete#util#vimoption2python_not	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#vimoption2python_not(option) abort$/;"	f
DeopleteHandlers	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^class DeopleteHandlers(object):$/;"	c
DeopleteLogFilter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^class DeopleteLogFilter(logging.Filter):$/;"	c
deoplete_lazy_enable	plugin/script/bundle/deoplete.nvim/plugin/deoplete.vim	/^  augroup deoplete_lazy_enable$/;"	a
deoplete_lazy_enable	plugin/script/bundle/deoplete.nvim/plugin/deoplete.vim	/^  function! s:deoplete_lazy_enable()$/;"	f
DetectFiletype	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
DictCacheItem	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^DictCacheItem = namedtuple('DictCacheItem', 'mtime candidates')$/;"	v
diffidx	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:diffidx(a, b)$/;"	f
diffidx	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffidx	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
DisplayHelp	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:DisplayHelp()$/;"	f
DisplayIncludeTree	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^function! s:DisplayIncludeTree(szFilePath, indent, ...)$/;"	f
display_neco	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! s:display_neco(number) "{{{$/;"	f
doc_dict.search	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:doc_dict.search(cur_text) "{{{$/;"	f
doc_dict.search	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:doc_dict.search(cur_text) "{{{$/;"	f
doc_dict.search	plugin/script/bundle/vimshell.vim/autoload/vimshell/help.vim	/^function! s:doc_dict.search(cur_text) abort "{{{$/;"	f
DoMark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:DoMark(...) " DoMark(regexp)$/;"	f
do_auto_complete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! s:do_auto_complete(event) abort "{{{$/;"	f
do_complete	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:do_complete(timer) abort$/;"	f
do_delayed_update	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:do_delayed_update() abort$/;"	f
DrawTree	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:DrawTree(curNode, depth, drawText, vertMap, isLastChild)$/;"	f
dstring	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:dstring(expr)$/;"	f
dstring	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dstring	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dummy_output	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:dummy_output(interactive, is_hold) abort "{{{$/;"	f
DumpHelp	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:DumpHelp()$/;"	f
dump_error	plugin/script/bundle/deoplete.nvim/vim-themis/macros/themis_startup.vim	/^function! s:dump_error(throwpoint, exception) abort$/;"	f
Echo	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:Echo(msg)$/;"	f
EchoError	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:EchoError(msg)$/;"	f
EchoWarning	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:EchoWarning(msg)$/;"	f
edit_content	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Buffer.vim	/^function! s:edit_content(content, ...) abort$/;"	f
Emitter.add_listener	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/emitter.vim	/^function! s:Emitter.add_listener(listener) abort$/;"	f
Emitter.emit	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/emitter.vim	/^function! s:Emitter.emit(event, ...) abort$/;"	f
Emitter.emitting	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/emitter.vim	/^function! s:Emitter.emitting() abort$/;"	f
Emitter.get_listeners	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/emitter.vim	/^function! s:Emitter.get_listeners() abort$/;"	f
Emitter.remove_all_listeners	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/emitter.vim	/^function! s:Emitter.remove_all_listeners() abort$/;"	f
Emitter.remove_listener	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/emitter.vim	/^function! s:Emitter.remove_listener(listener) abort$/;"	f
enable_auto_complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:enable_auto_complete() abort "{{{$/;"	f
enable_logging	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def enable_logging(self, level, logfile):$/;"	m	class:DeopleteHandlers
ends_with	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
ends_with	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
enqueue_output	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def enqueue_output(self):$/;"	m	class:Process
environment.restore	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:environment.restore() abort$/;"	f
eof	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def eof(self):$/;"	m	class:Process
equals	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:equals(a, b) abort$/;"	f
error	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def error(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
error	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error(vim, expr):$/;"	f
ErrorMsg	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:ErrorMsg(msg)$/;"	f
error_tb	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error_tb(vim, msg):$/;"	f
error_vim	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error_vim(vim, msg):$/;"	f
escape	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def escape(expr):$/;"	f
escape	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! s:escape(path)"{{{$/;"	f
escape	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! s:escape(path) abort"{{{$/;"	f
escape.change_character_set	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.change_character_set(matchstr) abort "{{{$/;"	f
escape.change_cursor_shape	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.change_cursor_shape(matchstr) abort "{{{$/;"	f
escape.change_title	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.change_title(matchstr) abort "{{{$/;"	f
escape.clear_line	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.clear_line(matchstr) abort "{{{$/;"	f
escape.clear_screen	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.clear_screen(matchstr) abort "{{{$/;"	f
escape.delete_chars	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.delete_chars(matchstr) abort "{{{$/;"	f
escape.highlight	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.highlight(matchstr) abort "{{{$/;"	f
escape.ignore	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.ignore(matchstr) abort "{{{$/;"	f
escape.move_col	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.move_col(matchstr) abort "{{{$/;"	f
escape.move_cursor	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.move_cursor(matchstr) abort "{{{$/;"	f
escape.move_cursor_column	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.move_cursor_column(matchstr) abort "{{{$/;"	f
escape.move_down	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.move_down(matchstr) abort "{{{$/;"	f
escape.move_down_head	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.move_down_head(matchstr) abort "{{{$/;"	f
escape.move_down_head1	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.move_down_head1(matchstr) abort "{{{$/;"	f
escape.move_left	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.move_left(matchstr) abort "{{{$/;"	f
escape.move_right	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.move_right(matchstr) abort "{{{$/;"	f
escape.move_up	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.move_up(matchstr) abort "{{{$/;"	f
escape.move_up_head	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.move_up_head(matchstr) abort "{{{$/;"	f
escape.print_control_sequence	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.print_control_sequence(matchstr) abort "{{{$/;"	f
escape.reset	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.reset(matchstr) abort "{{{$/;"	f
escape.restore_pos	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.restore_pos(matchstr) abort "{{{$/;"	f
escape.save_pos	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.save_pos(matchstr) abort "{{{$/;"	f
escape.scroll_down1	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.scroll_down1(matchstr) abort "{{{$/;"	f
escape.scroll_up1	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.scroll_up1(matchstr) abort "{{{$/;"	f
escape.setup_scrolling_region	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:escape.setup_scrolling_region(matchstr) abort "{{{$/;"	f
EscapeCtagsCmd	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
escape_file_searching	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:escape_file_searching(buffer_name)$/;"	f
escape_file_searching	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_file_searching	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_pattern	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:escape_pattern(str)$/;"	f
escape_pattern	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_pattern	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_pattern	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_pattern	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
eval	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:eval(expr, scopes) abort$/;"	f
event.after_suite	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^function! s:event.after_suite(bundle) abort$/;"	f
event.after_suite	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:event.after_suite(bundle) abort$/;"	f
event.after_test	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^function! s:event.after_test(bundle, entry) abort$/;"	f
event.after_test	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:event.after_test(bundle, entry) abort$/;"	f
event.before_suite	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^function! s:event.before_suite(bundle) abort$/;"	f
event.before_suite	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:event.before_suite(bundle) abort$/;"	f
event.before_test	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^function! s:event.before_test(bundle, entry) abort$/;"	f
event.before_test	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:event.before_test(bundle, entry) abort$/;"	f
event.finish	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:event.finish(runner) abort$/;"	f
event.start_test	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:event.start_test(bundle, entry) abort$/;"	f
events.after_suite	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:events.after_suite(bundle) abort$/;"	f
events.before_suite	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:events.before_suite(bundle) abort$/;"	f
events.is_target	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:events.is_target(bundle) abort$/;"	f
event_bufwin_enter	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/bg.vim	/^function! s:event_bufwin_enter() abort "{{{$/;"	f
event_bufwin_enter	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/iexe.vim	/^function! s:event_bufwin_enter() abort "{{{$/;"	f
exception	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def exception(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
ExecuteCtags	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
ExecuteCtagsOnFile	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
ExecuteNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:ExecuteNode()$/;"	f
execute_by_background	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:execute_by_background(is_insert) abort "{{{$/;"	f
execute_command_line	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:execute_command_line(is_insert, oldpos) abort "{{{$/;"	f
execute_line	plugin/script/bundle/vimshell.vim/autoload/vimshell/term_mappings.vim	/^function! s:execute_line() abort "{{{$/;"	f
execute_statement	plugin/script/bundle/vimshell.vim/autoload/vimshell/parser.vim	/^function! s:execute_statement(statement, context) abort "{{{$/;"	f
ExecWinCmdNoEa	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:ExecWinCmdNoEa(winCmd)$/;"	f
exists	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:exists(name) abort$/;"	f
exists	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:exists(name) abort dict$/;"	f
exists	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:exists(name) abort dict$/;"	f
exists_current_source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:exists_current_source() "{{{$/;"	f
exists_current_source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:exists_current_source() abort "{{{$/;"	f
exit	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:exit() abort "{{{$/;"	f
expand	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def expand(path):$/;"	f
expand_path	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:expand_path(path) abort$/;"	f
expand_wildcard	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:expand_wildcard() abort "{{{$/;"	f
expect.__comparison__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__comparison__() abort$/;"	f
expect.__custom_matcher__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__custom_matcher__() abort$/;"	f
expect.__have_key__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__have_key__() abort$/;"	f
expect.__to_be_dict__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_be_dict__() abort$/;"	f
expect.__to_be_empty__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_be_empty__() abort$/;"	f
expect.__to_be_false__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_be_false__() abort$/;"	f
expect.__to_be_float__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_be_float__() abort$/;"	f
expect.__to_be_func__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_be_func__() abort$/;"	f
expect.__to_be_list__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_be_list__() abort$/;"	f
expect.__to_be_number__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_be_number__() abort$/;"	f
expect.__to_be_same__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_be_same__() abort$/;"	f
expect.__to_be_string__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_be_string__() abort$/;"	f
expect.__to_be_truthy__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_be_truthy__() abort$/;"	f
expect.__to_equal__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_equal__() abort$/;"	f
expect.__to_exist__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_exist__() abort$/;"	f
expect.__to_have_length__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_have_length__() abort$/;"	f
expect.__to_match__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^  function! expect.__to_match__() abort$/;"	f
expr_to_failure_message	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/expect.vim	/^function! s:expr_to_failure_message(name, pred, ...) abort$/;"	f
expr_to_matcher	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/expect.vim	/^function! s:expr_to_matcher(name, pred, ...) abort$/;"	f
ExtendTagItemToPopupItem	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:ExtendTagItemToPopupItem(tagItem, szTypeName)$/;"	f
ExtractOpt	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:ExtractOpt(command) $/;"	f
ExtractScopeFromTypeInfo	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! s:ExtractScopeFromTypeInfo(szTypeInfo)$/;"	f
ExtractTypeInfoFromDecl	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:ExtractTypeInfoFromDecl(tokens)$/;"	f
fail	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:fail(lnum, result) abort$/;"	f
Fail.can_not_omit_message	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^    function! Fail.can_not_omit_message() abort$/;"	f
failure	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:failure(mes, additional) abort$/;"	f
fatal	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    fatal = critical$/;"	v	class:LoggingMixin
fetch_scripts	plugin/script/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:fetch_scripts(to)$/;"	f
FileInfo.addTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.addTag(tag) abort dict$/;"	f
FileInfo.clearOldFolds	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.clearOldFolds() abort dict$/;"	f
FileInfo.closeKindFold	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.closeKindFold(kind) abort dict$/;"	f
FileInfo.getTags	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.getTags() dict abort$/;"	f
FileInfo.getTagsByName	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.getTagsByName(tagname) dict abort$/;"	f
FileInfo.New	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.New(fname, ftype, typeinfo) abort dict$/;"	f
FileInfo.openKindFold	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.openKindFold(kind) abort dict$/;"	f
FileInfo.removeTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.removeTag(tag) dict abort$/;"	f
FileInfo.reset	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.reset() abort dict$/;"	f
FileInfo.sortTags	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.sortTags() abort dict$/;"	f
FilePatIgnoreCase	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:FilePatIgnoreCase(filePat)$/;"	f
filereadable	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:filereadable(cache_dir, filename)$/;"	f
filereadable	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^    def filter(self, context):$/;"	m	class:Base
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^    def filter(self, context):$/;"	m	class:Filter
Filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^class Filter(Base):$/;"	c
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^    def filter(self, context):$/;"	m	class:Filter
Filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^class Filter(Base):$/;"	c
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^    def filter(self, context):$/;"	m	class:Filter
Filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^class Filter(Base):$/;"	c
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^    def filter(self, context):$/;"	m	class:Filter
Filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^class Filter(Base):$/;"	c
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^    def filter(self, context):$/;"	m	class:Filter
Filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^class Filter(Base):$/;"	c
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^    def filter(self, context):$/;"	m	class:Filter
Filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^class Filter(Base):$/;"	c
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^    def filter(self, context):$/;"	m	class:Filter
Filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^class Filter(Base):$/;"	c
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^    def filter(self, context):$/;"	m	class:Filter
Filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^class Filter(Base):$/;"	c
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^    def filter(self, context):$/;"	m	class:Filter
Filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^class Filter(Base):$/;"	c
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^    def filter(self, context):$/;"	m	class:Filter
Filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^class Filter(Base):$/;"	c
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def filter(self, context):$/;"	m	class:Filter
Filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^class Filter(Base):$/;"	c
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^    def filter(self, context):$/;"	m	class:Filter
Filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^class Filter(Base):$/;"	c
filter	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def filter(self, record):$/;"	m	class:DeopleteLogFilter
FilterClassMembers	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:FilterClassMembers(tagPopupList, szAccessFilter)$/;"	f
FilterClassScopeMembers	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:FilterClassScopeMembers(tagPopupList, szAccessFilter)$/;"	f
FilterNamespaceScopeMembers	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:FilterNamespaceScopeMembers(tagPopupList)$/;"	f
FilterOverloadedFunctions	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:FilterOverloadedFunctions(tagPopupList)$/;"	f
FilterStaticClassMembers	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:FilterStaticClassMembers(tagPopupList, szAccessFilter)$/;"	f
find	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:find(list, default, f)$/;"	f
find	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
find	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
FindBufferForName	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:FindBufferForName(fileName)$/;"	f
FindNodeLineNumber	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:FindNodeLineNumber(treenode)$/;"	f
FindRootNodeLineNumber	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:FindRootNodeLineNumber()$/;"	f
FindStartPositionOfCompletion	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:FindStartPositionOfCompletion()$/;"	f
find_index	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_index	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_indices	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_indices	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_last_index	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_last_index	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_rplugins	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def find_rplugins(context, source):$/;"	f
flatten	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:flatten(list, ...)$/;"	f
flatten	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flatten	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
foldl	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:foldl(f, init, xs)$/;"	f
foldl	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^function! s:foldl(f, init, dict) abort$/;"	f
foldl	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl1	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:foldl1(f, xs)$/;"	f
foldl1	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldl1	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldr	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:foldr(f, init, xs)$/;"	f
foldr	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^function! s:foldr(f, init, dict) abort$/;"	f
foldr	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr1	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:foldr1(f, xs)$/;"	f
foldr1	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
foldr1	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
FormatFileResults	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:FormatFileResults(fl, parentLen, matchPat, matchingCase, dirsOnly)$/;"	f
fuzzy_escape	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def fuzzy_escape(string, camelcase):$/;"	f
g:asyncrun_auto	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_auto = ''$/;"	v
g:asyncrun_bell	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_bell = 0$/;"	v
g:asyncrun_code	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_code = ''$/;"	v
g:asyncrun_encs	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_encs = ''$/;"	v
g:asyncrun_exit	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_exit = ''$/;"	v
g:asyncrun_hook	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_hook = ''$/;"	v
g:asyncrun_last	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_last = 0$/;"	v
g:asyncrun_local	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_local = 1$/;"	v
g:asyncrun_mode	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_mode = 0$/;"	v
g:asyncrun_shell	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_shell = ''$/;"	v
g:asyncrun_shellflag	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_shellflag = ''$/;"	v
g:asyncrun_status	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_status = ''$/;"	v
g:asyncrun_stop	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_stop = ''$/;"	v
g:asyncrun_support	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^		let g:asyncrun_support = 1$/;"	v
g:asyncrun_support	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_support = 1$/;"	v
g:asyncrun_support	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_support = 0$/;"	v
g:asyncrun_text	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_text = ''$/;"	v
g:asyncrun_timer	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_timer = 25$/;"	v
g:asyncrun_trim	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_trim = 0$/;"	v
g:asyncrun_windows	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_windows = 1$/;"	v
g:asyncrun_windows	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_windows = 0$/;"	v
g:header_field_author	plugin/script/bundle/vim-header/autoload/header.vim	/^    let g:header_field_author = ''$/;"	v
g:header_field_author_email	plugin/script/bundle/vim-header/autoload/header.vim	/^    let g:header_field_author_email = ''$/;"	v
g:header_field_filename	plugin/script/bundle/vim-header/autoload/header.vim	/^    let g:header_field_filename = 1$/;"	v
g:header_field_modified_timestamp	plugin/script/bundle/vim-header/autoload/header.vim	/^    let g:header_field_modified_timestamp = 1$/;"	v
g:header_field_timestamp	plugin/script/bundle/vim-header/autoload/header.vim	/^    let g:header_field_timestamp = 1$/;"	v
g:header_field_timestamp_format	plugin/script/bundle/vim-header/autoload/header.vim	/^    let g:header_field_timestamp_format = '%d.%m.%Y'$/;"	v
g:indentLine_bufNameExclude	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_bufNameExclude = get(g:,'indentLine_bufNameExclude',[])$/;"	v
g:indentLine_char	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_char = get(g:,'indentLine_char',(&encoding is# "utf-8" && &term isnot# "linux" ? '¦' : '|'))$/;"	v
g:indentLine_enabled	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_enabled = get(g:,'indentLine_enabled',1)$/;"	v
g:indentLine_faster	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_faster = get(g:,'indentLine_faster',0)$/;"	v
g:indentLine_fileType	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_fileType = get(g:,'indentLine_fileType',[])$/;"	v
g:indentLine_fileTypeExclude	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_fileTypeExclude = get(g:,'indentLine_fileTypeExclude',[])$/;"	v
g:indentLine_first_char	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_first_char = get(g:,'indentLine_first_char',(&encoding is# "utf-8" && &term isnot# "linux"  ? '¦' : '|'))$/;"	v
g:indentLine_indentLevel	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_indentLevel = get(g:,'indentLine_indentLevel',10)$/;"	v
g:indentLine_leadingSpaceChar	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceChar = get(g:,'indentLine_leadingSpaceChar',(&encoding is# "utf-8" && &term isnot# "linux" ? '·' : '.'))$/;"	v
g:indentLine_leadingSpaceEnabled	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceEnabled = get(g:,'indentLine_leadingSpaceEnabled',0)$/;"	v
g:indentLine_loaded	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_loaded = 1$/;"	v
g:indentLine_maxLines	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_maxLines = get(g:,'indentLine_maxLines',3000)$/;"	v
g:indentLine_setColors	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_setColors = get(g:,'indentLine_setColors',1)$/;"	v
g:indentLine_showFirstIndentLevel	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_showFirstIndentLevel = get(g:,'indentLine_showFirstIndentLevel',0)$/;"	v
g:loaded_deoplete	plugin/script/bundle/deoplete.nvim/plugin/deoplete.vim	/^let g:loaded_deoplete = 1$/;"	v
g:loaded_lookupfile	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^let g:loaded_lookupfile = 108$/;"	v
g:loaded_neocomplcache	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:loaded_neocomplcache = 1$/;"	v
g:loaded_neocomplcache_buffer_complete	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^let g:loaded_neocomplcache_buffer_complete = 1$/;"	v
g:loaded_neocomplcache_dictionary_complete	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/dictionary_complete.vim	/^let g:loaded_neocomplcache_dictionary_complete = 1$/;"	v
g:loaded_neocomplcache_include_complete	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/include_complete.vim	/^let g:loaded_neocomplcache_include_complete = 1$/;"	v
g:loaded_neocomplcache_syntax_complete	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/syntax_complete.vim	/^let g:loaded_neocomplcache_syntax_complete = 1$/;"	v
g:loaded_neocomplcache_tags_complete	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/tags_complete.vim	/^let g:loaded_neocomplcache_tags_complete = 1$/;"	v
g:loaded_neocomplete	plugin/script/bundle/neocomplete.vim/plugin/neocomplete.vim	/^let g:loaded_neocomplete = 1$/;"	v
g:loaded_neocomplete_buffer	plugin/script/bundle/neocomplete.vim/plugin/neocomplete/buffer.vim	/^let g:loaded_neocomplete_buffer = 1$/;"	v
g:loaded_neocomplete_dictionary	plugin/script/bundle/neocomplete.vim/plugin/neocomplete/dictionary.vim	/^let g:loaded_neocomplete_dictionary = 1$/;"	v
g:loaded_neocomplete_member	plugin/script/bundle/neocomplete.vim/plugin/neocomplete/member.vim	/^let g:loaded_neocomplete_member = 1$/;"	v
g:loaded_neocomplete_tag	plugin/script/bundle/neocomplete.vim/plugin/neocomplete/tag.vim	/^let g:loaded_neocomplete_tag = 1$/;"	v
g:loaded_pathogen	plugin/script/autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_tagbar	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_vimshell	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:loaded_vimshell = 1$/;"	v
g:lookupfile#lastPattern	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^let g:lookupfile#lastPattern = ""$/;"	v
g:lookupfile#lastResults	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^let g:lookupfile#lastResults = []$/;"	v
g:lookupfile#lastStatsMsg	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^let g:lookupfile#lastStatsMsg = []$/;"	v
g:lookupfile#recentFiles	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^let g:lookupfile#recentFiles = []$/;"	v
g:LookupFile_AllowNewFiles	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_AllowNewFiles = 1$/;"	v
g:LookupFile_AlwaysAcceptFirst	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_AlwaysAcceptFirst = 0$/;"	v
g:LookupFile_Bufs_BufListExpr	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_Bufs_BufListExpr = ''$/;"	v
g:LookupFile_Bufs_LikeBufCmd	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_Bufs_LikeBufCmd = 1$/;"	v
g:LookupFile_Bufs_SkipUnlisted	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_Bufs_SkipUnlisted = 1$/;"	v
g:LookupFile_DefaultCmd	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_DefaultCmd = ':LUTags'$/;"	v
g:LookupFile_DisableDefaultMap	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_DisableDefaultMap = 0$/;"	v
g:LookupFile_EnableRemapCmd	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_EnableRemapCmd = 1$/;"	v
g:LookupFile_EscCancelsPopup	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_EscCancelsPopup = 1$/;"	v
g:LookupFile_FileFilter	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_FileFilter = ''$/;"	v
g:LookupFile_LookupAcceptFunc	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_LookupAcceptFunc = ''$/;"	v
g:LookupFile_LookupFunc	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_LookupFunc = ''$/;"	v
g:LookupFile_LookupNotifyFunc	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_LookupNotifyFunc = ''$/;"	v
g:LookupFile_MinPatLength	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_MinPatLength = 4$/;"	v
g:LookupFile_OnCursorMovedI	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_OnCursorMovedI = 0$/;"	v
g:LookupFile_PreserveLastPattern	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_PreserveLastPattern = 1$/;"	v
g:LookupFile_PreservePatternHistory	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_PreservePatternHistory = 1$/;"	v
g:LookupFile_RecentFileListSize	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_RecentFileListSize = 20$/;"	v
g:LookupFile_SearchForBufsInTabs	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_SearchForBufsInTabs = 1$/;"	v
g:LookupFile_ShowFiller	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_ShowFiller = 1$/;"	v
g:LookupFile_SortMethod	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_SortMethod = 'alpha'$/;"	v
g:LookupFile_TagExpr	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_TagExpr = '&tags'$/;"	v
g:LookupFile_TagsExpandCamelCase	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_TagsExpandCamelCase = 1$/;"	v
g:LookupFile_UpdateTime	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_UpdateTime = 300$/;"	v
g:LookupFile_UsingSpecializedTags	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^  let g:LookupFile_UsingSpecializedTags = 0$/;"	v
g:makeArgumentList	plugin/script/bundle/genutils/autoload/genutils.vim	/^let g:makeArgumentList = 'exec genutils#MakeArgumentList()'$/;"	v
g:makeArgumentString	plugin/script/bundle/genutils/autoload/genutils.vim	/^let g:makeArgumentString = 'exec genutils#MakeArgumentString()'$/;"	v
g:neocomplcache_auto_completion_start_length	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_auto_completion_start_length =$/;"	v
g:neocomplcache_caching_limit_file_size	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_caching_limit_file_size =$/;"	v
g:neocomplcache_ctags_program	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_ctags_program =$/;"	v
g:neocomplcache_cursor_hold_i_time	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_cursor_hold_i_time =$/;"	v
g:neocomplcache_disabled_sources_list	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^  let g:neocomplcache_disabled_sources_list._ =$/;"	v
g:neocomplcache_disabled_sources_list	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_disabled_sources_list =$/;"	v
g:neocomplcache_disable_auto_complete	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_disable_auto_complete =$/;"	v
g:neocomplcache_disable_caching_file_path_pattern	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_disable_caching_file_path_pattern =$/;"	v
g:neocomplcache_enable_auto_close_preview	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_close_preview =$/;"	v
g:neocomplcache_enable_auto_delimiter	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_delimiter =$/;"	v
g:neocomplcache_enable_auto_select	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_select =$/;"	v
g:neocomplcache_enable_caching_message	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_caching_message =$/;"	v
g:neocomplcache_enable_camel_case_completion	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_camel_case_completion =$/;"	v
g:neocomplcache_enable_cursor_hold_i	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_cursor_hold_i =$/;"	v
g:neocomplcache_enable_debug	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_debug =$/;"	v
g:neocomplcache_enable_fuzzy_completion	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_fuzzy_completion =$/;"	v
g:neocomplcache_enable_ignore_case	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_ignore_case =$/;"	v
g:neocomplcache_enable_insert_char_pre	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_insert_char_pre =$/;"	v
g:neocomplcache_enable_prefetch	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_prefetch =$/;"	v
g:neocomplcache_enable_smart_case	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_smart_case =$/;"	v
g:neocomplcache_enable_underbar_completion	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_underbar_completion =$/;"	v
g:neocomplcache_enable_wildcard	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_wildcard =$/;"	v
g:neocomplcache_force_overwrite_completefunc	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_force_overwrite_completefunc =$/;"	v
g:neocomplcache_fuzzy_completion_start_length	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_fuzzy_completion_start_length =$/;"	v
g:neocomplcache_include_exprs	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_exprs = {}$/;"	v
g:neocomplcache_include_paths	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_paths = {}$/;"	v
g:neocomplcache_include_patterns	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_patterns = {}$/;"	v
g:neocomplcache_include_suffixes	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_suffixes = {}$/;"	v
g:neocomplcache_lock_buffer_name_pattern	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_lock_buffer_name_pattern =$/;"	v
g:neocomplcache_lock_iminsert	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_lock_iminsert =$/;"	v
g:neocomplcache_manual_completion_start_length	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_manual_completion_start_length =$/;"	v
g:neocomplcache_max_keyword_width	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_max_keyword_width =$/;"	v
g:neocomplcache_max_list	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_max_list =$/;"	v
g:neocomplcache_max_menu_width	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_max_menu_width =$/;"	v
g:neocomplcache_min_keyword_length	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_min_keyword_length =$/;"	v
g:neocomplcache_min_syntax_length	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^  let g:neocomplcache_min_syntax_length = 4$/;"	v
g:neocomplcache_release_cache_time	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_release_cache_time =$/;"	v
g:neocomplcache_skip_auto_completion_time	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_skip_auto_completion_time =$/;"	v
g:neocomplcache_sources_list	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_sources_list =$/;"	v
g:neocomplcache_source_completion_length	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_completion_length =$/;"	v
g:neocomplcache_source_completion_length	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_source_completion_length =$/;"	v
g:neocomplcache_source_rank	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_rank = g:neocomplcache_plugin_rank$/;"	v
g:neocomplcache_source_rank	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_source_rank =$/;"	v
g:neocomplcache_temporary_dir	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_temporary_dir =$/;"	v
g:neocomplcache_wildcard_characters	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_wildcard_characters =$/;"	v
g:neocomplete#auto_complete_delay	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#auto_complete_delay =$/;"	v
g:neocomplete#auto_completion_start_length	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#auto_completion_start_length =$/;"	v
g:neocomplete#delimiter_patterns	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#delimiter_patterns =$/;"	v
g:neocomplete#disable_auto_complete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#disable_auto_complete =$/;"	v
g:neocomplete#enable_auto_close_preview	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#enable_auto_close_preview =$/;"	v
g:neocomplete#enable_auto_delimiter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#enable_auto_delimiter =$/;"	v
g:neocomplete#enable_auto_select	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#enable_auto_select =$/;"	v
g:neocomplete#enable_camel_case	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#enable_camel_case =$/;"	v
g:neocomplete#enable_debug	plugin/script/bundle/neocomplete.vim/plugin/neocomplete.vim	/^let g:neocomplete#enable_debug =$/;"	v
g:neocomplete#enable_fuzzy_completion	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#enable_fuzzy_completion =$/;"	v
g:neocomplete#enable_ignore_case	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#enable_ignore_case =$/;"	v
g:neocomplete#enable_multibyte_completion	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#enable_multibyte_completion =$/;"	v
g:neocomplete#enable_refresh_always	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#enable_refresh_always =$/;"	v
g:neocomplete#enable_smart_case	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#enable_smart_case =$/;"	v
g:neocomplete#fallback_mappings	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#fallback_mappings =$/;"	v
g:neocomplete#force_omni_input_patterns	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#force_omni_input_patterns =$/;"	v
g:neocomplete#ignore_source_files	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#ignore_source_files =$/;"	v
g:neocomplete#keyword_patterns	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#keyword_patterns =$/;"	v
g:neocomplete#lock_buffer_name_pattern	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#lock_buffer_name_pattern =$/;"	v
g:neocomplete#lock_iminsert	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#lock_iminsert =$/;"	v
g:neocomplete#manual_completion_start_length	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#manual_completion_start_length =$/;"	v
g:neocomplete#max_keyword_width	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#max_keyword_width =$/;"	v
g:neocomplete#max_list	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#max_list =$/;"	v
g:neocomplete#min_keyword_length	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#min_keyword_length =$/;"	v
g:neocomplete#release_cache_time	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#release_cache_time =$/;"	v
g:neocomplete#skip_auto_completion_time	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#skip_auto_completion_time =$/;"	v
g:neocomplete#sources	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#sources =$/;"	v
g:neocomplete#sources#buffer#cache_limit_size	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^let g:neocomplete#sources#buffer#cache_limit_size =$/;"	v
g:neocomplete#sources#buffer#disabled_pattern	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^let g:neocomplete#sources#buffer#disabled_pattern =$/;"	v
g:neocomplete#sources#buffer#max_keyword_width	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^let g:neocomplete#sources#buffer#max_keyword_width =$/;"	v
g:neocomplete#sources#dictionary#dictionaries	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/dictionary.vim	/^let g:neocomplete#sources#dictionary#dictionaries =$/;"	v
g:neocomplete#sources#member#input_patterns	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^let g:neocomplete#sources#member#input_patterns =$/;"	v
g:neocomplete#sources#member#prefix_patterns	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^let g:neocomplete#sources#member#prefix_patterns =$/;"	v
g:neocomplete#sources#omni#functions	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^let g:neocomplete#sources#omni#functions =$/;"	v
g:neocomplete#sources#omni#input_patterns	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^let g:neocomplete#sources#omni#input_patterns =$/;"	v
g:neocomplete#tags_filter_patterns	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#tags_filter_patterns =$/;"	v
g:neocomplete#text_mode_filetypes	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let g:neocomplete#text_mode_filetypes =$/;"	v
g:NERDTreeIgnore	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeSortOrder	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:omni#cpp#includes#CACHE_FILE_TIME	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_FILE_TIME = {}$/;"	v
g:omni#cpp#includes#CACHE_INCLUDES	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_INCLUDES = {}$/;"	v
g:omni#cpp#namespaces#CacheResolve	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheResolve = {}$/;"	v
g:omni#cpp#namespaces#CacheUsing	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheUsing = {}$/;"	v
g:omni#cpp#utils#CACHE_TAG_INHERITS	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#CACHE_TAG_INHERITS = {}$/;"	v
g:omni#cpp#utils#szFilterGlobalScope	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope .= "&& (!has_key(v:val, 'enum') || (has_key(v:val, 'enum') && v:val.enum =~ '^\\\\w\\\\+$')))"$/;"	v
g:omni#cpp#utils#szFilterGlobalScope	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope = "(!has_key(v:val, 'class') && !has_key(v:val, 'struct') && !has_key(v:val, 'union') && !has_key(v:val, 'namespace')"$/;"	v
g:SrcExpl_gobackKey	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_gobackKey = '<SPACE>'$/;"	v
g:SrcExpl_isUpdateTags	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_isUpdateTags = 1$/;"	v
g:SrcExpl_jumpKey	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_jumpKey = '<CR>'$/;"	v
g:SrcExpl_markList	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let g:SrcExpl_markList = []$/;"	v
g:SrcExpl_nextDefKey	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_nextDefKey = ''$/;"	v
g:SrcExpl_pluginList	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_pluginList = [$/;"	v
g:SrcExpl_prevDefKey	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_prevDefKey = ''$/;"	v
g:SrcExpl_refreshTime	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_refreshTime = 100$/;"	v
g:SrcExpl_searchLocalDef	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_searchLocalDef = 1$/;"	v
g:SrcExpl_updateTagsCmd	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_updateTagsCmd = 'ctags --sort=foldcase -R .'$/;"	v
g:SrcExpl_updateTagsKey	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_updateTagsKey = ''$/;"	v
g:SrcExpl_winHeight	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_winHeight = 8$/;"	v
g:ST_WIN_CMD	plugin/script/bundle/genutils/autoload/genutils.vim	/^let g:ST_WIN_CMD = 0 | let g:ST_WIN_SH = 1 | let g:ST_UNIX = 2$/;"	v
g:tagbar_iconchars	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:themis#vital	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^let g:themis#vital = vital#of('themis')$/;"	v
g:vimshell_cat_command	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_cat_command =$/;"	v
g:vimshell_cd_command	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_cd_command =$/;"	v
g:vimshell_disable_escape_highlight	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_disable_escape_highlight =$/;"	v
g:vimshell_enable_debug	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_enable_debug =$/;"	v
g:vimshell_enable_start_insert	plugin/script/bundle/vimshell.vim/autoload/vimshell/init.vim	/^let g:vimshell_enable_start_insert =$/;"	v
g:vimshell_enable_stay_insert	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^let g:vimshell_enable_stay_insert =$/;"	v
g:vimshell_enable_transient_user_prompt	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_enable_transient_user_prompt =$/;"	v
g:vimshell_environment_term	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_environment_term =$/;"	v
g:vimshell_escape_colors	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_escape_colors =$/;"	v
g:vimshell_execute_file_list	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^  let g:vimshell_execute_file_list = {}$/;"	v
g:vimshell_external_history_path	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_external_history_path =$/;"	v
g:vimshell_force_overwrite_statusline	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_force_overwrite_statusline =$/;"	v
g:vimshell_interactive_command_options	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_interactive_command_options =$/;"	v
g:vimshell_interactive_cygwin_commands	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_interactive_cygwin_commands =$/;"	v
g:vimshell_interactive_cygwin_home	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_interactive_cygwin_home =$/;"	v
g:vimshell_interactive_cygwin_path	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_interactive_cygwin_path =$/;"	v
g:vimshell_interactive_echoback_commands	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_interactive_echoback_commands =$/;"	v
g:vimshell_interactive_encodings	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_interactive_encodings =$/;"	v
g:vimshell_interactive_interpreter_commands	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_interactive_interpreter_commands =$/;"	v
g:vimshell_interactive_monochrome_commands	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_interactive_monochrome_commands =$/;"	v
g:vimshell_interactive_no_save_history_commands	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_interactive_no_save_history_commands =$/;"	v
g:vimshell_interactive_prompts	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_interactive_prompts =$/;"	v
g:vimshell_interactive_update_time	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_interactive_update_time =$/;"	v
g:vimshell_max_command_history	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_max_command_history =$/;"	v
g:vimshell_max_directory_stack	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_max_directory_stack =$/;"	v
g:vimshell_no_save_history_commands	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_no_save_history_commands =$/;"	v
g:vimshell_popup_command	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_popup_command =$/;"	v
g:vimshell_popup_height	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_popup_height =$/;"	v
g:vimshell_scrollback_limit	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_scrollback_limit =$/;"	v
g:vimshell_split_command	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_split_command =$/;"	v
g:vimshell_terminal_commands	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_terminal_commands =$/;"	v
g:vimshell_use_terminal_command	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_use_terminal_command =$/;"	v
g:vimshell_vimshrc_path	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let g:vimshell_vimshrc_path =$/;"	v
gather_candidate	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def gather_candidate(self, context):$/;"	m	class:Base
gather_candidates	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugin/script/bundle/vimshell.vim/rplugin/python3/deoplete/sources/vimshell.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugin/script/bundle/vimshell.vim/rplugin/python3/deoplete/sources/vimshell_history.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_results	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def gather_results(self, context):$/;"	m	class:Deoplete
genutils#AddNotifyWindowClose	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#AddNotifyWindowClose(windowTitle, functionName)$/;"	f
genutils#AddToFCShellPre	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#AddToFCShellPre(funcName)$/;"	f
genutils#AlignWordWithWordInPreviousLine	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#AlignWordWithWordInPreviousLine()$/;"	f
genutils#ArrayVarExists	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ArrayVarExists(varName, index)$/;"	f
genutils#BinInsertSort	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#BinInsertSort(cmp, direction) range$/;"	f
genutils#BinInsertSort2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#BinInsertSort2(start, end, cmp, direction, accessor, mover, context)$/;"	f
genutils#BinSearchForInsert	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#BinSearchForInsert(start, end, line, cmp, direction)$/;"	f
genutils#BinSearchForInsert2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#BinSearchForInsert2(start, end, line, cmp, direction,$/;"	f
genutils#BinSearchList	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#BinSearchList(list, start, end, item, cmp)$/;"	f
genutils#CenterWordInSpace	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CenterWordInSpace()$/;"	f
genutils#CheckWindowClose	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CheckWindowClose()$/;"	f
genutils#CleanDiffOptions	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CleanDiffOptions()$/;"	f
genutils#CleanupFileName	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CleanupFileName(fileName)$/;"	f
genutils#CleanupFileName2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CleanupFileName2(fileName, win32ProtectedChars)$/;"	f
genutils#ClearAllSigns	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ClearAllSigns()$/;"	f
genutils#CloseWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CloseWindow(win, force)$/;"	f
genutils#CloseWinNoEa	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CloseWinNoEa(winnr, force)$/;"	f
genutils#CmpByLength	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByLength(line1, line2, ...)$/;"	f
genutils#CmpByLineLengthNname	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByLineLengthNname(line1, line2, ...)$/;"	f
genutils#CmpByNumber	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByNumber(line1, line2, ...)$/;"	f
genutils#CmpByString	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByString(line1, line2, ...)$/;"	f
genutils#CmpByStringIgnoreCase	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByStringIgnoreCase(line1, line2, ...)$/;"	f
genutils#CmpJavaImports	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpJavaImports(line1, line2, ...)$/;"	f
genutils#CommonPath	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CommonPath(path1, path2, ...)$/;"	f
genutils#CommonString	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CommonString(str1, str2)$/;"	f
genutils#CreateArgString	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CreateArgString(argList, sep, ...)$/;"	f
genutils#CrUnProtectedCharsPattern	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CrUnProtectedCharsPattern(chars, ...)$/;"	f
genutils#CurLineHasSign	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#CurLineHasSign()$/;"	f
genutils#DebugShowArgs	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#DebugShowArgs(...)$/;"	f
genutils#DeEscape	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#DeEscape(str)$/;"	f
genutils#DefFCShellInstall	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#DefFCShellInstall()$/;"	f
genutils#DefFCShellUninstall	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#DefFCShellUninstall()$/;"	f
genutils#DefFileChangedShell	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#DefFileChangedShell()$/;"	f
genutils#EatChar	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#EatChar(pat)$/;"	f
genutils#Escape	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#Escape(str, chars)$/;"	f
genutils#EscapeCommand	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#EscapeCommand(cmd, args, pipe)$/;"	f
genutils#ExpandStr	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ExpandStr(str)$/;"	f
genutils#ExtractFuncListing	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ExtractFuncListing(funcName, hLines, tLines)$/;"	f
genutils#FindBufferForName	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#FindBufferForName(fileName)$/;"	f
genutils#FindWindowForBuffer	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#FindWindowForBuffer(bufferName, checkUnlisted)$/;"	f
genutils#GetBufNameForAu	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetBufNameForAu(bufName)$/;"	f
genutils#GetColPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetColPosition(id)$/;"	f
genutils#GetLastWinnrInStack	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetLastWinnrInStack(dir)$/;"	f
genutils#GetLinePosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetLinePosition(id)$/;"	f
genutils#GetNextWinnrInStack	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetNextWinnrInStack(dir)$/;"	f
genutils#GetPersistentVar	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetPersistentVar(pluginName, persistentVar, default)$/;"	f
genutils#GetPreviewWinnr	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetPreviewWinnr()$/;"	f
genutils#GetSelectedIndex	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetSelectedIndex()$/;"	f
genutils#GetShellEnvType	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetShellEnvType()$/;"	f
genutils#GetSpacer	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetSpacer(width)$/;"	f
genutils#GetVimCmdOutput	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#GetVimCmdOutput(cmd)$/;"	f
genutils#IsOnlyHorizontalWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#IsOnlyHorizontalWindow()$/;"	f
genutils#IsOnlyVerticalWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#IsOnlyVerticalWindow()$/;"	f
genutils#IsPositionSet	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#IsPositionSet(id)$/;"	f
genutils#MakeArgumentList	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MakeArgumentList(...)$/;"	f
genutils#MakeArgumentString	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MakeArgumentString(...)$/;"	f
genutils#MapAppendCascaded	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MapAppendCascaded(lhs, rhs, mapMode)$/;"	f
genutils#MarkActiveWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MarkActiveWindow()$/;"	f
genutils#MoveCurLineToWinLine	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MoveCurLineToWinLine(n)$/;"	f
genutils#MoveCursorToLastInWinStack	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MoveCursorToLastInWinStack(dir)$/;"	f
genutils#MoveCursorToNextInWinStack	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MoveCursorToNextInWinStack(dir)$/;"	f
genutils#MoveCursorToWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#MoveCursorToWindow(winno)$/;"	f
genutils#NumberOfWindows	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#NumberOfWindows()$/;"	f
genutils#OnMS	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#OnMS()$/;"	f
genutils#OpenWinNoEa	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#OpenWinNoEa(winOpenCmd)$/;"	f
genutils#OptClearBuffer	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#OptClearBuffer()$/;"	f
genutils#PathIsAbsolute	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#PathIsAbsolute(path)$/;"	f
genutils#PathIsFileNameOnly	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#PathIsFileNameOnly(path)$/;"	f
genutils#PromptForElement	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#PromptForElement(array, default, msg, skip, useDialog,$/;"	f
genutils#PutPersistentVar	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#PutPersistentVar(pluginName, persistentVar, value)$/;"	f
genutils#QSort	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#QSort(cmp, direction) range$/;"	f
genutils#QSort2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#QSort2(start, end, cmp, direction, accessor, swapper, context)$/;"	f
genutils#QuoteStr	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#QuoteStr(str)$/;"	f
genutils#RelPathFromDir	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RelPathFromDir(srcDir, tgtFile)$/;"	f
genutils#RelPathFromFile	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RelPathFromFile(srcFile, tgtFile)$/;"	f
genutils#RemoveFromFCShellPre	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RemoveFromFCShellPre(funcName)$/;"	f
genutils#RemoveNotifyWindowClose	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RemoveNotifyWindowClose(windowTitle)$/;"	f
genutils#ResetHardPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetHardPosition(id)$/;"	f
genutils#ResetHardPositionWithContext	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetHardPositionWithContext(id)$/;"	f
genutils#ResetSoftPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetSoftPosition(id)$/;"	f
genutils#ResetWindowSettings	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetWindowSettings()$/;"	f
genutils#ResetWindowSettings2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetWindowSettings2(id)$/;"	f
genutils#RestoreActiveWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreActiveWindow()$/;"	f
genutils#RestoreHardPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreHardPosition(id)$/;"	f
genutils#RestoreHardPositionWithContext	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreHardPositionWithContext(id)$/;"	f
genutils#RestoreSoftPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreSoftPosition(id)$/;"	f
genutils#RestoreVisualSelection	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreVisualSelection(id)$/;"	f
genutils#RestoreWindowSettings	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings()$/;"	f
genutils#RestoreWindowSettings2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings2(id)$/;"	f
genutils#Roman2Decimal	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#Roman2Decimal(str)$/;"	f
genutils#SaveHardPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveHardPosition(id)$/;"	f
genutils#SaveHardPositionWithContext	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveHardPositionWithContext(id)$/;"	f
genutils#SaveSoftPosition	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveSoftPosition(id)$/;"	f
genutils#SaveVisualSelection	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveVisualSelection(id)$/;"	f
genutils#SaveWindowSettings	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveWindowSettings()$/;"	f
genutils#SaveWindowSettings2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveWindowSettings2(id, overwrite)$/;"	f
genutils#SetupScratchBuffer	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SetupScratchBuffer()$/;"	f
genutils#ShiftWordInSpace	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ShiftWordInSpace(dir)$/;"	f
genutils#ShowLinesWithSyntax	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#ShowLinesWithSyntax() range$/;"	f
genutils#SilentDelete	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SilentDelete(arg1, ...)$/;"	f
genutils#SilentSubstitute	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#SilentSubstitute(pat, cmd)$/;"	f
genutils#UnEscape	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#UnEscape(str, chars)$/;"	f
genutils#UserDirComplete2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#UserDirComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f
genutils#UserFileComplete	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#UserFileComplete(ArgLead, CmdLine, CursorPos, smartSlash,$/;"	f
genutils#UserFileComplete2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#UserFileComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f
genutils#UserFileExpand	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! genutils#UserFileExpand(fileArgs)$/;"	f
GetAccessFilter	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:GetAccessFilter(szFilter, szAccessFilter)$/;"	f
GetAllUsingNamespaceMapFromCurrentBuffer	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromCurrentBuffer(...)$/;"	f
GetAllUsingNamespaceMapFromFile	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromFile(szFilePath, ...)$/;"	f
getchar	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:getchar(...)$/;"	f
getchar	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar_safe	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:getchar_safe(...)$/;"	f
getchar_safe	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getchar_safe	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
GetClassScopeAtCursor	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetClassScopeAtCursor()$/;"	f
GetCommand	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:GetCommand(withPopupTrigger, withSkipPat, actCmd, innerCmd)$/;"	f
GetDefDir	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:GetDefDir()$/;"	f
GetEditWin	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:GetEditWin()$/;"	f
getfilename	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:getfilename(cache_dir, filename)$/;"	f
getfilename	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
GetFileWinnr	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
GetIncludeListFromCurrentBuffer	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromCurrentBuffer()$/;"	f
GetIncludeListFromFile	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromFile(szFilePath, bUpdate) $/;"	f
getlines	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def getlines(vim, start=1, end='$'):$/;"	f
getLogger	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def getLogger(name):$/;"	f
GetNamespaceAliasListFromLine	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasListFromLine(szLine)$/;"	f
GetNamespaceAliasMap	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasMap()$/;"	f
GetNamespaceListFromLine	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceListFromLine(szLine)$/;"	f
GetNearbyTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(all, forcecurrent, ...) abort$/;"	f
GetNextWinnrInStack	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:GetNextWinnrInStack(dir)$/;"	f
GetPath	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:GetPath(ln)$/;"	f
GetSelectedBookmark	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:GetSelectedBookmark()$/;"	f
GetSelectedDir	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:GetSelectedDir()$/;"	f
GetSelectedNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:GetSelectedNode()$/;"	f
GetStopPositionForLocalSearch	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetStopPositionForLocalSearch()$/;"	f
GetSupportedFiletypes	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
GetSymbol	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:GetSymbol(tokens)$/;"	f
GetTagInfo	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
GetTagOfSameScope	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! s:GetTagOfSameScope(listTags, szScopeToMatch)$/;"	f
gettime	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^    function! s:gettime() abort$/;"	f
GetTreeBufNum	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:GetTreeBufNum()$/;"	f
GetTreeWinNum	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:GetTreeWinNum()$/;"	f
GetTypeInfoOfReturnedType	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfReturnedType(contextStack, szFunctionName)$/;"	f
GetTypeInfoOfVariable	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfVariable(contextStack, szVariable, bSearchDecl)$/;"	f
GetUsingNamespaceListFromMap	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetUsingNamespaceListFromMap(namespaceMap, ...)$/;"	f
GetVimspecFold	plugin/script/bundle/deoplete.nvim/vim-themis/ftplugin/vimspec/foldexpr.vim	/^function! GetVimspecFold(lnum) abort$/;"	f
GetVimspecIndent	plugin/script/bundle/deoplete.nvim/vim-themis/indent/vimspec.vim	/^function! GetVimspecIndent() abort$/;"	f
GetVisualSelection	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:GetVisualSelection()$/;"	f
GetVisualSelectionEscaped	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:GetVisualSelectionEscaped(flags)$/;"	f
GetWinDim	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:GetWinDim(dir, win)$/;"	f
get_augrouplist	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_augrouplist() "{{{$/;"	f
get_buffer_config	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_buffer_config(context, filetype, buffer_var, user_var, default_var):$/;"	f
get_buffer_include_files	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:get_buffer_include_files(bufnumber) "{{{$/;"	f
get_cached_script_candidates	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_cached_script_candidates() "{{{$/;"	f
get_candidates	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_candidates(complete_results, complete_pos, complete_str) "{{{$/;"	f
get_candidates	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^function! s:get_candidates(complete_results, complete_pos, complete_str) abort "{{{$/;"	f
get_cmdlist	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_cmdlist() "{{{$/;"	f
get_complete_args	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete.vim	/^function! s:get_complete_args(cur_keyword_str, args) abort "{{{$/;"	f
get_complete_commands	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete.vim	/^function! s:get_complete_commands(cur_keyword_str) abort "{{{$/;"	f
get_complete_pos	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_complete_pos(complete_results) "{{{$/;"	f
get_complete_pos	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^function! s:get_complete_pos(complete_results) abort "{{{$/;"	f
get_complete_position	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def get_complete_position(self, context):$/;"	m	class:Base
get_complete_position	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugin/script/bundle/vimshell.vim/rplugin/python3/deoplete/sources/vimshell.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugin/script/bundle/vimshell.vim/rplugin/python3/deoplete/sources/vimshell_history.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_convert_candidates	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_case.vim	/^function! s:get_convert_candidates(candidates) abort$/;"	f
get_current_origin_url	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:get_current_origin_url(bundle) abort$/;"	f
get_current_sha	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:get_current_sha(bundle)$/;"	f
get_custom	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_custom(custom, source_name, key, default):$/;"	f
get_default_include_files	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! s:get_default_include_files(filetype) "{{{$/;"	f
get_envlist	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_envlist() "{{{$/;"	f
get_functionlist	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_functionlist() "{{{$/;"	f
get_functions	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:get_functions(sid) abort$/;"	f
get_glob_files	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:get_glob_files(complete_str, path) "{{{$/;"	f
get_glob_files	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/file.vim	/^function! s:get_glob_files(complete_str, path) abort "{{{$/;"	f
get_glob_files	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! s:get_glob_files(path, complete_str) abort "{{{$/;"	f
get_include_files	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! s:get_include_files(complete_str) "{{{$/;"	f
get_include_files	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:get_include_files(nestlevel, lines, filetype, pattern, path, expr) "{{{$/;"	f
get_last_selected	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Buffer.vim	/^function! s:get_last_selected() abort$/;"	f
get_last_status	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:get_last_status()$/;"	f
get_last_status	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_last_status	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_list	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! s:get_list() abort "{{{$/;"	f
get_list	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! s:get_list() abort "{{{$/;"	f
get_local_variables	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_local_variables() "{{{$/;"	f
get_mappinglist	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_mappinglist() "{{{$/;"	f
get_map_str	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
get_member_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_member_list(cur_text, var_name) "{{{$/;"	f
get_member_list	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^function! s:get_member_list(context, cur_text, var_name) abort "{{{$/;"	f
get_member_pattern	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_member_pattern(filetype) "{{{$/;"	f
get_member_pattern	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^function! s:get_member_pattern(filetype) abort "{{{$/;"	f
get_omni_funcs	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_omni_funcs(filetype) "{{{$/;"	f
get_omni_funcs	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^function! s:get_omni_funcs(filetype) abort "{{{$/;"	f
get_omni_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_omni_list(list) "{{{$/;"	f
get_omni_list	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^function! s:get_omni_list(list) abort "{{{$/;"	f
get_omni_list	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete.vim	/^function! s:get_omni_list(list) abort "{{{$/;"	f
get_postfix	plugin/script/bundle/vimshell.vim/autoload/vimshell/init.vim	/^function! s:get_postfix(prefix, is_create) abort "{{{$/;"	f
get_prelude	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! s:get_prelude() abort "{{{$/;"	f
get_prelude	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! s:get_prelude() abort "{{{$/;"	f
get_process	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! s:get_process() abort "{{{$/;"	f
get_process	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! s:get_process() abort "{{{$/;"	f
get_prompt_linenr	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! s:get_prompt_linenr() abort "{{{$/;"	f
get_realpath	plugin/script/bundle/deoplete.nvim/vim-themis/bin/themis.bat	/^:get_realpath$/;"	l
get_real_pos	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:get_real_pos(line, col) abort "{{{$/;"	f
get_script_candidates	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_script_candidates(bufnumber) "{{{$/;"	f
get_selected_text	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f
get_simple_buffer_config	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_simple_buffer_config(context, buffer_var, user_var):$/;"	f
get_sources_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:get_sources_list() "{{{$/;"	f
get_sources_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_sources_list() "{{{$/;"	f
get_sources_list	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:get_sources_list(context) abort "{{{$/;"	f
get_sources_list	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^function! s:get_sources_list(context) abort "{{{$/;"	f
get_string	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! s:get_string() abort "{{{$/;"	f
get_string	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! s:get_string() abort "{{{$/;"	f
get_syn_names	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_syn_names(vim):$/;"	f
get_throws_args	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:get_throws_args(value) abort$/;"	f
get_variablelist	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_variablelist(dict, prefix) "{{{$/;"	f
get_variable_type	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_variable_type(expression) "{{{$/;"	f
get_virtual_col	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:get_virtual_col(line, col) abort "{{{$/;"	f
glob	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^  function! s:glob(expr)$/;"	f
glob	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
globpath	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:globpath(path, expr)$/;"	f
globpath	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f
globpath	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f
globruntime	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def globruntime(runtimepath, path):$/;"	f
GotoFileWindow	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
GotoNextFold	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextFold() abort$/;"	f
GotoNextToplevelTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
GotoPrevFold	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoPrevFold() abort$/;"	f
goto_markedwin	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_markedwin(...) abort$/;"	f
goto_tagbar	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
goto_win	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
group_by	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_by	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
guard.restore	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:guard.restore() abort$/;"	f
GUDebugEcho	plugin/script/bundle/genutils/autoload/genutils.vim	/^command! -complete=file -nargs=* GUDebugEcho :echo <q-args>$/;"	c
HandleBufDelete	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:HandleBufDelete(bufname, bufnr) abort$/;"	f
HandleBufWrite	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:HandleBufWrite(fname) abort$/;"	f
HandleMiddleMouse	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:HandleMiddleMouse()$/;"	f
HandleOnlyWindow	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:HandleOnlyWindow() abort$/;"	f
hangup	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:hangup(is_insert) abort "{{{$/;"	f
has	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:has(list, value)$/;"	f
has	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
HasATagFileOrTagEnvChanged	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:HasATagFileOrTagEnvChanged()$/;"	f
hash	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:hash(str) abort$/;"	f
hash	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:hash(str) abort$/;"	f
HasOpenFileWindows	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:HasOpenFileWindows() abort$/;"	f
HasTagEnvChanged	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:HasTagEnvChanged()$/;"	f
has_common_items	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:has_common_items(list1, list2)$/;"	f
has_common_items	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_common_items	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_doc	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:has_doc(rtp) abort$/;"	f
has_index	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:has_index(list, index)$/;"	f
has_index	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_index	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_vimproc	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:has_vimproc()$/;"	f
has_vimproc	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^function! s:has_vimproc() abort$/;"	f
has_vimproc	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^function! s:has_vimproc() abort$/;"	f
header#add_header	plugin/script/bundle/vim-header/autoload/header.vim	/^fun header#add_header(type, license, silent)$/;"	f
head_filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters.vim	/^function! s:head_filter(list, complete_str) "{{{$/;"	f
health#deoplete#check	plugin/script/bundle/deoplete.nvim/autoload/health/deoplete.vim	/^function! health#deoplete#check() abort$/;"	f
hello	plugin/script/bundle/deoplete.nvim/vim-themis/test/fixture/scope.vim	/^function! s:hello(name) abort$/;"	f
helper.define	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:helper.define() abort$/;"	f
helper.defined	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:helper.defined() abort$/;"	f
helper.funcs	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/scope.vim	/^function! s:helper.funcs(path) abort$/;"	f
helper.prefix	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:helper.prefix(prefix) abort$/;"	f
helper.undef	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:helper.undef() abort$/;"	f
helper.vars	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/scope.vim	/^function! s:helper.vars(path) abort$/;"	f
helper.with	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:helper.with(...) abort$/;"	f
helper.__command__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^function! s:helper.__command__() abort$/;"	f
helper.__expect__	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^function! s:helper.__expect__() abort$/;"	f
Helptags	plugin/script/autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
helptags	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:helptags(rtp) abort$/;"	f
hide	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:hide() abort "{{{$/;"	f
HidePopup	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:HidePopup()$/;"	f
HighlightTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
highlight_with	plugin/script/bundle/vimshell.vim/autoload/vimshell/parser.vim	/^function! s:highlight_with(start, end, syntax) abort "{{{$/;"	f
hook.before	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^function! s:hook.before() abort$/;"	f
hook.before_each	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^function! s:hook.before_each() abort$/;"	f
hook.is_called_in_order	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^function! s:hook.is_called_in_order() abort$/;"	f
hook.with_parent_is_called_in_order	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^function! s:hook.with_parent_is_called_in_order() abort$/;"	f
iconv	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^function! s:iconv(expr, from, to)$/;"	f
iconv	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:iconv(expr, from, to)$/;"	f
iconv	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/async_cache.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
iconv	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
iconv	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
iconv	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
iconv	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
IdoAccept	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:IdoAccept(splitWin, key)$/;"	f
IdoBS	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:IdoBS()$/;"	f
IdoSwitchTo	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:IdoSwitchTo(mode)$/;"	f
IdoTab	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:IdoTab()$/;"	f
iexe_send_string	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:iexe_send_string(string, is_insert, linenr) abort "{{{$/;"	f
import	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:import(name, ...) abort$/;"	f
import	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:import(name, ...)$/;"	f
import	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:import(name, ...) abort dict$/;"	f
import	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:import(name, ...) abort dict$/;"	f
import_plugin	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def import_plugin(path, source, classname):$/;"	f
indentLine	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^augroup indentLine$/;"	a
IndentLinesDisable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! IndentLinesDisable call <SID>IndentLinesDisable()$/;"	c
IndentLinesDisable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesDisable()$/;"	f
IndentLinesEnable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! IndentLinesEnable call <SID>IndentLinesEnable()$/;"	c
IndentLinesEnable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesEnable()$/;"	f
IndentLinesReset	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! -nargs=? IndentLinesReset call <SID>ResetWidth(<f-args>)$/;"	c
IndentLinesToggle	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! IndentLinesToggle call <SID>IndentLinesToggle()$/;"	c
IndentLinesToggle	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesToggle()$/;"	f
indent_current_line	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! s:indent_current_line() abort "{{{$/;"	f
info	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def info(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
init	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^init = False$/;"	v
Init	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
init	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/less.vim	/^function! s:init(commands, context, options, interactive) abort "{{{$/;"	f
init	plugin/script/bundle/Vundle.vim/test/files/test.erl	/^init(_) ->$/;"	f	module:mmc_logmon_sup
InitColor	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:InitColor()$/;"	f
InitComplete	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:InitComplete()$/;"	f
initialize_include	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:initialize_include(filename, filetype) "{{{$/;"	f
initialize_source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:initialize_source(srcname) "{{{$/;"	f
initialize_source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:initialize_source(srcname) "{{{$/;"	f
initialize_source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:initialize_source(srcname) abort "{{{$/;"	f
initialize_source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^function! s:initialize_source(srcname, filetype) abort "{{{$/;"	f
initialize_tags	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:initialize_tags(filename) "{{{$/;"	f
initialize_tags	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/tag.vim	/^function! s:initialize_tags(filename) abort "{{{$/;"	f
initialize_variables	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:initialize_variables() "{{{$/;"	f
initialize_vimshell	plugin/script/bundle/vimshell.vim/autoload/vimshell/init.vim	/^function! s:initialize_vimshell(path, context) abort "{{{$/;"	f
InitMarkVariables	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:InitMarkVariables()$/;"	f
InitNerdTree	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:InitNerdTree(name)$/;"	f
InitTypes	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
InitVariable	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:InitVariable(var, value)$/;"	f
InitWindow	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
init_process	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/exe.vim	/^function! s:init_process(commands, context, options) abort "{{{$/;"	f
init_python	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def init_python(self, args):$/;"	m	class:DeopleteHandlers
init_terminal	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:init_terminal() abort "{{{$/;"	f
init_var	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
init_vimrc	build_all.sh	/^function init_vimrc()$/;"	f
input_helper	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:input_helper(funcname, args)$/;"	f
input_helper	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_helper	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_safe	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:input_safe(...)$/;"	f
input_safe	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
input_safe	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
InsertNewNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:InsertNewNode()$/;"	f
insert_enter	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! s:insert_enter() abort "{{{$/;"	f
insert_enter	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:insert_enter() abort "{{{$/;"	f
insert_head	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:insert_head() abort "{{{$/;"	f
insert_last_word	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:insert_last_word() abort "{{{$/;"	f
insert_user_and_right_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! s:insert_user_and_right_prompt() abort "{{{$/;"	f
install_config	build_all.sh	/^function install_config()$/;"	f
install_plugin	build_all.sh	/^function install_plugin()$/;"	f
install_vim	build_all.sh	/^function install_vim()$/;"	f
install_vimtool	build_all.sh	/^function install_vimtool()$/;"	f
instance.restore	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:instance.restore() abort$/;"	f
interrupt	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:interrupt(is_insert) abort "{{{$/;"	f
intersect	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
intersect	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
InvokeFuncs	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:InvokeFuncs(funcList)$/;"	f
IsCached	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:IsCached(cache, szKey1, szKey2)$/;"	f
IsTreeOpen	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:IsTreeOpen()$/;"	f
IsTypeInfoResolved	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! s:IsTypeInfoResolved(szTypeInfo)$/;"	f
IsUnnamedType	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:IsUnnamedType(tagItem)$/;"	f
IsValid	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:IsValid(fileName)$/;"	f
IsValidFile	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
is_cmdwin	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f
is_comparable	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:is_comparable(a, b) abort$/;"	f
is_cygwin	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_cygwin()$/;"	f
is_cygwin	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_cygwin	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_delimiter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! s:is_delimiter() abort "{{{$/;"	f
is_dict	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_dict(Value)$/;"	f
is_dict	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_dict	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_float	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_float(Value)$/;"	f
is_float	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_float	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_funcref	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_funcref(Value)$/;"	f
is_funcref	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_funcref	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_initialized	plugin/script/bundle/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:is_initialized() abort$/;"	f
is_integer	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_integer(Value)$/;"	f
is_invalid_string_as_num	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:is_invalid_string_as_num(a, b) abort$/;"	f
is_list	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_list(Value)$/;"	f
is_list	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_list	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_mac	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_mac()$/;"	f
is_mac	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_mac	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_no_echoback	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:is_no_echoback() abort "{{{$/;"	f
is_number	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_number(Value)$/;"	f
is_number	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_number	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_numeric	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_numeric(Value)$/;"	f
is_numeric	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_numeric	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_skip	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_skip(event, context) abort$/;"	f
is_skip	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def is_skip(self, context, disabled_syntaxes,$/;"	m	class:Deoplete
is_skip_auto_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! s:is_skip_auto_complete(cur_text) "{{{$/;"	f
is_skip_auto_complete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! s:is_skip_auto_complete(cur_text) abort "{{{$/;"	f
is_skip_text	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_skip_text(event) abort$/;"	f
is_skk_enabled	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:is_skk_enabled() abort "{{{$/;"	f
is_string	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_string(Value)$/;"	f
is_string	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_string	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_unix	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_unix()$/;"	f
is_unix	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_unix	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_valid	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:is_valid(interactive) abort "{{{$/;"	f
is_windows	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_windows()$/;"	f
is_windows	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_windows() abort$/;"	f
is_windows	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:is_windows() abort$/;"	f
itersource	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def itersource(self, context):$/;"	m	class:Deoplete
join_posix_lines	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:join_posix_lines(lines, ...) abort$/;"	f
join_posix_lines	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:join_posix_lines(lines, ...) abort$/;"	f
JumpToChild	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:JumpToChild(direction)$/;"	f
JumpToFirstChild	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:JumpToFirstChild()$/;"	f
JumpToLastChild	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:JumpToLastChild()$/;"	f
JumpToParent	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:JumpToParent()$/;"	f
JumpToRoot	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:JumpToRoot()$/;"	f
JumpToSibling	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:JumpToSibling(forward)$/;"	f
JumpToTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar) abort$/;"	f
justify_equal_spacing	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
justify_equal_spacing	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
keyword_escape	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! s:keyword_escape(complete_str) "{{{$/;"	f
kill	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def kill(self):$/;"	m	class:Process
kill_process	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:kill_process(interactive) abort "{{{$/;"	f
kind.action_table.delete.func	plugin/script/bundle/vimshell.vim/autoload/unite/kinds/vimshell_history.vim	/^function! s:kind.action_table.delete.func(candidates) abort "{{{$/;"	f
kind.action_table.edit.func	plugin/script/bundle/vimshell.vim/autoload/unite/kinds/vimshell_history.vim	/^function! s:kind.action_table.edit.func(candidate) abort "{{{$/;"	f
kind.action_table.execute.func	plugin/script/bundle/vimshell.vim/autoload/unite/kinds/vimshell_history.vim	/^function! s:kind.action_table.execute.func(candidates) abort "{{{$/;"	f
kind.action_table.insert.func	plugin/script/bundle/vimshell.vim/autoload/unite/kinds/vimshell_history.vim	/^function! s:kind.action_table.insert.func(candidates) abort "{{{$/;"	f
kind.action_table.unite__new_candidate.func	plugin/script/bundle/vimshell.vim/autoload/unite/kinds/vimshell_history.vim	/^function! s:kind.action_table.unite__new_candidate.func(candidate) abort "{{{$/;"	f
KindheaderTag.closeFold	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.closeFold() abort dict$/;"	f
KindheaderTag.getPrototype	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.getPrototype(short) abort dict$/;"	f
KindheaderTag.isFoldable	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFoldable() abort dict$/;"	f
KindheaderTag.isFolded	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFolded() abort dict$/;"	f
KindheaderTag.isKindheader	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isKindheader() abort dict$/;"	f
KindheaderTag.openFold	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.openFold() abort dict$/;"	f
KindheaderTag.toggleFold	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.toggleFold() abort dict$/;"	f
known_files.get	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
known_files.has	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
known_files.put	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
known_files.rm	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
l:winnr	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let l:winnr = winnr()			$/;"	v
last_find	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^def last_find(s, needles):$/;"	f
last_screen	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/less.vim	/^function! s:last_screen() abort "{{{$/;"	f
LeadingSpaceDisable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! LeadingSpaceDisable call <SID>LeadingSpaceDisable()$/;"	c
LeadingSpaceDisable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceDisable()$/;"	f
LeadingSpaceEnable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! LeadingSpaceEnable call <SID>LeadingSpaceEnable()$/;"	c
LeadingSpaceEnable	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceEnable()$/;"	f
LeadingSpaceToggle	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^command! LeadingSpaceToggle call <SID>LeadingSpaceToggle()$/;"	c
LeadingSpaceToggle	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceToggle()$/;"	f
levenshtein_distance	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
levenshtein_distance	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
lines	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:lines(str) abort$/;"	f
lines	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:lines(str) abort$/;"	f
LINES_ABOVE	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^LINES_ABOVE = 20$/;"	v
LINES_BELOW	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^LINES_BELOW = 20$/;"	v
load	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:load(...) dict abort$/;"	f
load	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:load(...) dict$/;"	f
load	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:load(...) abort dict$/;"	f
load	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:load(...) abort dict$/;"	f
loaded_comments_plugin	plugin/script/bundle/comments/plugin/comments.vim	/^let loaded_comments_plugin="v2.10"$/;"	v
loaded_genutils	plugin/script/bundle/genutils/plugin/genutils.vim	/^let loaded_genutils = 205$/;"	v
loaded_nerd_tree	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_srcexpl	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let loaded_srcexpl = 1$/;"	v
loaded_taglist	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	plugin/script/bundle/taglist/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	plugin/script/bundle/taglist/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_trinity	plugin/script/bundle/Trinity/plugin/trinity.vim	/^let loaded_trinity = 1$/;"	v
LoadUserTypeDefs	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
load_cached_doc	plugin/script/bundle/vimshell.vim/autoload/vimshell/help.vim	/^function! s:load_cached_doc() abort "{{{$/;"	f
load_external_module	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def load_external_module(file, module):$/;"	f
load_filters	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def load_filters(self, context):$/;"	m	class:Deoplete
load_from_file	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^function! s:load_from_file(filename, pattern_file_name, mark, minlen, maxfilename, fileencoding, is_string) "{{{$/;"	f
load_from_file	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/async_cache.vim	/^function! s:load_from_file(filename, pattern_file_name, mark, minlen, fileencoding, is_string) abort "{{{$/;"	f
load_from_tags	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^function! s:load_from_tags(filename, pattern_file_name, mark, minlen, maxfilename, fileencoding) "{{{$/;"	f
load_from_tags	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/async_cache.vim	/^function! s:load_from_tags(filename, pattern_file_name, mark, minlen, fileencoding) abort "{{{$/;"	f
load_nested_bundle	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^function! s:load_nested_bundle(bundle) abort$/;"	f
load_plugins	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:load_plugins(runtimepaths) abort$/;"	f
load_scripts	plugin/script/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:load_scripts(bang)$/;"	f
load_sources	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def load_sources(self, context):$/;"	m	class:Deoplete
load_themisrc	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:load_themisrc(paths) abort$/;"	f
LocalSearchDecl	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:LocalSearchDecl(name)$/;"	f
log	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:log(str, ...) abort$/;"	f
LoggingMixin	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^class LoggingMixin(object):$/;"	c
logmethod	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def logmethod(func):$/;"	f
log_format	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^log_format = '%(asctime)s %(levelname)-8s (%(name)s) %(message)s'$/;"	v
log_message_cooldown	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^log_message_cooldown = 0.5$/;"	v
LookupArgs	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:LookupArgs(pattern)$/;"	f
LookupBufs	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:LookupBufs(pattern)$/;"	f
LookupFile	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=file LookupFile :call$/;"	c
lookupfile#AcceptFile	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#AcceptFile(splitWin, key)$/;"	f
lookupfile#ClearCache	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#ClearCache()$/;"	f
lookupfile#CloseWindow	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#CloseWindow()$/;"	f
lookupfile#Complete	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#Complete(findstart, base)$/;"	f
lookupfile#ExpandCamelCase	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#ExpandCamelCase(str)$/;"	f
lookupfile#IsPopupHidden	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#IsPopupHidden()$/;"	f
lookupfile#LookupFile	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#LookupFile(showingFiller, ...)$/;"	f
lookupfile#OpenWindow	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! lookupfile#OpenWindow(bang, initPat)$/;"	f
LookupFileReset	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:LookupFileReset(force)$/;"	f
LookupFileSet	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:LookupFileSet()$/;"	f
LookupPath	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:LookupPath(pattern)$/;"	f
LookupReset	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:LookupReset()$/;"	f
LookupUsing	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:LookupUsing(ftr, bang, initPat, minPatLen)$/;"	f
LookupWalk	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:LookupWalk(pattern)$/;"	f
LUArgs	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=file LUArgs :call$/;"	c
LUBufs	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=file LUBufs :call$/;"	c
LUPath	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=file LUPath :call$/;"	c
LUTags	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=tag LUTags :call$/;"	c
LUWalk	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=dir LUWalk :call$/;"	c
main	plugin/script/bundle/deoplete.nvim/vim-themis/macros/themis_startup.vim	/^function! s:main() abort$/;"	f
main	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^function! s:main(argv) "{{{$/;"	f
main	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/async_cache.vim	/^function! s:main(argv) abort "{{{$/;"	f
make	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^function! s:make(keys, values, ...) abort$/;"	f
make_cache	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/dictionary.vim	/^function! s:make_cache(filetype) abort "{{{$/;"	f
make_cache_buffer	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:make_cache_buffer(srcname) abort "{{{$/;"	f
make_cache_current_buffer	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:make_cache_current_buffer(start, end) abort "{{{$/;"	f
make_cache_current_buffer	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^function! s:make_cache_current_buffer(start, end) abort "{{{$/;"	f
make_cache_current_line	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! s:make_cache_current_line() abort "{{{$/;"	f
make_cache_file	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:make_cache_file(srcname) abort "{{{$/;"	f
make_cache_lines	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^function! s:make_cache_lines(srcname, filetype, lines) abort "{{{$/;"	f
make_completion_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:make_completion_list(list, kind) "{{{$/;"	f
make_helper	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:make_helper() abort$/;"	f
make_index	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^function! s:make_index(list, ...) abort$/;"	f
make_sync_command	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:make_sync_command(bang, bundle) abort$/;"	f
manual_completion_begin	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def manual_completion_begin(self, context):$/;"	m	class:DeopleteHandlers
MapKeys	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
map_accum	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_accum	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
Mark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^command! -nargs=? Mark call s:DoMark(<f-args>)$/;"	c
MarkCurrentWord	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:MarkCurrentWord()$/;"	f
MarkRegex	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:MarkRegex(...) " MarkRegex(regexp)$/;"	f
mark_window	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
match	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:match(str, pattern) abort$/;"	f
Match	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:Match(expr, pat, start)$/;"	f
matcher.filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_head.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_old.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_fuzzy.vim	/^function! s:matcher.filter(context) abort "{{{$/;"	f
matcher.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_head.vim	/^function! s:matcher.filter(context) abort "{{{$/;"	f
matcher.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_length.vim	/^function! s:matcher.filter(context) abort "{{{$/;"	f
matcher.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_nothing.vim	/^function! s:matcher.filter(context) abort "{{{$/;"	f
matcher_impl	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/expect.vim	/^function! s:matcher_impl(name, f, error_msg, ...) dict abort$/;"	f
MatchingExactCase	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:MatchingExactCase(filePat)$/;"	f
match_pair	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:match_pair(string, start_pattern, end_pattern, start_cnt) "{{{$/;"	f
match_wildcard	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! s:match_wildcard(cur_text, pattern, complete_pos) "{{{$/;"	f
max	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:max(list, expr)$/;"	f
max_by	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:max_by(list, expr)$/;"	f
max_by	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_by	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^function! s:max_by(dict, expr) abort$/;"	f
max_by	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
merge_results	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def merge_results(self, results, context_input):$/;"	m	class:Deoplete
min	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:min(list, expr)$/;"	f
min_by	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:min_by(list, expr)$/;"	f
min_by	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
min_by	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^function! s:min_by(dict, expr) abort$/;"	f
min_by	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
mmc_logmon_sup	plugin/script/bundle/Vundle.vim/test/files/test.erl	/^-module(mmc_logmon_sup).$/;"	m
move_end_argument	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:move_end_argument() abort "{{{$/;"	f
move_head	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! s:move_head() abort "{{{$/;"	f
move_head	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:move_head() abort "{{{$/;"	f
MyFailureMessage	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^      function! MyFailureMessage(not, name, x, y) abort$/;"	f
names_by_defined_order	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^function! s:names_by_defined_order(suite) abort$/;"	f
neocomplcache	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^  augroup neocomplcache$/;"	a
neocomplcache#add_dictionaries	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#add_dictionaries(dictionaries) "{{{$/;"	f
neocomplcache#async_cache#main	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^  function! neocomplcache#async_cache#main(argv) "{{{$/;"	f
neocomplcache#available_sources	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#available_sources() "{{{$/;"	f
neocomplcache#cache#async_load_from_file	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#async_load_from_file(cache_dir, filename, pattern, mark) "{{{$/;"	f
neocomplcache#cache#async_load_from_tags	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#async_load_from_tags(cache_dir, filename, filetype, mark, is_create_tags) "{{{$/;"	f
neocomplcache#cache#check_cache	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_cache(cache_dir, key, async_cache_dictionary, keyword_list_dictionary, ...) "{{{$/;"	f
neocomplcache#cache#check_cache_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_cache_list(cache_dir, key, async_cache_dictionary, index_keyword_list, ...) "{{{$/;"	f
neocomplcache#cache#check_old_cache	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_old_cache(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#encode_name	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#encode_name(cache_dir, filename)$/;"	f
neocomplcache#cache#filereadable	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#filereadable(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#getfilename	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#getfilename(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#index_load_from_cache	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#index_load_from_cache(cache_dir, filename, ...) "{{{$/;"	f
neocomplcache#cache#list2index	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#list2index(list, dictionary, is_string) "{{{$/;"	f
neocomplcache#cache#load_from_cache	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#load_from_cache(cache_dir, filename, ...) "{{{$/;"	f
neocomplcache#cache#readfile	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#readfile(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#save_cache	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#save_cache(cache_dir, filename, keyword_list) "{{{$/;"	f
neocomplcache#cache#save_cache_old	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#save_cache_old(cache_dir, filename, keyword_list) "{{{$/;"	f
neocomplcache#cache#writefile	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#writefile(cache_dir, filename, list) "{{{$/;"	f
neocomplcache#cancel_popup	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#cancel_popup()$/;"	f
neocomplcache#check_completion_length_match	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#check_completion_length_match(complete_str, completion_length) "{{{$/;"	f
neocomplcache#check_invalid_omnifunc	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#check_invalid_omnifunc(omnifunc) "{{{$/;"	f
neocomplcache#check_match_filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#check_match_filter(complete_str) "{{{$/;"	f
neocomplcache#close_popup	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#close_popup()$/;"	f
neocomplcache#commands#_clean	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_clean() "{{{$/;"	f
neocomplcache#commands#_initialize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_initialize() "{{{$/;"	f
neocomplcache#commands#_lock	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_lock() "{{{$/;"	f
neocomplcache#commands#_lock_source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_lock_source(source_name) "{{{$/;"	f
neocomplcache#commands#_set_file_type	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_set_file_type(filetype) "{{{$/;"	f
neocomplcache#commands#_toggle_lock	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_toggle_lock() "{{{$/;"	f
neocomplcache#commands#_unlock	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_unlock() "{{{$/;"	f
neocomplcache#commands#_unlock_source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_unlock_source(source_name) "{{{$/;"	f
neocomplcache#complete#auto_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#auto_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#manual_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#manual_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#sources_manual_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#sources_manual_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#unite_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#unite_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#_get_complete_pos	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_get_complete_pos(sources) "{{{$/;"	f
neocomplcache#complete#_get_results	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_get_results(cur_text, ...) "{{{$/;"	f
neocomplcache#complete#_get_words	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_get_words(sources, complete_pos, complete_str) "{{{$/;"	f
neocomplcache#complete#_set_results_pos	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_set_results_pos(cur_text, ...) "{{{$/;"	f
neocomplcache#complete#_set_results_words	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_set_results_words(sources) "{{{$/;"	f
neocomplcache#complete_check	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#complete_check() "{{{$/;"	f
neocomplcache#complete_common_string	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#complete_common_string()$/;"	f
neocomplcache#context_filetype#get	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/context_filetype.vim	/^function! neocomplcache#context_filetype#get(filetype) "{{{$/;"	f
neocomplcache#context_filetype#initialize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/context_filetype.vim	/^function! neocomplcache#context_filetype#initialize() "{{{$/;"	f
neocomplcache#context_filetype#set	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/context_filetype.vim	/^function! neocomplcache#context_filetype#set() "{{{$/;"	f
neocomplcache#custom_source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#custom_source(source_name, option_name, value) "{{{$/;"	f
neocomplcache#define_filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#define_filter(filter) "{{{$/;"	f
neocomplcache#define_source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#define_source(source) "{{{$/;"	f
neocomplcache#dictionary_filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#dictionary_filter(dictionary, complete_str) "{{{$/;"	f
neocomplcache#disable_default_dictionary	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#disable_default_dictionary(variable) "{{{$/;"	f
neocomplcache#dup_filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#dup_filter(list) "{{{$/;"	f
neocomplcache#escape_match	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#escape_match(str) "{{{$/;"	f
neocomplcache#exists_echodoc	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#exists_echodoc() "{{{$/;"	f
neocomplcache#filetype_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplcache#filters#converter_abbr#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_abbr.vim	/^function! neocomplcache#filters#converter_abbr#define() "{{{$/;"	f
neocomplcache#filters#converter_case#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_case.vim	/^function! neocomplcache#filters#converter_case#define() "{{{$/;"	f
neocomplcache#filters#converter_delimiter#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_delimiter.vim	/^function! neocomplcache#filters#converter_delimiter#define() "{{{$/;"	f
neocomplcache#filters#converter_nothing#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_nothing.vim	/^function! neocomplcache#filters#converter_nothing#define() "{{{$/;"	f
neocomplcache#filters#converter_remove_next_keyword#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^function! neocomplcache#filters#converter_remove_next_keyword#define() "{{{$/;"	f
neocomplcache#filters#converter_remove_next_keyword#get_next_keyword	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^function! neocomplcache#filters#converter_remove_next_keyword#get_next_keyword(source_name) "{{{$/;"	f
neocomplcache#filters#dictionary_filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters.vim	/^function! neocomplcache#filters#dictionary_filter(dictionary, complete_str) "{{{$/;"	f
neocomplcache#filters#keyword_filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters.vim	/^function! neocomplcache#filters#keyword_filter(list, complete_str) "{{{$/;"	f
neocomplcache#filters#matcher_fuzzy#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^function! neocomplcache#filters#matcher_fuzzy#define() "{{{$/;"	f
neocomplcache#filters#matcher_head#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_head.vim	/^function! neocomplcache#filters#matcher_head#define() "{{{$/;"	f
neocomplcache#filters#matcher_old#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_old.vim	/^function! neocomplcache#filters#matcher_old#define() "{{{$/;"	f
neocomplcache#filters#sorter_length#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_length.vim	/^function! neocomplcache#filters#sorter_length#define() "{{{$/;"	f
neocomplcache#filters#sorter_nothing#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_nothing.vim	/^function! neocomplcache#filters#sorter_nothing#define() "{{{$/;"	f
neocomplcache#filters#sorter_rank#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_rank.vim	/^function! neocomplcache#filters#sorter_rank#define() "{{{$/;"	f
neocomplcache#get_completion_length	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_completion_length(source_name) "{{{$/;"	f
neocomplcache#get_context	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_context() "{{{$/;"	f
neocomplcache#get_context_filetype	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_context_filetype(...) "{{{$/;"	f
neocomplcache#get_context_filetype_range	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_context_filetype_range(...) "{{{$/;"	f
neocomplcache#get_current_neocomplcache	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_current_neocomplcache() "{{{$/;"	f
neocomplcache#get_cur_text	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_cur_text(...) "{{{$/;"	f
neocomplcache#get_keyword_pattern	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_keyword_pattern(...) "{{{$/;"	f
neocomplcache#get_keyword_pattern_end	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_keyword_pattern_end(...) "{{{$/;"	f
neocomplcache#get_next_keyword	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_next_keyword() "{{{$/;"	f
neocomplcache#get_next_keyword_pattern	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_next_keyword_pattern(...) "{{{$/;"	f
neocomplcache#get_sources_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_sources_list(dictionary, filetype) "{{{$/;"	f
neocomplcache#get_source_filetypes	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_source_filetypes(filetype) "{{{$/;"	f
neocomplcache#get_temporary_directory	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_temporary_directory() "{{{$/;"	f
neocomplcache#handler#_change_update_time	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_change_update_time() "{{{$/;"	f
neocomplcache#handler#_do_auto_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_do_auto_complete(event) "{{{$/;"	f
neocomplcache#handler#_on_complete_done	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_complete_done() "{{{$/;"	f
neocomplcache#handler#_on_insert_enter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_insert_enter() "{{{$/;"	f
neocomplcache#handler#_on_insert_leave	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_insert_leave() "{{{$/;"	f
neocomplcache#handler#_on_moved_i	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_moved_i() "{{{$/;"	f
neocomplcache#handler#_on_write_post	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_write_post() "{{{$/;"	f
neocomplcache#handler#_restore_update_time	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_restore_update_time() "{{{$/;"	f
neocomplcache#has_vimproc	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#has_vimproc() "{{{$/;"	f
neocomplcache#head_match	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#head_match(checkstr, headstr) "{{{$/;"	f
neocomplcache#helper#call_filters	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#call_filters(filters, source, context) "{{{$/;"	f
neocomplcache#helper#call_hook	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#call_hook(sources, hook_name, context) "{{{$/;"	f
neocomplcache#helper#clear_result	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#clear_result() "{{{$/;"	f
neocomplcache#helper#complete_check	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#complete_check() "{{{$/;"	f
neocomplcache#helper#filetype_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplcache#helper#ftdictionary2list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#ftdictionary2list(dictionary, filetype) "{{{$/;"	f
neocomplcache#helper#get_completion_length	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_completion_length(plugin_name) "{{{$/;"	f
neocomplcache#helper#get_cur_text	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_cur_text() "{{{$/;"	f
neocomplcache#helper#get_sources_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_sources_list(...) "{{{$/;"	f
neocomplcache#helper#get_source_filetypes	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_source_filetypes(filetype) "{{{$/;"	f
neocomplcache#helper#get_syn_name	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_syn_name(is_trans) "{{{$/;"	f
neocomplcache#helper#is_enabled_source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#is_enabled_source(source_name) "{{{$/;"	f
neocomplcache#helper#is_omni_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#is_omni_complete(cur_text) "{{{$/;"	f
neocomplcache#helper#keyword_escape	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#keyword_escape(complete_str) "{{{$/;"	f
neocomplcache#helper#match_word	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#match_word(cur_text, ...) "{{{$/;"	f
neocomplcache#helper#unite_patterns	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#unite_patterns(pattern_var, filetype) "{{{$/;"	f
neocomplcache#init#disable	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#disable() "{{{$/;"	f
neocomplcache#init#enable	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#enable() "{{{$/;"	f
neocomplcache#init#is_enabled	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#is_enabled() "{{{$/;"	f
neocomplcache#init#lazy	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#lazy() "{{{$/;"	f
neocomplcache#init#_autocmds	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_autocmds() "{{{$/;"	f
neocomplcache#init#_current_neocomplcache	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_current_neocomplcache() "{{{$/;"	f
neocomplcache#init#_filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_filter(filter) "{{{$/;"	f
neocomplcache#init#_filters	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_filters(names) "{{{$/;"	f
neocomplcache#init#_others	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_others() "{{{$/;"	f
neocomplcache#init#_source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_source(source) "{{{$/;"	f
neocomplcache#init#_sources	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_sources(names) "{{{$/;"	f
neocomplcache#init#_variables	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_variables() "{{{$/;"	f
neocomplcache#initialize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#initialize() "{{{$/;"	f
neocomplcache#is_auto_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_auto_complete() "{{{$/;"	f
neocomplcache#is_auto_select	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_auto_select() "{{{$/;"	f
neocomplcache#is_disabled_source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_disabled_source(source_name) "{{{$/;"	f
neocomplcache#is_enabled	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_enabled() "{{{$/;"	f
neocomplcache#is_enabled_source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_enabled_source(source_name) "{{{$/;"	f
neocomplcache#is_eskk_convertion	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_eskk_convertion(cur_text) "{{{$/;"	f
neocomplcache#is_eskk_enabled	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_eskk_enabled() "{{{$/;"	f
neocomplcache#is_locked	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_locked(...) "{{{$/;"	f
neocomplcache#is_multibyte_input	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_multibyte_input(cur_text) "{{{$/;"	f
neocomplcache#is_plugin_locked	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_plugin_locked(source_name) "{{{$/;"	f
neocomplcache#is_prefetch	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_prefetch() "{{{$/;"	f
neocomplcache#is_sources_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_sources_complete() "{{{$/;"	f
neocomplcache#is_text_mode	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_text_mode() "{{{$/;"	f
neocomplcache#is_win	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_win() "{{{$/;"	f
neocomplcache#is_windows	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_windows() "{{{$/;"	f
neocomplcache#keyword_escape	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#keyword_escape(complete_str) "{{{$/;"	f
neocomplcache#keyword_filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#keyword_filter(list, complete_str) "{{{$/;"	f
neocomplcache#mappings#cancel_popup	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#cancel_popup() "{{{$/;"	f
neocomplcache#mappings#close_popup	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#close_popup() "{{{$/;"	f
neocomplcache#mappings#complete_common_string	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#complete_common_string() "{{{$/;"	f
neocomplcache#mappings#define_default_mappings	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#define_default_mappings() "{{{$/;"	f
neocomplcache#mappings#popup_post	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#popup_post() "{{{$/;"	f
neocomplcache#mappings#smart_close_popup	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#smart_close_popup() "{{{$/;"	f
neocomplcache#mappings#start_manual_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#start_manual_complete(...) "{{{$/;"	f
neocomplcache#mappings#start_manual_complete_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#start_manual_complete_list(complete_pos, complete_str, candidates) "{{{$/;"	f
neocomplcache#mappings#undo_completion	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#undo_completion() "{{{$/;"	f
neocomplcache#match_word	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#match_word(...) "{{{$/;"	f
neocomplcache#pack_dictionary	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#pack_dictionary(list) "{{{$/;"	f
neocomplcache#print_caching	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#print_caching(string) "{{{$/;"	f
neocomplcache#print_debug	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#print_debug(expr) "{{{$/;"	f
neocomplcache#print_error	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#print_error(string) "{{{$/;"	f
neocomplcache#print_warning	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#print_warning(string) "{{{$/;"	f
neocomplcache#set_completion_length	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#set_completion_length(source_name, length) "{{{$/;"	f
neocomplcache#set_dictionary_helper	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#set_dictionary_helper(variable, keys, value) "{{{$/;"	f
neocomplcache#skip_next_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#skip_next_complete() "{{{$/;"	f
neocomplcache#smart_close_popup	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#smart_close_popup()$/;"	f
neocomplcache#sources#buffer_complete#caching_buffer	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_buffer(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#caching_current_block	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_current_block() "{{{$/;"	f
neocomplcache#sources#buffer_complete#caching_current_line	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_current_line() "{{{$/;"	f
neocomplcache#sources#buffer_complete#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#define() "{{{$/;"	f
neocomplcache#sources#buffer_complete#disable_caching	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#disable_caching(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#enable_caching	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#enable_caching(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#get_frequencies	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#get_frequencies() "{{{$/;"	f
neocomplcache#sources#buffer_complete#output_keyword	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#output_keyword(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#print_source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#print_source(name) "{{{$/;"	f
neocomplcache#sources#dictionary_complete#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! neocomplcache#sources#dictionary_complete#define() "{{{$/;"	f
neocomplcache#sources#dictionary_complete#recaching	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! neocomplcache#sources#dictionary_complete#recaching(filetype) "{{{$/;"	f
neocomplcache#sources#filename_complete#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! neocomplcache#sources#filename_complete#define() "{{{$/;"	f
neocomplcache#sources#filename_complete#get_complete_words	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! neocomplcache#sources#filename_complete#get_complete_words(complete_str, path) "{{{$/;"	f
neocomplcache#sources#filename_include#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! neocomplcache#sources#filename_include#define() "{{{$/;"	f
neocomplcache#sources#include_complete#analyze_ruby_include_files	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#analyze_ruby_include_files(lines, path) "{{{$/;"	f
neocomplcache#sources#include_complete#analyze_vim_include_files	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#analyze_vim_include_files(lines, path) "{{{$/;"	f
neocomplcache#sources#include_complete#caching_include	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#caching_include(bufname) "{{{$/;"	f
neocomplcache#sources#include_complete#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#define() "{{{$/;"	f
neocomplcache#sources#include_complete#get_current_include_files	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_current_include_files() "{{{$/;"	f
neocomplcache#sources#include_complete#get_include_files	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_include_files(bufnumber) "{{{$/;"	f
neocomplcache#sources#include_complete#get_include_tags	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_include_tags(bufnumber) "{{{$/;"	f
neocomplcache#sources#member_complete#caching_current_buffer	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#caching_current_buffer() "{{{$/;"	f
neocomplcache#sources#member_complete#caching_current_line	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#caching_current_line() "{{{$/;"	f
neocomplcache#sources#member_complete#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#define() "{{{$/;"	f
neocomplcache#sources#omni_complete#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! neocomplcache#sources#omni_complete#define() "{{{$/;"	f
neocomplcache#sources#syntax_complete#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! neocomplcache#sources#syntax_complete#define() "{{{$/;"	f
neocomplcache#sources#syntax_complete#recaching	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! neocomplcache#sources#syntax_complete#recaching(filetype) "{{{$/;"	f
neocomplcache#sources#tags_complete#caching_tags	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^function! neocomplcache#sources#tags_complete#caching_tags(force) "{{{$/;"	f
neocomplcache#sources#tags_complete#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^function! neocomplcache#sources#tags_complete#define() "{{{$/;"	f
neocomplcache#sources#vimshell_complete#define	plugin/script/bundle/vimshell.vim/autoload/neocomplcache/sources/vimshell_complete.vim	/^function! neocomplcache#sources#vimshell_complete#define() abort "{{{$/;"	f
neocomplcache#sources#vim_complete#define	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#define() "{{{$/;"	f
neocomplcache#sources#vim_complete#get_command	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#get_command(cur_text) "{{{$/;"	f
neocomplcache#sources#vim_complete#get_cur_text	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#get_cur_text() "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#augroup	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#augroup(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#autocmd_args	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#autocmd_args(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#buffer	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#buffer(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#colorscheme_args	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#colorscheme_args(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#command	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#command(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#command_args	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#command_args(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#custom	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#custom(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#customlist	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#customlist(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#dir	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#dir(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#environment	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#environment(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#event	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#event(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#execute	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#execute(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#expand	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#expand(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#expression	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#expression(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#feature	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#feature(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#file	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#file(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#filetype	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#filetype(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#function	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#function(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#get_command_completion	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#get_command_completion(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#get_completion_name	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#get_completion_name(command_name) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#help	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#help(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#highlight	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#highlight(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#let	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#let(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#mapping	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#mapping(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#menu	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#menu(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#on_filetype	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#on_filetype() "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#option	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#option(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#recaching	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#recaching(bufname) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#shellcmd	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#shellcmd(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#tag	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#tag(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#tag_listfiles	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#tag_listfiles(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#var	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#var(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#var_dictionary	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#var_dictionary(cur_text, complete_str) "{{{$/;"	f
neocomplcache#start_manual_complete	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#start_manual_complete(...)$/;"	f
neocomplcache#system	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#system(...) "{{{$/;"	f
neocomplcache#undo_completion	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#undo_completion()$/;"	f
neocomplcache#unpack_dictionary	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#unpack_dictionary(dict) "{{{$/;"	f
neocomplcache#util#convert2list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#convert2list(expr) "{{{$/;"	f
neocomplcache#util#disable_default_dictionary	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#disable_default_dictionary(variable) "{{{$/;"	f
neocomplcache#util#dup_filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#dup_filter(list) "{{{$/;"	f
neocomplcache#util#escape_pattern	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#escape_pattern(...) "{{{$/;"	f
neocomplcache#util#expand	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#expand(path) "{{{$/;"	f
neocomplcache#util#get_last_status	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#get_last_status(...) "{{{$/;"	f
neocomplcache#util#glob	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#glob(pattern, ...) "{{{$/;"	f
neocomplcache#util#has_lua	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_lua() "{{{$/;"	f
neocomplcache#util#has_vimproc	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_vimproc() "{{{$/;"	f
neocomplcache#util#has_vimproc	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_vimproc(...) "{{{$/;"	f
neocomplcache#util#iconv	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#iconv(...) "{{{$/;"	f
neocomplcache#util#is_mac	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_mac(...) "{{{$/;"	f
neocomplcache#util#is_sudo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_sudo() "{{{$/;"	f
neocomplcache#util#is_windows	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_windows(...) "{{{$/;"	f
neocomplcache#util#join_rtp	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#join_rtp(list) "{{{$/;"	f
neocomplcache#util#mb_strlen	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#mb_strlen(...) "{{{$/;"	f
neocomplcache#util#set_default	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_default(var, val, ...)  "{{{$/;"	f
neocomplcache#util#set_default_dictionary	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_default_dictionary(variable, keys, value) "{{{$/;"	f
neocomplcache#util#set_dictionary_helper	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_dictionary_helper(...) "{{{$/;"	f
neocomplcache#util#sort_by	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#sort_by(...) "{{{$/;"	f
neocomplcache#util#split_rtp	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#split_rtp(...) "{{{$/;"	f
neocomplcache#util#strchars	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strchars(...) "{{{$/;"	f
neocomplcache#util#strwidthpart	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strwidthpart(...) "{{{$/;"	f
neocomplcache#util#strwidthpart_reverse	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strwidthpart_reverse(...) "{{{$/;"	f
neocomplcache#util#substitute_path_separator	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#substitute_path_separator(...) "{{{$/;"	f
neocomplcache#util#system	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#system(...) "{{{$/;"	f
neocomplcache#util#truncate	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#truncate(...) "{{{$/;"	f
neocomplcache#util#truncate_smart	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#truncate_smart(...) "{{{$/;"	f
neocomplcache#util#uniq	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#uniq(...) "{{{$/;"	f
neocomplcache#util#uniq	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#uniq(list) "{{{$/;"	f
neocomplcache#util#wcswidth	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#wcswidth(...) "{{{$/;"	f
neocomplcache#variables#get_custom	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_custom() "{{{$/;"	f
neocomplcache#variables#get_filters	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_filters() "{{{$/;"	f
neocomplcache#variables#get_frequencies	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_frequencies() "{{{$/;"	f
neocomplcache#variables#get_sources	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_sources() "{{{$/;"	f
neocomplcache#within_comment	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#within_comment() "{{{$/;"	f
NeoComplCacheCachingBuffer	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheCachingBuffer$/;"	c
NeoComplCacheCachingDictionary	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/dictionary_complete.vim	/^      \\ NeoComplCacheCachingDictionary$/;"	c
NeoComplCacheCachingInclude	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/include_complete.vim	/^command! -nargs=? -complete=buffer NeoComplCacheCachingInclude$/;"	c
NeoComplCacheCachingSyntax	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/syntax_complete.vim	/^      \\ NeoComplCacheCachingSyntax$/;"	c
NeoComplCacheCachingTags	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/tags_complete.vim	/^      \\ NeoComplCacheCachingTags$/;"	c
NeoComplCacheClean	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheClean$/;"	c
NeoComplCacheDisable	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheDisable$/;"	c
NeoComplCacheDisableCaching	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheDisableCaching$/;"	c
NeoComplCacheEnable	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheEnable$/;"	c
NeoComplCacheEnableCaching	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheEnableCaching$/;"	c
NeoComplCacheLock	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheLock$/;"	c
NeoComplCacheLockSource	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=1 -bar NeoComplCacheLockSource$/;"	c
NeoComplCacheOutputKeyword	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheOutputKeyword$/;"	c
NeoComplCachePrintSource	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCachePrintSource$/;"	c
NeoComplCacheSetFileType	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^  command! -nargs=1 -bar -complete=filetype NeoComplCacheSetFileType$/;"	c
NeoComplCacheSetFileType	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^  command! -nargs=1 -bar NeoComplCacheSetFileType$/;"	c
NeoComplCacheToggle	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheToggle$/;"	c
NeoComplCacheUnlock	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheUnlock$/;"	c
NeoComplCacheUnlockSource	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=1 -bar NeoComplCacheUnlockSource$/;"	c
neocomplcache_source.gather_candidates	plugin/script/bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^function! s:neocomplcache_source.gather_candidates(args, context) "{{{$/;"	f
neocomplcache_source.hooks.on_init	plugin/script/bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^function! s:neocomplcache_source.hooks.on_init(args, context) "{{{$/;"	f
neocomplete	plugin/script/bundle/neocomplete.vim/plugin/neocomplete.vim	/^  augroup neocomplete$/;"	a
neocomplete#async_cache#main	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/async_cache.vim	/^  function! neocomplete#async_cache#main(argv) abort "{{{$/;"	f
neocomplete#available_sources	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#available_sources() abort "{{{$/;"	f
neocomplete#cache#async_load_from_file	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#async_load_from_file(cache_dir, filename, pattern, mark) abort "{{{$/;"	f
neocomplete#cache#async_load_from_tags	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#async_load_from_tags(cache_dir, filename, filetype, pattern, mark) abort "{{{$/;"	f
neocomplete#cache#check_cache	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#check_cache(cache_dir, key, async_cache_dictionary, keyword_cache, is_string) abort "{{{$/;"	f
neocomplete#cache#check_old_cache	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#check_old_cache(cache_dir, filename) abort "{{{$/;"	f
neocomplete#cache#encode_name	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#encode_name(cache_dir, filename) abort$/;"	f
neocomplete#cache#filereadable	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#filereadable(cache_dir, filename) abort "{{{$/;"	f
neocomplete#cache#getfilename	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#getfilename(cache_dir, filename) abort "{{{$/;"	f
neocomplete#cache#get_cache_list	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#get_cache_list(cache_dir, async_cache_list) abort "{{{$/;"	f
neocomplete#cache#load_from_cache	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#load_from_cache(cache_dir, filename, ...) abort "{{{$/;"	f
neocomplete#cache#make_directory	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#make_directory(directory) abort "{{{$/;"	f
neocomplete#cache#readfile	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#readfile(cache_dir, filename) abort "{{{$/;"	f
neocomplete#cache#save_cache	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#save_cache(cache_dir, filename, keyword_list) abort "{{{$/;"	f
neocomplete#cache#writefile	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#writefile(cache_dir, filename, list) abort "{{{$/;"	f
neocomplete#cancel_popup	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#cancel_popup() abort$/;"	f
neocomplete#close_popup	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#close_popup() abort$/;"	f
neocomplete#commands#_clean	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_clean() abort "{{{$/;"	f
neocomplete#commands#_initialize	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_initialize() abort "{{{$/;"	f
neocomplete#commands#_lock	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_lock() abort "{{{$/;"	f
neocomplete#commands#_set_file_type	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_set_file_type(filetype) abort "{{{$/;"	f
neocomplete#commands#_toggle_lock	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_toggle_lock() abort "{{{$/;"	f
neocomplete#commands#_unlock	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_unlock() abort "{{{$/;"	f
neocomplete#complete#_check_previous_position	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_check_previous_position(cur_text, complete_pos) abort "{{{$/;"	f
neocomplete#complete#_get_complete_pos	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_get_complete_pos(sources) abort "{{{$/;"	f
neocomplete#complete#_get_results	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_get_results(cur_text, ...) abort "{{{$/;"	f
neocomplete#complete#_get_words	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_get_words(sources, complete_pos, complete_str) abort "{{{$/;"	f
neocomplete#complete#_set_previous_position	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_set_previous_position(cur_text, complete_pos) abort "{{{$/;"	f
neocomplete#complete#_set_results_pos	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_set_results_pos(cur_text, ...) abort "{{{$/;"	f
neocomplete#complete#_set_results_words	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_set_results_words(sources) abort "{{{$/;"	f
neocomplete#complete_check	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#complete_check() abort "{{{$/;"	f
neocomplete#complete_common_string	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#complete_common_string() abort$/;"	f
neocomplete#context_filetype#filetypes	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/context_filetype.vim	/^function! neocomplete#context_filetype#filetypes() abort "{{{$/;"	f
neocomplete#context_filetype#get	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/context_filetype.vim	/^function! neocomplete#context_filetype#get(filetype) abort "{{{$/;"	f
neocomplete#context_filetype#set	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/context_filetype.vim	/^function! neocomplete#context_filetype#set() abort "{{{$/;"	f
neocomplete#custom#get	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/custom.vim	/^function! neocomplete#custom#get() abort "{{{$/;"	f
neocomplete#custom#source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/custom.vim	/^function! neocomplete#custom#source(source_name, option_name, value) abort "{{{$/;"	f
neocomplete#custom_source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#custom_source(source_name, option_name, value) abort "{{{$/;"	f
neocomplete#define_filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#define_filter(filter) abort "{{{$/;"	f
neocomplete#define_source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#define_source(source) abort "{{{$/;"	f
neocomplete#disable_default_dictionary	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#disable_default_dictionary(variable) abort "{{{$/;"	f
neocomplete#dup_filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#dup_filter(list) abort "{{{$/;"	f
neocomplete#escape_match	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#escape_match(str) abort "{{{$/;"	f
neocomplete#exists_echodoc	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#exists_echodoc() abort "{{{$/;"	f
neocomplete#filetype_complete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#filetype_complete(arglead, cmdline, cursorpos) abort "{{{$/;"	f
neocomplete#filters#converter_abbr#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_abbr.vim	/^function! neocomplete#filters#converter_abbr#define() abort "{{{$/;"	f
neocomplete#filters#converter_add_paren#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_add_paren.vim	/^function! neocomplete#filters#converter_add_paren#define() abort "{{{$/;"	f
neocomplete#filters#converter_case#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_case.vim	/^function! neocomplete#filters#converter_case#define() abort "{{{$/;"	f
neocomplete#filters#converter_delimiter#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_delimiter.vim	/^function! neocomplete#filters#converter_delimiter#define() abort "{{{$/;"	f
neocomplete#filters#converter_disable_abbr#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_disable_abbr.vim	/^function! neocomplete#filters#converter_disable_abbr#define() abort "{{{$/;"	f
neocomplete#filters#converter_remove_last_paren#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^function! neocomplete#filters#converter_remove_last_paren#define() abort "{{{$/;"	f
neocomplete#filters#converter_remove_overlap#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_remove_overlap.vim	/^function! neocomplete#filters#converter_remove_overlap#define() abort "{{{$/;"	f
neocomplete#filters#converter_remove_overlap#length	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_remove_overlap.vim	/^function! neocomplete#filters#converter_remove_overlap#length(left, right) abort "{{{$/;"	f
neocomplete#filters#escape	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters.vim	/^function! neocomplete#filters#escape(string) abort "{{{$/;"	f
neocomplete#filters#fuzzy_escape	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters.vim	/^function! neocomplete#filters#fuzzy_escape(string) abort "{{{$/;"	f
neocomplete#filters#matcher_fuzzy#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_fuzzy.vim	/^function! neocomplete#filters#matcher_fuzzy#define() abort "{{{$/;"	f
neocomplete#filters#matcher_head#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_head.vim	/^function! neocomplete#filters#matcher_head#define() abort "{{{$/;"	f
neocomplete#filters#matcher_length#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_length.vim	/^function! neocomplete#filters#matcher_length#define() abort "{{{$/;"	f
neocomplete#filters#matcher_nothing#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_nothing.vim	/^function! neocomplete#filters#matcher_nothing#define() abort "{{{$/;"	f
neocomplete#filters#sorter_filename#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_filename.vim	/^function! neocomplete#filters#sorter_filename#define() abort "{{{$/;"	f
neocomplete#filters#sorter_length#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_length.vim	/^function! neocomplete#filters#sorter_length#define() abort "{{{$/;"	f
neocomplete#filters#sorter_rank#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_rank.vim	/^function! neocomplete#filters#sorter_rank#define() abort "{{{$/;"	f
neocomplete#filters#sorter_word#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_word.vim	/^function! neocomplete#filters#sorter_word#define() abort "{{{$/;"	f
neocomplete#get_context	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#get_context() abort "{{{$/;"	f
neocomplete#get_context_filetype	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#get_context_filetype(...) abort "{{{$/;"	f
neocomplete#get_current_neocomplete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#get_current_neocomplete() abort "{{{$/;"	f
neocomplete#get_cur_text	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#get_cur_text(...) abort "{{{$/;"	f
neocomplete#get_data_directory	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#get_data_directory() abort "{{{$/;"	f
neocomplete#get_default_matchers	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#get_default_matchers() abort "{{{$/;"	f
neocomplete#get_keyword_pattern	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#get_keyword_pattern(...) abort "{{{$/;"	f
neocomplete#get_keyword_pattern_end	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#get_keyword_pattern_end(...) abort "{{{$/;"	f
neocomplete#get_source_filetypes	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#get_source_filetypes(filetype) abort "{{{$/;"	f
neocomplete#handler#_do_auto_complete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_do_auto_complete(event) abort "{{{$/;"	f
neocomplete#handler#_on_complete_done	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_complete_done() abort "{{{$/;"	f
neocomplete#handler#_on_insert_char_pre	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_insert_char_pre() abort "{{{$/;"	f
neocomplete#handler#_on_insert_enter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_insert_enter() abort "{{{$/;"	f
neocomplete#handler#_on_insert_leave	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_insert_leave() abort "{{{$/;"	f
neocomplete#handler#_on_moved_i	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_moved_i() abort "{{{$/;"	f
neocomplete#handler#_on_text_changed	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_text_changed() abort "{{{$/;"	f
neocomplete#has_vimproc	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#has_vimproc() abort "{{{$/;"	f
neocomplete#head_match	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#head_match(checkstr, headstr) abort "{{{$/;"	f
neocomplete#helper#call_filters	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#call_filters(filters, source, context) abort "{{{$/;"	f
neocomplete#helper#call_hook	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#call_hook(sources, hook_name, context) abort "{{{$/;"	f
neocomplete#helper#check_filetype	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#check_filetype(dictionary) abort "{{{$/;"	f
neocomplete#helper#check_invalid_omnifunc	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#check_invalid_omnifunc(omnifunc) abort "{{{$/;"	f
neocomplete#helper#clean	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#clean(directory) abort "{{{$/;"	f
neocomplete#helper#clear_result	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#clear_result() abort "{{{$/;"	f
neocomplete#helper#complete_check	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#complete_check() abort "{{{$/;"	f
neocomplete#helper#complete_configure	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#complete_configure() abort "{{{$/;"	f
neocomplete#helper#filetype_complete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#filetype_complete(arglead, cmdline, cursorpos) abort "{{{$/;"	f
neocomplete#helper#get_cur_text	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_cur_text(...) abort "{{{$/;"	f
neocomplete#helper#get_force_omni_complete_pos	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_force_omni_complete_pos(cur_text) abort "{{{$/;"	f
neocomplete#helper#get_sources_list	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_sources_list(...) abort "{{{$/;"	f
neocomplete#helper#get_source_filetypes	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_source_filetypes(filetype) abort "{{{$/;"	f
neocomplete#helper#get_syn_name	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_syn_name(is_trans) abort "{{{$/;"	f
neocomplete#helper#indent_current_line	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#indent_current_line() abort "{{{$/;"	f
neocomplete#helper#is_enabled_source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#is_enabled_source(source, filetype) abort "{{{$/;"	f
neocomplete#helper#match_word	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#match_word(cur_text, ...) abort "{{{$/;"	f
neocomplete#helper#sort_human	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#sort_human(candidates) abort "{{{$/;"	f
neocomplete#helper#unite_patterns	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#unite_patterns(pattern_var, filetype) abort "{{{$/;"	f
neocomplete#init#disable	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^function! neocomplete#init#disable() abort "{{{$/;"	f
neocomplete#init#enable	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^function! neocomplete#init#enable() abort "{{{$/;"	f
neocomplete#init#is_enabled	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^function! neocomplete#init#is_enabled() abort "{{{$/;"	f
neocomplete#init#_autocmds	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^function! neocomplete#init#_autocmds() abort "{{{$/;"	f
neocomplete#init#_context	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^function! neocomplete#init#_context(context) abort "{{{$/;"	f
neocomplete#init#_current_neocomplete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^function! neocomplete#init#_current_neocomplete() abort "{{{$/;"	f
neocomplete#init#_filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^function! neocomplete#init#_filter(filter) abort "{{{$/;"	f
neocomplete#init#_filters	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^function! neocomplete#init#_filters(names) abort "{{{$/;"	f
neocomplete#init#_others	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^function! neocomplete#init#_others() abort "{{{$/;"	f
neocomplete#init#_source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^function! neocomplete#init#_source(source) abort "{{{$/;"	f
neocomplete#init#_sources	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^function! neocomplete#init#_sources(names) abort "{{{$/;"	f
neocomplete#init#_variables	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^function! neocomplete#init#_variables() abort "{{{$/;"	f
neocomplete#initialize	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#initialize() abort "{{{$/;"	f
neocomplete#is_auto_complete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#is_auto_complete() abort "{{{$/;"	f
neocomplete#is_auto_select	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#is_auto_select() abort "{{{$/;"	f
neocomplete#is_cache_disabled	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#is_cache_disabled() abort "{{{$/;"	f
neocomplete#is_enabled	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#is_enabled() abort "{{{$/;"	f
neocomplete#is_eskk_enabled	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#is_eskk_enabled() abort "{{{$/;"	f
neocomplete#is_locked	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#is_locked(...) abort "{{{$/;"	f
neocomplete#is_multibyte_input	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#is_multibyte_input(cur_text) abort "{{{$/;"	f
neocomplete#is_prefetch	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#is_prefetch() abort "{{{$/;"	f
neocomplete#is_text_mode	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#is_text_mode() abort "{{{$/;"	f
neocomplete#is_windows	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#is_windows() abort "{{{$/;"	f
neocomplete#mappings#auto_complete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#auto_complete() abort "{{{$/;"	f
neocomplete#mappings#cancel_popup	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#cancel_popup() abort "{{{$/;"	f
neocomplete#mappings#close_popup	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#close_popup() abort "{{{$/;"	f
neocomplete#mappings#complete_common_string	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#complete_common_string() abort "{{{$/;"	f
neocomplete#mappings#define_default_mappings	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#define_default_mappings() abort "{{{$/;"	f
neocomplete#mappings#fallback	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#fallback(i) abort "{{{$/;"	f
neocomplete#mappings#manual_complete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#manual_complete() abort "{{{$/;"	f
neocomplete#mappings#popup_post	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#popup_post() abort "{{{$/;"	f
neocomplete#mappings#refresh	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#refresh() abort "{{{$/;"	f
neocomplete#mappings#smart_close_popup	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#smart_close_popup() abort "{{{$/;"	f
neocomplete#mappings#start_manual_complete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#start_manual_complete(...) abort "{{{$/;"	f
neocomplete#mappings#undo_completion	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#undo_completion() abort "{{{$/;"	f
neocomplete#match_word	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#match_word(...) abort "{{{$/;"	f
neocomplete#print_debug	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#print_debug(expr) abort "{{{$/;"	f
neocomplete#print_error	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#print_error(string) abort "{{{$/;"	f
neocomplete#print_warning	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#print_warning(string) abort "{{{$/;"	f
neocomplete#set_default_matchers	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#set_default_matchers(matchers) abort "{{{$/;"	f
neocomplete#set_dictionary_helper	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#set_dictionary_helper(variable, keys, value) abort "{{{$/;"	f
neocomplete#skip_next_complete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#skip_next_complete() abort "{{{$/;"	f
neocomplete#smart_close_popup	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#smart_close_popup() abort$/;"	f
neocomplete#sources#buffer#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#define() abort "{{{$/;"	f
neocomplete#sources#buffer#get_frequencies	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#get_frequencies() abort "{{{$/;"	f
neocomplete#sources#buffer#make_cache	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#make_cache(name) abort "{{{$/;"	f
neocomplete#sources#buffer#make_cache_current_line	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#make_cache_current_line() abort "{{{$/;"	f
neocomplete#sources#dictionary#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/dictionary.vim	/^function! neocomplete#sources#dictionary#define() abort "{{{$/;"	f
neocomplete#sources#dictionary#get_dictionaries	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/dictionary.vim	/^function! neocomplete#sources#dictionary#get_dictionaries(filetype) abort "{{{$/;"	f
neocomplete#sources#dictionary#remake_cache	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/dictionary.vim	/^function! neocomplete#sources#dictionary#remake_cache(filetype) abort "{{{$/;"	f
neocomplete#sources#file#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/file.vim	/^function! neocomplete#sources#file#define() abort "{{{$/;"	f
neocomplete#sources#member#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#define() abort "{{{$/;"	f
neocomplete#sources#member#make_cache_current_buffer	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#make_cache_current_buffer() abort "{{{$/;"	f
neocomplete#sources#member#make_cache_current_line	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#make_cache_current_line() abort "{{{$/;"	f
neocomplete#sources#member#remake_cache	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#remake_cache(filetype) abort "{{{$/;"	f
neocomplete#sources#omni#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^function! neocomplete#sources#omni#define() abort "{{{$/;"	f
neocomplete#sources#tag#define	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/tag.vim	/^function! neocomplete#sources#tag#define() abort "{{{$/;"	f
neocomplete#sources#tag#make_cache	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/tag.vim	/^function! neocomplete#sources#tag#make_cache(force) abort "{{{$/;"	f
neocomplete#sources#vimshell#define	plugin/script/bundle/vimshell.vim/autoload/neocomplete/sources/vimshell.vim	/^function! neocomplete#sources#vimshell#define() abort "{{{$/;"	f
neocomplete#sources#vimshell_history#define	plugin/script/bundle/vimshell.vim/autoload/neocomplete/sources/vimshell_history.vim	/^function! neocomplete#sources#vimshell_history#define() abort "{{{$/;"	f
neocomplete#start_manual_complete	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#start_manual_complete(...) abort$/;"	f
neocomplete#system	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#system(...) abort "{{{$/;"	f
neocomplete#undo_completion	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#undo_completion() abort$/;"	f
neocomplete#util#convert2list	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#convert2list(expr) abort "{{{$/;"	f
neocomplete#util#disable_default_dictionary	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#disable_default_dictionary(variable) abort "{{{$/;"	f
neocomplete#util#dup_filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#dup_filter(list) abort "{{{$/;"	f
neocomplete#util#escape_pattern	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#escape_pattern(...) abort "{{{$/;"	f
neocomplete#util#expand	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#expand(path) abort "{{{$/;"	f
neocomplete#util#get_last_status	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#get_last_status(...) abort "{{{$/;"	f
neocomplete#util#get_vital	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#get_vital() abort "{{{$/;"	f
neocomplete#util#glob	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#glob(pattern, ...) abort "{{{$/;"	f
neocomplete#util#has_vimproc	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#has_vimproc() abort "{{{$/;"	f
neocomplete#util#iconv	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#iconv(...) abort "{{{$/;"	f
neocomplete#util#is_complete_select	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_complete_select() abort "{{{$/;"	f
neocomplete#util#is_mac	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_mac(...) abort "{{{$/;"	f
neocomplete#util#is_sudo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_sudo() abort "{{{$/;"	f
neocomplete#util#is_text_changed	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_text_changed() abort "{{{$/;"	f
neocomplete#util#is_windows	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_windows(...) abort "{{{$/;"	f
neocomplete#util#join_rtp	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#join_rtp(list) abort "{{{$/;"	f
neocomplete#util#mb_strlen	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#mb_strlen(...) abort "{{{$/;"	f
neocomplete#util#set_default	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#set_default(var, val, ...) abort  "{{{$/;"	f
neocomplete#util#set_default_dictionary	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#set_default_dictionary(variable, keys, value) abort "{{{$/;"	f
neocomplete#util#set_dictionary_helper	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#set_dictionary_helper(variable, keys, pattern) abort "{{{$/;"	f
neocomplete#util#sort_by	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#sort_by(...) abort "{{{$/;"	f
neocomplete#util#split_rtp	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#split_rtp(...) abort "{{{$/;"	f
neocomplete#util#strchars	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#strchars(...) abort "{{{$/;"	f
neocomplete#util#strwidthpart	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#strwidthpart(...) abort "{{{$/;"	f
neocomplete#util#strwidthpart_reverse	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#strwidthpart_reverse(...) abort "{{{$/;"	f
neocomplete#util#substitute_path_separator	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#substitute_path_separator(...) abort "{{{$/;"	f
neocomplete#util#system	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#system(...) abort "{{{$/;"	f
neocomplete#util#truncate	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#truncate(...) abort "{{{$/;"	f
neocomplete#util#truncate_smart	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#truncate_smart(...) abort "{{{$/;"	f
neocomplete#util#uniq	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#uniq(...) abort "{{{$/;"	f
neocomplete#util#uniq	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#uniq(list) abort "{{{$/;"	f
neocomplete#util#wcswidth	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^function! neocomplete#util#wcswidth(string) abort "{{{$/;"	f
neocomplete#variables#get_filters	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_filters() abort "{{{$/;"	f
neocomplete#variables#get_frequencies	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_frequencies() abort "{{{$/;"	f
neocomplete#variables#get_source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_source(name) abort "{{{$/;"	f
neocomplete#variables#get_sources	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_sources() abort "{{{$/;"	f
neocomplete#within_comment	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^function! neocomplete#within_comment() abort "{{{$/;"	f
NeoCompleteBufferMakeCache	plugin/script/bundle/neocomplete.vim/plugin/neocomplete/buffer.vim	/^      \\ NeoCompleteBufferMakeCache$/;"	c
NeoCompleteClean	plugin/script/bundle/neocomplete.vim/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteClean$/;"	c
NeoCompleteDictionaryMakeCache	plugin/script/bundle/neocomplete.vim/plugin/neocomplete/dictionary.vim	/^      \\ NeoCompleteDictionaryMakeCache$/;"	c
NeoCompleteDisable	plugin/script/bundle/neocomplete.vim/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteDisable$/;"	c
NeoCompleteEnable	plugin/script/bundle/neocomplete.vim/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteEnable$/;"	c
NeoCompleteLock	plugin/script/bundle/neocomplete.vim/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteLock$/;"	c
NeoCompleteMemberMakeCache	plugin/script/bundle/neocomplete.vim/plugin/neocomplete/member.vim	/^      \\ NeoCompleteMemberMakeCache$/;"	c
NeoCompleteSetFileType	plugin/script/bundle/neocomplete.vim/plugin/neocomplete.vim	/^command! -nargs=1 -bar -complete=filetype NeoCompleteSetFileType$/;"	c
NeoCompleteTagMakeCache	plugin/script/bundle/neocomplete.vim/plugin/neocomplete/tag.vim	/^      \\ NeoCompleteTagMakeCache$/;"	c
NeoCompleteToggle	plugin/script/bundle/neocomplete.vim/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteToggle$/;"	c
NeoCompleteUnlock	plugin/script/bundle/neocomplete.vim/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteUnlock$/;"	c
neocomplete_source.gather_candidates	plugin/script/bundle/neocomplete.vim/autoload/unite/sources/neocomplete.vim	/^function! s:neocomplete_source.gather_candidates(args, context) abort "{{{$/;"	f
neocomplete_source.hooks.on_init	plugin/script/bundle/neocomplete.vim/autoload/unite/sources/neocomplete.vim	/^function! s:neocomplete_source.hooks.on_init(args, context) abort "{{{$/;"	f
NERDTree	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^command! -n=? -complete=dir NERDTree :call s:InitNerdTree('<args>')$/;"	c
NERDTreeClose	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^command! -n=0 NERDTreeClose :call s:CloseTreeIfOpen()$/;"	c
NERDTreeFromBookmark	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,s:CompleteBookmarks NERDTreeFromBookmark call s:InitNerdTree('<args>')$/;"	c
NERDTreeGetCurrentNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! NERDTreeGetCurrentNode()$/;"	f
NERDTreeGetCurrentPath	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! NERDTreeGetCurrentPath()$/;"	f
NERDTreeToggle	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^command! -n=? -complete=dir NERDTreeToggle :call s:Toggle('<args>')$/;"	c
nested_bundle.after	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! nested_bundle.after() abort$/;"	f
nested_bundle.__fifth__	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! nested_bundle.__fifth__() abort$/;"	f
nested_bundle.__first__	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! nested_bundle.__first__() abort$/;"	f
nested_bundle.__fourth__	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! nested_bundle.__fourth__() abort$/;"	f
nested_bundle.__second__	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! nested_bundle.__second__() abort$/;"	f
nested_bundle.__third__	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! nested_bundle.__third__() abort$/;"	f
new	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:new(plugin_name) abort$/;"	f
new	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:new(plugin_name) abort$/;"	f
next_half_screen	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/less.vim	/^function! s:next_half_screen() abort "{{{$/;"	f
next_line	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/less.vim	/^function! s:next_line() abort "{{{$/;"	f
next_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! s:next_prompt() abort "{{{$/;"	f
next_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:next_prompt() abort "{{{$/;"	f
next_screen	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/less.vim	/^function! s:next_screen() abort "{{{$/;"	f
NormalTag.getPrototype	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.getPrototype(short) abort dict$/;"	f
NormalTag.isNormalTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.isNormalTag() abort dict$/;"	f
NormalTag.str	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.str(longsig, full) abort dict$/;"	f
NormalTag.strfmt	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.strfmt() abort dict$/;"	f
NotSupport	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:NotSupport()$/;"	f
not_thrown	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:not_thrown(lnum, expected_exception, result) abort$/;"	f
no_vim	build_all.sh	/^function no_vim()$/;"	f
nr2byte	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:nr2byte(nr)$/;"	f
nr2byte	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2byte	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2enc_char	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:nr2enc_char(charcode)$/;"	f
nr2enc_char	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2enc_char	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2hex	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:nr2hex(nr)$/;"	f
nr2hex	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nr2hex	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nsplit	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:nsplit(expr, n, ...)$/;"	f
nsplit	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
nsplit	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
oBookmark.AddBookmark	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.AddBookmark(name, path) dict$/;"	f
oBookmark.BookmarkExistsFor	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.BookmarkExistsFor(name) dict$/;"	f
oBookmark.BookmarkFor	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.BookmarkFor(name) dict$/;"	f
oBookmark.BookmarkNames	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.BookmarkNames() dict$/;"	f
oBookmark.Bookmarks	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.Bookmarks() dict$/;"	f
oBookmark.CacheBookmarks	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.CacheBookmarks(silent) dict$/;"	f
oBookmark.ClearAll	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.ClearAll() dict$/;"	f
oBookmark.CompareTo	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.CompareTo(otherbookmark) dict$/;"	f
oBookmark.Delete	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.Delete() dict$/;"	f
oBookmark.GetNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.GetNode(searchFromAbsoluteRoot) dict$/;"	f
oBookmark.GetNodeForName	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.GetNodeForName(name, searchFromAbsoluteRoot) dict$/;"	f
oBookmark.InvalidBookmarks	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.InvalidBookmarks() dict$/;"	f
oBookmark.MustExist	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.MustExist() dict$/;"	f
oBookmark.New	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.New(name, path) dict$/;"	f
oBookmark.SetPath	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.SetPath(path) dict$/;"	f
oBookmark.Sort	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.Sort() dict$/;"	f
oBookmark.Str	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.Str() dict$/;"	f
oBookmark.Write	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oBookmark.Write() dict$/;"	f
omit	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^function! s:omit(dict, keys) abort$/;"	f
omni#common#debug#End	plugin/script/bundle/omnicppcomplete/autoload/omni/common/debug.vim	/^function! omni#common#debug#End()$/;"	f
omni#common#debug#Start	plugin/script/bundle/omnicppcomplete/autoload/omni/common/debug.vim	/^function! omni#common#debug#Start()$/;"	f
omni#common#debug#Trace	plugin/script/bundle/omnicppcomplete/autoload/omni/common/debug.vim	/^function! omni#common#debug#Trace(szFuncName, ...)$/;"	f
omni#common#utils#CompareNumber	plugin/script/bundle/omnicppcomplete/autoload/omni/common/utils.vim	/^function! omni#common#utils#CompareNumber(i1, i2)$/;"	f
omni#common#utils#GetWordUnderCursor	plugin/script/bundle/omnicppcomplete/autoload/omni/common/utils.vim	/^function! omni#common#utils#GetWordUnderCursor()$/;"	f
omni#common#utils#TagList	plugin/script/bundle/omnicppcomplete/autoload/omni/common/utils.vim	/^function! omni#common#utils#TagList(szTagQuery)$/;"	f
omni#common#utils#TagListNoThrow	plugin/script/bundle/omnicppcomplete/autoload/omni/common/utils.vim	/^function! omni#common#utils#TagListNoThrow(szTagQuery)$/;"	f
omni#cpp#complete#Init	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Init()$/;"	f
omni#cpp#complete#Main	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Main(findstart, base)$/;"	f
omni#cpp#includes#Display	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#Display()$/;"	f
omni#cpp#includes#GetList	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#GetList(...)$/;"	f
omni#cpp#items#Get	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! omni#cpp#items#Get(tokens, ...)$/;"	f
omni#cpp#items#ResolveItemsTypeInfo	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! omni#cpp#items#ResolveItemsTypeInfo(contextStack, items)$/;"	f
omni#cpp#maycomplete#Arrow	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Arrow()$/;"	f
omni#cpp#maycomplete#Complete	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Complete()$/;"	f
omni#cpp#maycomplete#Dot	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Dot()$/;"	f
omni#cpp#maycomplete#Scope	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Scope()$/;"	f
omni#cpp#namespaces#GetContexts	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetContexts()$/;"	f
omni#cpp#namespaces#GetListFromCurrentBuffer	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetListFromCurrentBuffer(...)$/;"	f
omni#cpp#namespaces#GetMapFromBuffer	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromBuffer(szFilePath, ...)$/;"	f
omni#cpp#namespaces#GetMapFromCurrentBuffer	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromCurrentBuffer()$/;"	f
omni#cpp#namespaces#GetUsingNamespaces	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetUsingNamespaces()$/;"	f
omni#cpp#namespaces#ResolveAlias	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAlias(mapNamespaceAlias, szNamespace)$/;"	f
omni#cpp#namespaces#ResolveAll	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAll(namespacesUsed)$/;"	f
omni#cpp#settings#Init	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/settings.vim	/^function! omni#cpp#settings#Init()$/;"	f
omni#cpp#tokenizer#Tokenize	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^function! omni#cpp#tokenizer#Tokenize(szCode)$/;"	f
omni#cpp#utils#BuildParenthesisGroups	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#BuildParenthesisGroups(tokens)$/;"	f
omni#cpp#utils#CreateTypeInfo	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#CreateTypeInfo(param)$/;"	f
omni#cpp#utils#expIgnoreComments	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#expIgnoreComments = 'getline(".") =~ g:omni#cpp#utils#reIgnoreComment'$/;"	v
omni#cpp#utils#ExtractCmdFromTagItem	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractCmdFromTagItem(tagItem)$/;"	f
omni#cpp#utils#ExtractScope	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractScope(tagItem)$/;"	f
omni#cpp#utils#ExtractTypeInfoFromTag	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTag(tagItem)$/;"	f
omni#cpp#utils#ExtractTypeInfoFromTokens	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTokens(tokens)$/;"	f
omni#cpp#utils#GetCastType	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCastType(tokens)$/;"	f
omni#cpp#utils#GetClassInheritanceList	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetClassInheritanceList(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetCode	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCode(posStart, posEnd)$/;"	f
omni#cpp#utils#GetCodeFromLine	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCodeFromLine(szSingleLine)$/;"	f
omni#cpp#utils#GetPreviewWindowStringFromTagItem	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetPreviewWindowStringFromTagItem(tagItem)$/;"	f
omni#cpp#utils#GetResolvedTagItem	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTagItem(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetResolvedTags	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTags(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetTypeInfoString	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetTypeInfoString(typeInfo)$/;"	f
omni#cpp#utils#IsCursorInCommentOrString	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsCursorInCommentOrString()$/;"	f
omni#cpp#utils#IsTypeInfoValid	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsTypeInfoValid(typeInfo)$/;"	f
omni#cpp#utils#reIgnoreComment	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#reIgnoreComment = escape('\\\/\\\/\\|\\\/\\*\\|\\*\\\/', '*\/\\')$/;"	v
omni#cpp#utils#ResolveFilePath	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ResolveFilePath(szFile)$/;"	f
omni#cpp#utils#SimplifyParenthesis	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyParenthesis(tokens)$/;"	f
omni#cpp#utils#SimplifyScope	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyScope(szScope)$/;"	f
omni#cpp#utils#szEscapedCharacters	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#szEscapedCharacters = ' %#'$/;"	v
omni#cpp#utils#TokenizeCurrentInstruction	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstruction(...)$/;"	f
omni#cpp#utils#TokenizeCurrentInstructionUntilWord	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstructionUntilWord()$/;"	f
only_vim	build_all.sh	/^function only_vim()$/;"	f
on_event	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:on_event(event) abort$/;"	f
on_event	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def on_event(self, context):$/;"	m	class:Deoplete
on_event	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def on_event(self, context):$/;"	m	class:Base
on_event	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def on_event(self, context):$/;"	m	class:DeopleteHandlers
on_execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/bg.vim	/^function! s:on_execute() abort "{{{$/;"	f
on_exit	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/bg.vim	/^function! s:on_exit() abort "{{{$/;"	f
on_init	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def on_init(self, context):$/;"	m	class:Source
on_init	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def on_init(self, context):$/;"	m	class:Source
on_insert_char_pre	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:on_insert_char_pre() abort$/;"	f
on_insert_leave	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:on_insert_leave() abort$/;"	f
oPath.BookmarkNames	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.BookmarkNames() dict$/;"	f
oPath.CacheDisplayString	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.CacheDisplayString() dict$/;"	f
oPath.ChangeToDir	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.ChangeToDir() dict$/;"	f
oPath.ChopTrailingSlash	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.ChopTrailingSlash(str) dict$/;"	f
oPath.CompareTo	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.CompareTo(path) dict$/;"	f
oPath.Copy	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.Copy(dest) dict$/;"	f
oPath.CopyingSupported	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.CopyingSupported() dict$/;"	f
oPath.CopyingWillOverwrite	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.CopyingWillOverwrite(dest) dict$/;"	f
oPath.Create	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.Create(fullpath) dict$/;"	f
oPath.Delete	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.Delete() dict$/;"	f
oPath.Equals	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.Equals(path) dict$/;"	f
oPath.Exists	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.Exists() dict$/;"	f
oPath.ExtractDriveLetter	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.ExtractDriveLetter(fullpath) dict$/;"	f
oPath.GetDir	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.GetDir() dict$/;"	f
oPath.GetLastPathComponent	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.GetLastPathComponent(dirSlash) dict$/;"	f
oPath.GetParent	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.GetParent() dict$/;"	f
oPath.GetPathTrunk	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.GetPathTrunk() dict$/;"	f
oPath.GetSortOrderIndex	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.GetSortOrderIndex() dict$/;"	f
oPath.Ignore	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.Ignore() dict$/;"	f
oPath.JoinPathStrings	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.JoinPathStrings(...) dict$/;"	f
oPath.New	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.New(fullpath) dict$/;"	f
oPath.ReadInfoFromDisk	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.ReadInfoFromDisk(fullpath) dict$/;"	f
oPath.Refresh	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.Refresh() dict$/;"	f
oPath.Rename	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.Rename(newPath) dict$/;"	f
oPath.Str	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.Str(esc) dict$/;"	f
oPath.StrAbs	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.StrAbs() dict$/;"	f
oPath.StrDisplay	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.StrDisplay() dict$/;"	f
oPath.StrForCd	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.StrForCd() dict$/;"	f
oPath.StrForEditCmd	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.StrForEditCmd() dict$/;"	f
oPath.StrForGlob	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.StrForGlob() dict$/;"	f
oPath.StrForOS	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.StrForOS(esc) dict$/;"	f
oPath.StrTrunk	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.StrTrunk() dict$/;"	f
oPath.WinToUnixPath	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oPath.WinToUnixPath(pathstr) dict$/;"	f
open	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Buffer.vim	/^function! s:open(buffer, opener) abort$/;"	f
OpenBookmark	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:OpenBookmark(name)$/;"	f
OpenCurFile	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:OpenCurFile(splitWin)$/;"	f
OpenDirNodeSplit	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:OpenDirNodeSplit(treenode)$/;"	f
OpenEntrySplit	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:OpenEntrySplit(forceKeepWindowOpen)$/;"	f
OpenExplorer	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:OpenExplorer()$/;"	f
OpenExplorerFor	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:OpenExplorerFor(treenode)$/;"	f
OpenFileNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:OpenFileNode(treenode)$/;"	f
OpenFileNodeSplit	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:OpenFileNodeSplit(treenode)$/;"	f
OpenFold	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
OpenInNewTab	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:OpenInNewTab(stayCurrentTab)$/;"	f
OpenNodeRecursively	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:OpenNodeRecursively()$/;"	f
OpenNodeSplit	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:OpenNodeSplit(treenode)$/;"	f
OpenParents	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
OpenWindow	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
optimized_print	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:optimized_print(string, is_error) abort "{{{$/;"	f
option.restore	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:option.restore() abort$/;"	f
options.debug	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^function! s:options.debug(args, options) abort$/;"	f
options.exclude	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^function! s:options.exclude(args, options) abort$/;"	f
options.help	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^function! s:options.help(args, options) abort$/;"	f
options.recursive	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^function! s:options.recursive(args, options) abort$/;"	f
options.reporter	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^function! s:options.reporter(args, options) abort$/;"	f
options.reporter_list	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^function! s:options.reporter_list(args, options) abort$/;"	f
options.runtimepath	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^function! s:options.runtimepath(args, options) abort$/;"	f
options.target	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^function! s:options.target(args, options) abort$/;"	f
options.version	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^function! s:options.version(args, options) abort$/;"	f
or	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:or(xs)$/;"	f
or	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:or(xs) abort$/;"	f
or	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:or(xs) abort$/;"	f
order.__nested_bundle__	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^function! s:order.__nested_bundle__() abort$/;"	f
order.__test__	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^function! s:order.__test__() abort$/;"	f
oTreeDirNode.AddChild	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.AddChild(treenode, inOrder) dict$/;"	f
oTreeDirNode.Close	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.Close() dict$/;"	f
oTreeDirNode.CloseChildren	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.CloseChildren() dict$/;"	f
oTreeDirNode.CreateChild	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.CreateChild(path, inOrder) dict$/;"	f
oTreeDirNode.FindNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.FindNode(path) dict$/;"	f
oTreeDirNode.GetChild	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.GetChild(path) dict$/;"	f
oTreeDirNode.GetChildByIndex	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.GetChildByIndex(indx, visible) dict$/;"	f
oTreeDirNode.GetChildCount	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.GetChildCount() dict$/;"	f
oTreeDirNode.GetChildDirs	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.GetChildDirs() dict$/;"	f
oTreeDirNode.GetChildFiles	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.GetChildFiles() dict$/;"	f
oTreeDirNode.GetChildIndex	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.GetChildIndex(path) dict$/;"	f
oTreeDirNode.GetVisibleChildCount	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.GetVisibleChildCount() dict$/;"	f
oTreeDirNode.GetVisibleChildren	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.GetVisibleChildren() dict$/;"	f
oTreeDirNode.HasVisibleChildren	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.HasVisibleChildren()$/;"	f
oTreeDirNode.InitChildren	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.InitChildren(silent) dict$/;"	f
oTreeDirNode.New	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.New(path) dict$/;"	f
oTreeDirNode.Open	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.Open() dict$/;"	f
oTreeDirNode.OpenRecursively	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.OpenRecursively() dict$/;"	f
oTreeDirNode.OpenRecursively2	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.OpenRecursively2(forceOpen) dict$/;"	f
oTreeDirNode.Refresh	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.Refresh() dict$/;"	f
oTreeDirNode.RemoveChild	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.RemoveChild(treenode) dict$/;"	f
oTreeDirNode.SortChildren	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.SortChildren() dict$/;"	f
oTreeDirNode.ToggleOpen	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.ToggleOpen() dict$/;"	f
oTreeDirNode.TransplantChild	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeDirNode.TransplantChild(newNode) dict$/;"	f
oTreeFileNode.Bookmark	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.Bookmark(name) dict$/;"	f
oTreeFileNode.CacheParent	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.CacheParent() dict$/;"	f
oTreeFileNode.ClearBookmarks	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.ClearBookmarks() dict$/;"	f
oTreeFileNode.Copy	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.Copy(dest) dict$/;"	f
oTreeFileNode.Delete	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.Delete() dict$/;"	f
oTreeFileNode.Equals	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.Equals(treenode) dict$/;"	f
oTreeFileNode.FindNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.FindNode(path) dict$/;"	f
oTreeFileNode.FindOpenDirSiblingWithChildren	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.FindOpenDirSiblingWithChildren(direction) dict$/;"	f
oTreeFileNode.FindSibling	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.FindSibling(direction) dict$/;"	f
oTreeFileNode.IsRoot	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.IsRoot() dict$/;"	f
oTreeFileNode.IsVisible	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.IsVisible() dict$/;"	f
oTreeFileNode.MakeRoot	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.MakeRoot() dict$/;"	f
oTreeFileNode.New	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.New(path) dict$/;"	f
oTreeFileNode.Refresh	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.Refresh() dict$/;"	f
oTreeFileNode.Rename	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.Rename(newName) dict$/;"	f
oTreeFileNode.StrDisplay	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:oTreeFileNode.StrDisplay() dict$/;"	f
output_string	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:output_string(string) abort "{{{$/;"	f
overlap_length	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^def overlap_length(left, right):$/;"	f
padding_by_displaywidth	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
padding_by_displaywidth	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
pad_between_letters	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_between_letters	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_both_sides	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_both_sides	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_left	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_left	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_right	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
pad_right	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
ParseTagline	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
parse_args	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^function! s:parse_args(args) abort$/;"	f
parse_buffer_pattern	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def parse_buffer_pattern(b, pattern, complete_str):$/;"	f
parse_cmdarg	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Buffer.vim	/^function! s:parse_cmdarg(...) abort$/;"	f
parse_describe	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:parse_describe(tokens, lnum, context_stack, scope_id) abort$/;"	f
parse_end	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:parse_end(tokens, lnum, context_stack) abort$/;"	f
parse_error	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/builtin_assert.vim	/^function! s:parse_error(error) abort$/;"	f
parse_example	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:parse_example(tokens, lnum, context_stack, func_id) abort$/;"	f
parse_file_pattern	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def parse_file_pattern(f, pattern):$/;"	f
parse_galias	plugin/script/bundle/vimshell.vim/autoload/vimshell/parser.vim	/^function! s:parse_galias(script) abort "{{{$/;"	f
parse_hook	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:parse_hook(tokens, lnum, context_stack) abort$/;"	f
parse_name	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:parse_name(arg)$/;"	f
parse_options	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:parse_options(opts)$/;"	f
partition	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:partition(f, xs)$/;"	f
partition	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
partition	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
PATH	plugin/script/bundle/deoplete.nvim/Makefile	/^PATH := .\/vim-themis\/bin:$(PATH)$/;"	m
path2directory	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:path2directory(path)$/;"	f
path2directory	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2directory	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2project_directory	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:path2project_directory(path, ...)$/;"	f
path2project_directory	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
path2project_directory	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
pathogen#cycle_filetype	plugin/script/autoload/pathogen.vim	/^function! pathogen#cycle_filetype() abort$/;"	f
pathogen#execute	plugin/script/autoload/pathogen.vim	/^function! pathogen#execute(...) abort$/;"	f
pathogen#expand	plugin/script/autoload/pathogen.vim	/^function! pathogen#expand(pattern, ...) abort$/;"	f
pathogen#fnameescape	plugin/script/autoload/pathogen.vim	/^function! pathogen#fnameescape(string) abort$/;"	f
pathogen#glob	plugin/script/autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort$/;"	f
pathogen#glob_directories	plugin/script/autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort$/;"	f
pathogen#helptags	plugin/script/autoload/pathogen.vim	/^function! pathogen#helptags() abort$/;"	f
pathogen#incubate	plugin/script/autoload/pathogen.vim	/^function! pathogen#incubate(...) abort$/;"	f
pathogen#infect	plugin/script/autoload/pathogen.vim	/^function! pathogen#infect(...) abort$/;"	f
pathogen#interpose	plugin/script/autoload/pathogen.vim	/^function! pathogen#interpose(name) abort$/;"	f
pathogen#is_absolute	plugin/script/autoload/pathogen.vim	/^function! pathogen#is_absolute(path) abort$/;"	f
pathogen#is_disabled	plugin/script/autoload/pathogen.vim	/^function! pathogen#is_disabled(path) abort$/;"	f
pathogen#join	plugin/script/autoload/pathogen.vim	/^function! pathogen#join(...) abort$/;"	f
pathogen#legacyjoin	plugin/script/autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort$/;"	f
pathogen#runtime_append_all_bundles	plugin/script/autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) abort$/;"	f
pathogen#runtime_findfile	plugin/script/autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) abort$/;"	f
pathogen#runtime_prepend_subdirectories	plugin/script/autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) abort$/;"	f
pathogen#separator	plugin/script/autoload/pathogen.vim	/^function! pathogen#separator() abort$/;"	f
pathogen#slash	plugin/script/autoload/pathogen.vim	/^function! pathogen#slash() abort$/;"	f
pathogen#split	plugin/script/autoload/pathogen.vim	/^function! pathogen#split(path) abort$/;"	f
pathogen#surround	plugin/script/autoload/pathogen.vim	/^function! pathogen#surround(path) abort$/;"	f
pathogen#uniq	plugin/script/autoload/pathogen.vim	/^function! pathogen#uniq(list) abort$/;"	f
paths2files	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:paths2files(paths, recursive) abort$/;"	f
permutations	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
permutations	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
PersistentVarName	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:PersistentVarName(pluginName, persistentVar)$/;"	f
pick	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^function! s:pick(dict, keys) abort$/;"	f
plugin	plugin/script/bundle/deoplete.nvim/vim-themis/macros/themis_startup.vim	/^augroup plugin-themis-startup$/;"	a
Plugin	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=+  -bar   Plugin$/;"	c
PluginClean	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang   PluginClean$/;"	c
PluginDocs	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0         PluginDocs$/;"	c
PluginInstall	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=* -bang -complete=custom,vundle#scripts#complete PluginInstall$/;"	c
PluginList	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0 -bang PluginList$/;"	c
PluginSearch	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete PluginSearch$/;"	c
PluginUpdate	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=* -complete=custom,vundle#scripts#complete PluginUpdate PluginInstall! <args>$/;"	c
plugin_name	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:plugin_name() abort$/;"	f
plugin_name	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:plugin_name() abort dict$/;"	f
plugin_name	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:plugin_name() abort dict$/;"	f
pop	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:pop(list)$/;"	f
pop	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:pop(list) abort$/;"	f
pop	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:pop(list) abort$/;"	f
position_has_changed	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def position_has_changed(self, tick):$/;"	m	class:Deoplete
PreviewNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:PreviewNode(openNewWin)$/;"	f
previous_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! s:previous_prompt() abort "{{{$/;"	f
previous_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:previous_prompt() abort "{{{$/;"	f
PrevWord	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:PrevWord()$/;"	f
print	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def print(self, expr):$/;"	m	class:Base
PrintHelp	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
PrintKinds	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
PrintTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, output, fileinfo, typeinfo) abort$/;"	f
print_error	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:print_error(message)$/;"	f
print_message	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/tap.vim	/^function! s:print_message(message) abort$/;"	f
print_output	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/less.vim	/^function! s:print_output(line_num) abort "{{{$/;"	f
print_report	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/dot.vim	/^function! s:print_report(n, report) abort$/;"	f
print_reports	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/dot.vim	/^function! s:print_reports(title, reports) abort$/;"	f
print_simple	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:print_simple(is_error, lines) abort "{{{$/;"	f
print_snippets_complete_error	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^function! s:print_snippets_complete_error()$/;"	f
print_with_redraw	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:print_with_redraw(is_error, lines) abort "{{{$/;"	f
Process	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/process.py	/^class Process(object):$/;"	c
process	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:process(bang, cmd)$/;"	f
ProcessFile	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
process_delimiter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_delimiter.vim	/^function! s:process_delimiter(context, candidate, delimiter, delim_cnt) abort$/;"	f
process_option	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^function! s:process_option(name, args, options) abort$/;"	f
product	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:product(lists) abort$/;"	f
product	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:product(lists) abort$/;"	f
profile_end	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def profile_end(self, name):$/;"	m	class:Deoplete
profile_start	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def profile_start(self, context, name):$/;"	m	class:Deoplete
PromptToDelBuffer	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:PromptToDelBuffer(bufnum, msg)$/;"	f
PseudoTag.isPseudoTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.isPseudoTag() abort dict$/;"	f
PseudoTag.strfmt	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.strfmt() abort dict$/;"	f
push	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:push(list, val)$/;"	f
push	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
push	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
push_and_execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:push_and_execute(command) abort "{{{$/;"	f
push_current_line	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:push_current_line() abort "{{{$/;"	f
PutCursorInTreeWin	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:PutCursorInTreeWin()$/;"	f
PutCursorOnBookmarkTable	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:PutCursorOnBookmarkTable()$/;"	f
PutCursorOnNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:PutCursorOnNode(treenode, isJump, recurseUpward)$/;"	f
QSortR	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:QSortR(start, end, cmp, direction, accessor, swapper, context)$/;"	f
r	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_zsh_complete/complete.zsh	/^        r() {$/;"	f
rand	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! s:rand(max) "{{{$/;"	f
rand	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/commands.vim	/^function! s:rand(max) abort "{{{$/;"	f
RangeCommentLine	plugin/script/bundle/comments/plugin/comments.vim	/^function! RangeCommentLine()$/;"	f
RangeUnCommentLine	plugin/script/bundle/comments/plugin/comments.vim	/^function! RangeUnCommentLine()$/;"	f
readfile	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:readfile(cache_dir, filename)$/;"	f
readfile	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
read_content	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Buffer.vim	/^function! s:read_content(content, ...) abort$/;"	f
realpath	plugin/script/bundle/deoplete.nvim/vim-themis/bin/themis	/^	realpath() {$/;"	f
realpath	plugin/script/bundle/deoplete.nvim/vim-themis/bin/themis.bat	/^    if "%%1" == "SYMLINK" set realpath=%%~2\\..\\..$/;"	v
realpath	plugin/script/bundle/deoplete.nvim/vim-themis/bin/themis.bat	/^set realpath=..$/;"	v
receiver.end_test	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/builtin_assert.vim	/^function! s:receiver.end_test(report) abort$/;"	f
receiver.fail	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/stats.vim	/^function! s:receiver.fail(report) abort$/;"	f
receiver.pass	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/stats.vim	/^function! s:receiver.pass(report) abort$/;"	f
receiver.pending	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/stats.vim	/^function! s:receiver.pending(report) abort$/;"	f
receiver.start_test	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/builtin_assert.vim	/^function! s:receiver.start_test(bundle, entry) abort$/;"	f
receiver.start_test	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/stats.vim	/^function! s:receiver.start_test(bundle, title) abort$/;"	f
recursive_expand_alias	plugin/script/bundle/vimshell.vim/autoload/vimshell/parser.vim	/^function! s:recursive_expand_alias(alias_name, args) abort "{{{$/;"	f
recursive_expand_altercmd	plugin/script/bundle/vimshell.vim/autoload/vimshell/altercmd.vim	/^function! s:recursive_expand_altercmd(string) abort$/;"	f
redir	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:redir(cmd) abort$/;"	f
RefreshCurrent	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:RefreshCurrent()$/;"	f
RefreshRoot	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:RefreshRoot()$/;"	f
register.restore	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:register.restore() abort$/;"	f
RemapLookupFile	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:RemapLookupFile(cmd)$/;"	f
RemoveCComments	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/utils.vim	/^function! s:RemoveCComments(szLine)$/;"	f
remove_ansi_sequences	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:remove_ansi_sequences(text) abort$/;"	f
remove_ansi_sequences	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:remove_ansi_sequences(text) abort$/;"	f
RenameCurrent	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:RenameCurrent()$/;"	f
RenderBookmarks	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:RenderBookmarks()$/;"	f
RenderContent	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
RenderKeepView	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
RenderView	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:RenderView()$/;"	f
RenderViewSavingPosition	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:RenderViewSavingPosition()$/;"	f
ReopenWindow	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ReopenWindow(delbufname) abort$/;"	f
repair_posix_text	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:repair_posix_text(text, ...) abort$/;"	f
repair_posix_text	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:repair_posix_text(text, ...) abort$/;"	f
replace	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:replace(str, from, to)$/;"	f
replace	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace_first	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:replace_first(str, from, to)$/;"	f
replace_first	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
replace_first	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
Report.add_exception	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/report.vim	/^function! s:Report.add_exception(exception, throwpoint) abort$/;"	f
Report.get_full_title	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/report.vim	/^function! s:Report.get_full_title() abort$/;"	f
Report.get_message	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/report.vim	/^function! s:Report.get_message() abort$/;"	f
Report.get_title	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/report.vim	/^function! s:Report.get_title() abort$/;"	f
Report.is_success	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/report.vim	/^function! s:Report.is_success() abort$/;"	f
reporter.after_suite	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^function! s:reporter.after_suite(bundle) abort$/;"	f
reporter.before_suite	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^function! s:reporter.before_suite(bundle) abort$/;"	f
reporter.end	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/dot.vim	/^function! s:reporter.end(runner) abort$/;"	f
reporter.end	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^function! s:reporter.end(runner) abort$/;"	f
reporter.end	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/tap.vim	/^function! s:reporter.end(runner) abort$/;"	f
reporter.error	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/dot.vim	/^function! s:reporter.error(phase, info) abort$/;"	f
reporter.error	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^function! s:reporter.error(phase, info) abort$/;"	f
reporter.error	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/tap.vim	/^function! s:reporter.error(phase, info) abort$/;"	f
reporter.fail	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/dot.vim	/^function! s:reporter.fail(report) abort$/;"	f
reporter.fail	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^function! s:reporter.fail(report) abort$/;"	f
reporter.fail	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/tap.vim	/^function! s:reporter.fail(report) abort$/;"	f
reporter.init	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/dot.vim	/^function! s:reporter.init(runner, root_bundle) abort$/;"	f
reporter.init	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^function! s:reporter.init(runner, root_bundle) abort$/;"	f
reporter.init	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/tap.vim	/^function! s:reporter.init(runner, root_bundle) abort$/;"	f
reporter.pass	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/dot.vim	/^function! s:reporter.pass(report) abort$/;"	f
reporter.pass	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^function! s:reporter.pass(report) abort$/;"	f
reporter.pass	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/tap.vim	/^function! s:reporter.pass(report) abort$/;"	f
reporter.pending	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/dot.vim	/^function! s:reporter.pending(report) abort$/;"	f
reporter.pending	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^function! s:reporter.pending(report) abort$/;"	f
reporter.pending	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/tap.vim	/^function! s:reporter.pending(report) abort$/;"	f
reporter.print	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^function! s:reporter.print(message, ...) abort$/;"	f
reporter.start	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^function! s:reporter.start(runner) abort$/;"	f
reporter.start	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/tap.vim	/^function! s:reporter.start(runner) abort$/;"	f
ResetWidth	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:ResetWidth(...)$/;"	f
resize	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:resize() abort "{{{$/;"	f
ResolveAliasInNamespaceList	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasInNamespaceList(mapNamespaceAlias, listNamespaces)$/;"	f
ResolveAliasKey	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKey(mapNamespaceAlias, szAlias)$/;"	f
ResolveAliasKeys	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKeys(mapNamespaceAlias)$/;"	f
ResolveCast	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:ResolveCast(tokens, startChar, endChar)$/;"	f
ResolveCCast	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:ResolveCCast(tokens)$/;"	f
ResolveCppCast	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:ResolveCppCast(tokens)$/;"	f
ResolveNamespace	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveNamespace(namespace, mapCurrentContexts)$/;"	f
ResolveSymbol	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:ResolveSymbol(contextStack, szSymbol, szTagFilter)$/;"	f
restart_command	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! s:restart_command() abort "{{{$/;"	f
RestoreScreenState	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:RestoreScreenState()$/;"	f
RestoreSession	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
RestoreWindowSettings2	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:RestoreWindowSettings2(id)$/;"	f
RevealBookmark	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:RevealBookmark(name)$/;"	f
reverse	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:reverse(str)$/;"	f
reverse	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
reverse	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
root	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^root = logging.getLogger('deoplete')$/;"	v
rtpath	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtpath(opts)$/;"	f
rtp_add	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_add(dir) abort$/;"	f
rtp_add_a	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_add_a()$/;"	f
rtp_add_defaults	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_add_defaults()$/;"	f
rtp_rm	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_rm(dir) abort$/;"	f
rtp_rm_a	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_rm_a()$/;"	f
runner	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! s:runner() abort$/;"	f
Runner.add_event	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.add_event(listener) abort$/;"	f
Runner.emit	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.emit(name, ...) abort$/;"	f
Runner.emit_after_test	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.emit_after_test(bundle, test_entry, report) abort$/;"	f
Runner.emit_before_test	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.emit_before_test(bundle, test_entry) abort$/;"	f
Runner.get_target_files	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.get_target_files(paths, options) abort$/;"	f
Runner.init	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.init() abort$/;"	f
Runner.load_bundle_from_files	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.load_bundle_from_files(files) abort$/;"	f
Runner.load_scripts	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.load_scripts(files_with_styles, target_bundle) abort$/;"	f
Runner.on_error	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.on_error(phase, exception, throwpoint) abort$/;"	f
Runner.run	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.run(bundle) abort$/;"	f
Runner.run_all	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.run_all(bundle) abort$/;"	f
Runner.run_bundle	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.run_bundle(bundle) abort$/;"	f
Runner.run_suite	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.run_suite(bundle, test_entries) abort$/;"	f
Runner.run_test	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.run_test(bundle, test_entry) abort$/;"	f
Runner.start	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.start(paths, options) abort$/;"	f
Runner.supporter	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:Runner.supporter(name) abort$/;"	f
s:aliases	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^let s:aliases = {$/;"	v
s:assert	plugin/script/bundle/deoplete.nvim/test/autoload/deoplete/util.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugin/script/bundle/neocomplete.vim/test/neocomplete.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugin/script/bundle/vimshell.vim/test/commands.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugin/script/bundle/vimshell.vim/test/config.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugin/script/bundle/vimshell.vim/test/parser.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:asyncrun_support	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^		let s:asyncrun_support = 1$/;"	v
s:asyncrun_support	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:asyncrun_support = 1$/;"	v
s:asyncrun_support	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:asyncrun_support = 0$/;"	v
s:asyncrun_windows	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:asyncrun_windows = 1$/;"	v
s:asyncrun_windows	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:asyncrun_windows = 0$/;"	v
s:async_code	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_code = 0$/;"	v
s:async_congest	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_congest = 0$/;"	v
s:async_congest	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_congest = has('patch-8.0.100')? 1 : 0$/;"	v
s:async_congest	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_congest = 0$/;"	v
s:async_debug	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_debug = 0$/;"	v
s:async_dictionary_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_dictionary_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_dictionary_list	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_dictionary_list	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/dictionary.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_efm	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_efm = &errorformat$/;"	v
s:async_head	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_head = 0$/;"	v
s:async_hold	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_hold = (v:version >= 800 || has('patch-7.4.2100'))? 0 : 1$/;"	v
s:async_hold	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_hold = 1$/;"	v
s:async_hold	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_hold = 0$/;"	v
s:async_info	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_info = { 'text':"", 'post':'', 'postsave':'' }$/;"	v
s:async_nvim	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_nvim = has('nvim')? 1 : 0$/;"	v
s:async_output	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_output = {}$/;"	v
s:async_quick	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_quick = (v:version >= 800 || has('patch-7.4.1997'))? 1 : 0$/;"	v
s:async_quick	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_quick = 0$/;"	v
s:async_quick	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_quick = 0$/;"	v
s:async_scroll	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_scroll = 0$/;"	v
s:async_start	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_start = 0.0$/;"	v
s:async_state	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_state = 0$/;"	v
s:async_tags_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^  let s:async_tags_list = {}$/;"	v
s:async_tags_list	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/tag.vim	/^  let s:async_tags_list = {}$/;"	v
s:async_tail	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_tail = 0$/;"	v
s:autocommands_done	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:baseBufNr	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^let s:baseBufNr = 0$/;"	v
s:BaseTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:BaseTag = {}$/;"	v
s:base_dir	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^let s:base_dir = expand('<sfile>:h')$/;"	v
s:bMayComplete	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:bMayComplete = 0$/;"	v
s:buffer_seqno	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:buffer_seqno = 0$/;"	v
s:buffer_sources	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^  let s:buffer_sources = {}$/;"	v
s:buffer_sources	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^  let s:buffer_sources = {}$/;"	v
s:bufList	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^let s:bufList = [1]$/;"	v
s:Bundle	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^let s:Bundle = {$/;"	v
s:bundle	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^let s:bundle = {}$/;"	v
s:c	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^let s:c = {}  " This is used in commands.$/;"	v
s:C	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:C = 100$/;"	v
s:cache	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^let s:cache = {$/;"	v
s:Cache	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^let s:Cache = vital#of('neocomplcache').import('System.Cache')$/;"	v
s:Cache	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^let s:Cache = neocomplete#util#get_vital().import('System.Cache.Deprecated')$/;"	v
s:cached_files	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^let s:cached_files = {}$/;"	v
s:cached_files	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/file.vim	/^let s:cached_files = {}$/;"	v
s:CACHE_DEBUG_TRACE	plugin/script/bundle/omnicppcomplete/autoload/omni/common/debug.vim	/^let s:CACHE_DEBUG_TRACE = []$/;"	v
s:cache_module_path	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^let s:cache_module_path = {}$/;"	v
s:CACHE_OVERLOADED_FUNCTIONS	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:CACHE_OVERLOADED_FUNCTIONS = {}$/;"	v
s:cache_sid	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:cache_sid = {}$/;"	v
s:CACHE_TAG_ENV	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_ENV = ''$/;"	v
s:CACHE_TAG_FILES	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_FILES = {}$/;"	v
s:CACHE_TAG_POPUP_ITEMS	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_POPUP_ITEMS = {}$/;"	v
s:character_regex	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^let s:character_regex = ''$/;"	v
s:checked_ctags	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:color_table	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^let s:color_table = [ 0x00, 0x5F, 0x87, 0xAF, 0xD7, 0xFF ]$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/alias.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/bg.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/build.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/cd.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/cdup.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/clear.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/dirs.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/echo.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/eval.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/exe.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/exit.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/export.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/galias.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/gcd.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/gendoc.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/gexe.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/h.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/histdel.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/history.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/iexe.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/less.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/let.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/ls.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/mkcd.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/nop.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/open.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/popd.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/pwd.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/repeat.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/scp.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/sexe.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/shell.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/source.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/source_shellcmd.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/ssh.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/sudo.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/time.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/vexe.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/view.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/vimdiff.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/vimsh.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/whereis.vim	/^let s:command = {$/;"	v
s:command	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/which.vim	/^let s:command = {$/;"	v
s:command_vim	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/vim.vim	/^let s:command_vim = {$/;"	v
s:compare_typeinfo	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:compare_typeinfo = {}$/;"	v
s:control	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^let s:control = {}$/;"	v
s:control_sequence	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^let s:control_sequence = {$/;"	v
s:converter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_abbr.vim	/^let s:converter = {$/;"	v
s:converter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_case.vim	/^let s:converter = {$/;"	v
s:converter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_delimiter.vim	/^let s:converter = {$/;"	v
s:converter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_nothing.vim	/^let s:converter = {$/;"	v
s:converter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^let s:converter = {$/;"	v
s:converter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_abbr.vim	/^let s:converter = {$/;"	v
s:converter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_add_paren.vim	/^let s:converter = {$/;"	v
s:converter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_case.vim	/^let s:converter = {$/;"	v
s:converter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_delimiter.vim	/^let s:converter = {$/;"	v
s:converter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_disable_abbr.vim	/^let s:converter = {$/;"	v
s:converter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^let s:converter = {$/;"	v
s:converter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_remove_overlap.vim	/^let s:converter = {$/;"	v
s:cpo_save	plugin/script/bundle/deoplete.nvim/vim-themis/syntax/vimspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugin/script/bundle/taglist/plugin/taglist.vim	/^    let s:cpo_save = &cpo$/;"	v
s:cppKeyword	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:cppKeyword = ['asm', 'auto', 'bool', 'break', 'case', 'catch', 'char', 'class', 'const', 'const_cast', 'continue', 'default', 'delete', 'do', 'double', 'dynamic_cast', 'else', 'enum', 'explicit', 'export', 'extern', 'false', 'float', 'for', 'friend', 'goto', 'if', 'inline', 'int', 'long', 'mutable', 'namespace', 'new', 'operator', 'private', 'protected', 'public', 'register', 'reinterpret_cast', 'return', 'short', 'signed', 'sizeof', 'static', 'static_cast', 'struct', 'switch', 'template', 'this', 'throw', 'true', 'try', 'typedef', 'typeid', 'typename', 'union', 'unsigned', 'using', 'virtual', 'void', 'volatile', 'wchar_t', 'while', 'and', 'and_eq', 'bitand', 'bitor', 'compl', 'not', 'not_eq', 'or', 'or_eq', 'xor', 'xor_eq']$/;"	v
s:cppOperatorPunctuator	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:cppOperatorPunctuator = ['->*', '->', '--', '-=', '-', '!=', '!', '##', '#', '%:%:', '%=', '%>', '%:', '%', '&&', '&=', '&', '(', ')', '*=', '*', ',', '...', '.*', '.', '\/=', '\/', '::', ':>', ':', ';', '?', '[', ']', '^=', '^', '{', '||', '|=', '|', '}', '~', '++', '+=', '+', '<<=', '<%', '<:', '<<', '<=', '<', '==', '=', '>>=', '>>', '>=', '>']$/;"	v
s:ctags_is_uctags	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:ctags_is_uctags     = 0$/;"	v
s:ctags_types	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:ctags_types         = {}$/;"	v
s:current_histories	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_history.vim	/^let s:current_histories = []$/;"	v
s:D	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:D = 500$/;"	v
s:debug	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:debug = 0$/;"	v
s:debug_file	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:debug_file = ''$/;"	v
s:default_options	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/option.vim	/^let s:default_options = {$/;"	v
s:defFCShellInstalled	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:defFCShellInstalled = 0$/;"	v
s:delayed_update_files	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:delayed_update_files = []$/;"	v
s:describe_pattern	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^let s:describe_pattern = '^__.\\+__$'$/;"	v
s:dictionary_cache	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/dictionary.vim	/^  let s:dictionary_cache = {}$/;"	v
s:dictionary_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^  let s:dictionary_list = {}$/;"	v
s:doc_dict	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^let s:doc_dict = {$/;"	v
s:doc_dict	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:doc_dict = {$/;"	v
s:doc_dict	plugin/script/bundle/vimshell.vim/autoload/vimshell/help.vim	/^let s:doc_dict = {$/;"	v
s:done_bundles	plugin/script/autoload/pathogen.vim	/^let s:done_bundles = {}$/;"	v
s:drawing_character_table	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^let s:drawing_character_table = {$/;"	v
s:Emitter	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/emitter.vim	/^let s:Emitter = {$/;"	v
s:environment	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^let s:environment = {}$/;"	v
s:escape	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^let s:escape = {}$/;"	v
s:escape_chars	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:escape_chars =  " \\\\`\\|\\"#%&,?()\\*^<>"$/;"	v
s:escape_sequence_csi	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^let s:escape_sequence_csi = {$/;"	v
s:escape_sequence_match	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^let s:escape_sequence_match = {$/;"	v
s:escape_sequence_simple_char1	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^let s:escape_sequence_simple_char1 = {$/;"	v
s:escape_sequence_simple_char2	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^let s:escape_sequence_simple_char2 = {$/;"	v
s:event	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^let s:event = {}$/;"	v
s:event	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^let s:event = {$/;"	v
s:events	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^let s:events = {'helper': s:helper, 'nest': 0, 'skip': 0}$/;"	v
s:exists_context_filetype	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/context_filetype.vim	/^  let s:exists_context_filetype = exists('*context_filetype#version')$/;"	v
s:exists_md5	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^  let s:exists_md5 = 0$/;"	v
s:exists_md5	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^  let s:exists_md5 = 1$/;"	v
s:expand_bufnr	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:expect	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/expect.vim	/^let s:expect = {$/;"	v
s:expect	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^let s:expect = themis#helper('expect')$/;"	v
s:failure_messages	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/expect.vim	/^let s:failure_messages = {}$/;"	v
s:fail_symbol	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^  let s:fail_symbol = 'x'$/;"	v
s:fail_symbol	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^  let s:fail_symbol = '✖'$/;"	v
s:fcShellPreFuncs	plugin/script/bundle/genutils/autoload/genutils.vim	/^  let s:fcShellPreFuncs = {}$/;"	v
s:FileInfo	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:FileInfo = {}$/;"	v
s:fileWild	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^let s:fileWild = {}$/;"	v
s:foo	plugin/script/bundle/deoplete.nvim/vim-themis/test/fixture/scope.vim	/^let s:foo = 'foo'$/;"	v
s:function_return_types	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:function_return_types = {}$/;"	v
s:func_aliases	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^let s:func_aliases = {}$/;"	v
s:func_t	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^let s:func_t = type(function('type'))$/;"	v
s:func_t	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^let s:func_t = type(function('type'))$/;"	v
s:f_type	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^let s:f_type = type(function('type'))$/;"	v
s:GETSVARSFUNCNAME	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^let s:GETSVARSFUNCNAME = '___VITAL_VIM_SCRIPTLOCAL_GET_SVARS___'$/;"	v
s:global_candidates_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:global_candidates_list = { 'dictionary_variables' : {} }$/;"	v
s:grey_table	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^let s:grey_table = [$/;"	v
s:guard	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^let s:guard = {}$/;"	v
s:hasPreviewWindow	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindow = match(&completeopt, 'preview')>=0$/;"	v
s:hasPreviewWindowOld	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindowOld = s:hasPreviewWindow$/;"	v
s:helper	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^let s:helper = s:make_helper()$/;"	v
s:helper	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^let s:helper = {$/;"	v
s:helper	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/scope.vim	/^let s:helper = {}$/;"	v
s:helper	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^let s:helper = themis#suite('helper')$/;"	v
s:helper	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^let s:helper = themis#suite('helper')$/;"	v
s:highlight_table	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^let s:highlight_table = {$/;"	v
s:hook	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^let s:hook = themis#suite('hook')$/;"	v
s:I	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:I = 1$/;"	v
s:icon_closed	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:icon_closed = g:tagbar_iconchars[0]$/;"	v
s:icon_open	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:icon_open   = g:tagbar_iconchars[1]$/;"	v
s:ics	plugin/script/bundle/tagbar/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:instance	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^let s:instance = {}$/;"	v
s:internal_candidates_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:internal_candidates_list = {}$/;"	v
s:is_cygwin	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_enabled	plugin/script/bundle/deoplete.nvim/autoload/deoplete/init.vim	/^  let s:is_enabled = 0$/;"	v
s:is_enabled	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^  let s:is_enabled = 0$/;"	v
s:is_enabled	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^  let s:is_enabled = 0$/;"	v
s:is_insert_char_pre	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^let s:is_insert_char_pre = v:version > 703$/;"	v
s:is_mac	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_maximized	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_unix	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_vital_vim	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_vital_vim	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_windows	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:kind	plugin/script/bundle/vimshell.vim/autoload/unite/kinds/vimshell_history.vim	/^let s:kind = {$/;"	v
s:kind	plugin/script/bundle/vimshell.vim/autoload/unite/kinds/vimshell_history.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	plugin/script/bundle/vimshell.vim/autoload/unite/kinds/vimshell_history.vim	/^let s:kind.action_table.edit = {$/;"	v
s:kind	plugin/script/bundle/vimshell.vim/autoload/unite/kinds/vimshell_history.vim	/^let s:kind.action_table.execute = {$/;"	v
s:kind	plugin/script/bundle/vimshell.vim/autoload/unite/kinds/vimshell_history.vim	/^let s:kind.action_table.insert = {$/;"	v
s:kind	plugin/script/bundle/vimshell.vim/autoload/unite/kinds/vimshell_history.vim	/^let s:kind.action_table.unite__new_candidate = {$/;"	v
s:KindheaderTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:KindheaderTag = copy(s:BaseTag)$/;"	v
s:known_files	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:L	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:L = 50$/;"	v
s:last_alt_bufnr	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:last_alt_bufnr = -1$/;"	v
s:last_highlight_tline	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:license_files_dir	plugin/script/bundle/vim-header/autoload/header.vim	/^let s:license_files_dir = expand('<sfile>:p:h:h').'\/licensefiles\/'$/;"	v
s:line_adjuster	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^let s:line_adjuster = {}$/;"	v
s:List	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^let s:List = vital#of('neocomplcache').import('Data.List')$/;"	v
s:List	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^let s:List = vital#of('neocomplcache').import('Data.List')$/;"	v
s:List	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^let s:List = neocomplete#util#get_vital().import('Data.List')$/;"	v
s:loaded	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^let s:loaded = {}$/;"	v
s:loaded	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^let s:loaded = {}$/;"	v
s:loaded	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:loaded = {}$/;"	v
s:loaded	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:loaded = {}$/;"	v
s:Local	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/scope.vim	/^let s:Local = g:themis#vital.import('Vim.ScriptLocal')$/;"	v
s:local_candidates_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:local_candidates_list = {}$/;"	v
s:M	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:M = 1000$/;"	v
s:makeArgumentList	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:makeArgumentList = ''$/;"	v
s:makeArgumentString	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:makeArgumentString = ''$/;"	v
s:manager	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/bg.vim	/^let s:manager = vimshell#util#get_vital().import('Vim.Buffer')$/;"	v
s:manager	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/iexe.vim	/^let s:manager = vimshell#util#get_vital().import('Vim.Buffer')$/;"	v
s:manager	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/less.vim	/^let s:manager = vimshell#util#get_vital().import('Vim.Buffer')$/;"	v
s:manager	plugin/script/bundle/vimshell.vim/autoload/vimshell/init.vim	/^let s:manager = vimshell#util#get_vital().import('Vim.Buffer')$/;"	v
s:matcher	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^let s:matcher = {$/;"	v
s:matcher	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_head.vim	/^let s:matcher = {$/;"	v
s:matcher	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_old.vim	/^let s:matcher = {$/;"	v
s:matcher	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_fuzzy.vim	/^let s:matcher = {$/;"	v
s:matcher	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_head.vim	/^let s:matcher = {$/;"	v
s:matcher	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_length.vim	/^let s:matcher = {$/;"	v
s:matcher	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_nothing.vim	/^let s:matcher = {$/;"	v
s:matchers	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/expect.vim	/^let s:matchers = {}$/;"	v
s:member_sources	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^  let s:member_sources = {}$/;"	v
s:member_sources	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^  let s:member_sources = {}$/;"	v
s:menu_char_prefix	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:myBufNum	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^  let s:myBufNum = -1$/;"	v
s:mySNR	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:mySNR = ''$/;"	v
s:mySNR	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^let s:mySNR = ''$/;"	v
s:nearby_disabled	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:need_trans	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:need_trans	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:neocomplcache_source	plugin/script/bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^let s:neocomplcache_source = {$/;"	v
s:neocomplete_source	plugin/script/bundle/neocomplete.vim/autoload/unite/sources/neocomplete.vim	/^let s:neocomplete_source = {$/;"	v
s:NERDTreeSortStarIndex	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NERDTreeWinName	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:NERDTreeWinName = '_NERD_tree_'$/;"	v
s:nerd_tree_switch	plugin/script/bundle/Trinity/plugin/trinity.vim	/^let s:nerd_tree_switch       = 0$/;"	v
s:nerd_tree_title	plugin/script/bundle/Trinity/plugin/trinity.vim	/^let s:nerd_tree_title        = "_NERD_tree_"$/;"	v
s:NERD_tree_version	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:NERD_tree_version = '2.13.0'$/;"	v
s:new_window	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:NormalTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:NormalTag = copy(s:BaseTag)$/;"	v
s:notifyWindow	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:notifyWindow = {}$/;"	v
s:oBookmark	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:oBookmark = {}$/;"	v
s:OmniCpp_ShowAccess	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowAccess = g:OmniCpp_ShowAccess$/;"	v
s:OmniCpp_ShowPrototypeInAbbr	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowPrototypeInAbbr = g:OmniCpp_ShowPrototypeInAbbr$/;"	v
s:OmniCpp_ShowScopeInAbbr	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowScopeInAbbr = g:OmniCpp_ShowScopeInAbbr$/;"	v
s:oPath	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:oPath = {}$/;"	v
s:option	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^let s:option = {}$/;"	v
s:options	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^let s:options = {}$/;"	v
s:order	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^let s:order = themis#suite('order')$/;"	v
s:os_slash	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^    let s:os_slash = '\\'$/;"	v
s:os_slash	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:os_slash = '\/'$/;"	v
s:oTreeDirNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:oTreeDirNode = copy(s:oTreeFileNode)$/;"	v
s:oTreeFileNode	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:oTreeFileNode = {}$/;"	v
s:pass_symbol	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^  let s:pass_symbol = 'o'$/;"	v
s:pass_symbol	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^  let s:pass_symbol = '✓'$/;"	v
s:pattern	plugin/script/bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugin/script/bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugin/script/bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugin/script/bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? :\\)\\@='$/;"	v
s:pattern	plugin/script/bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	plugin/script/bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:pattern_folde	plugin/script/bundle/deoplete.nvim/vim-themis/ftplugin/vimspec/foldexpr.vim	/^let s:pattern_folde = '\\v^\\s*[Ee]nd$'$/;"	v
s:pattern_folds	plugin/script/bundle/deoplete.nvim/vim-themis/ftplugin/vimspec/foldexpr.vim	/^let s:pattern_folds = '\\v^\\s*%([Dd]escribe|[Cc]ontext|[Ii]t|[Bb]efore|[Aa]fter)'$/;"	v
s:paused	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:plugin_name	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_name	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:popupIsHidden	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^  let s:popupIsHidden = 0$/;"	v
s:popupItemResultList	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:popupItemResultList = []$/;"	v
s:project_root	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:project_root	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:PseudoTag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:PseudoTag = copy(s:BaseTag)$/;"	v
s:pwin_by_tagbar	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:quickfix_open	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	let s:quickfix_open = 0$/;"	v
s:READ_SIZE	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^let s:READ_SIZE = 10000$/;"	v
s:reCComment	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:reCComment = '\\\/\\*\\|\\*\\\/'$/;"	v
s:receiver	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/builtin_assert.vim	/^let s:receiver = {}$/;"	v
s:receiver	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/stats.vim	/^let s:receiver = {$/;"	v
s:reComment	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:reComment = s:reCComment.'\\|'.s:reCppComment$/;"	v
s:reCppComment	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:reCppComment = '\\\/\\\/'$/;"	v
s:reCppKeyword	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:reCppKeyword = '\\C\\<'.join(s:cppKeyword, '\\>\\|\\<').'\\>'$/;"	v
s:reCppOperatorOrPunctuator	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/tokenizer.vim	/^let s:reCppOperatorOrPunctuator = escape(join(s:cppOperatorPunctuator, '\\|'), '*.\/^~[]')$/;"	v
s:register	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^let s:register = {}$/;"	v
s:reIncludeFilePart	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^let s:reIncludeFilePart = '\\(<\\|"\\)\\(\\f\\|\\s\\)\\+\\(>\\|"\\)'$/;"	v
s:Report	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/report.vim	/^let s:Report = {$/;"	v
s:reporter	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/dot.vim	/^let s:reporter = {}$/;"	v
s:reporter	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^let s:reporter = {}$/;"	v
s:reporter	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/tap.vim	/^let s:reporter = {}$/;"	v
s:rePreprocIncludeFile	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludeFile = s:rePreprocIncludePart . s:reIncludeFilePart$/;"	v
s:rePreprocIncludePart	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludePart = '\\C#\\s*include\\s*'$/;"	v
s:Runner	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^let s:Runner = {}$/;"	v
s:running_windows	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:running_windows = has("win16") || has("win32") || has("win64")$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/emitter.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/expect.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/scope.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/module.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/option.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/report.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/dot.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/tap.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/builtin_assert.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/stats.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/mark.vim/plugin/mark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/context_filetype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_case.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_delimiter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_head.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_old.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_rank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/unite/sources/file_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/dictionary_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/include_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/syntax_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/plugin/neocomplcache/tags_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplcache.vim/vest/test-neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/async_cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/context_filetype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/custom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_add_paren.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_case.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_delimiter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_disable_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/converter_remove_overlap.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_head.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/matcher_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_filename.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_rank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/handler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/dictionary.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/tag.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/unite/sources/neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/plugin/neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/plugin/neocomplete/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/plugin/neocomplete/dictionary.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/plugin/neocomplete/member.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/neocomplete.vim/plugin/neocomplete/tag.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugin/script/bundle/Trinity/plugin/trinity.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/neocomplcache/sources/vimshell_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/neocomplete/sources/vimshell.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/unite/kinds/vimshell_history.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/vimshell/handlers.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/vimshell/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/vimshell/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^let s:save_cpo = &cpo$/;"	v
s:ScopeKeeper	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^let s:ScopeKeeper = {'scopes': {}}$/;"	v
s:script_candidates_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:script_candidates_list = {}$/;"	v
s:script_path	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_zsh_complete.vim	/^let s:script_path = expand('<sfile>:p:h')$/;"	v
s:sdir	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^let s:sdir = neocomplcache#util#substitute_path_separator($/;"	v
s:sdir	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^let s:sdir = neocomplete#util#substitute_path_separator($/;"	v
s:selection	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:selection = -1$/;"	v
s:self_file	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_version	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:short_help	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:short_options	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^let s:short_options = {$/;"	v
s:SNR	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val])) . "]"'), '')$/;"	v
s:SNR	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val])) . "]"'), '')$/;"	v
s:SNR	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val])) . "]"'), '')$/;"	v
s:sorter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_length.vim	/^let s:sorter = {$/;"	v
s:sorter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_nothing.vim	/^let s:sorter = {$/;"	v
s:sorter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_rank.vim	/^let s:sorter = {$/;"	v
s:sorter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_filename.vim	/^let s:sorter = {$/;"	v
s:sorter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_length.vim	/^let s:sorter = {$/;"	v
s:sorter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_rank.vim	/^let s:sorter = {$/;"	v
s:sorter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_word.vim	/^let s:sorter = {$/;"	v
s:source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplcache.vim/autoload/unite/sources/file_include.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/dictionary.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/file.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/tag.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/vimshell.vim/autoload/neocomplcache/sources/vimshell_complete.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/vimshell.vim/autoload/neocomplete/sources/vimshell.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/vimshell.vim/autoload/neocomplete/sources/vimshell_history.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_external_history.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_history.vim	/^let s:source = {$/;"	v
s:source	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_zsh_complete.vim	/^let s:source = {$/;"	v
s:source_explorer_switch	plugin/script/bundle/Trinity/plugin/trinity.vim	/^let s:source_explorer_switch = 0$/;"	v
s:source_explorer_title	plugin/script/bundle/Trinity/plugin/trinity.vim	/^let s:source_explorer_title  = "Source_Explorer"$/;"	v
s:spacer	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:spacer= "                                                               ".$/;"	v
s:special_names	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^let s:special_names = [$/;"	v
s:SrcExpl_bufName	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_bufName = 'Source_Explorer'$/;"	v
s:SrcExpl_isDebug	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_isDebug = 0$/;"	v
s:SrcExpl_isRunning	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_isRunning = 0$/;"	v
s:SrcExpl_logPath	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_logPath = '~\/srcexpl.log'$/;"	v
s:SrcExpl_pluginName	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_pluginName = 'Source Explorer'$/;"	v
s:SrcExpl_pluginVer	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_pluginVer = 5.3$/;"	v
s:SrcExpl_winName	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_winName = 'SrcExpl'$/;"	v
s:SrcExpl_winVar	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_winVar = -1$/;"	v
s:StackInfo	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^let s:StackInfo = {$/;"	v
s:state	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:state = {$/;"	v
s:statusline_in_use	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:strchars	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^  let s:strchars = function('strchars')$/;"	v
s:strchars	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^  let s:strchars = function('strchars')$/;"	v
s:String	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^let s:String = vital#of('neocomplcache').import('Data.String')$/;"	v
s:style	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^let s:style = {$/;"	v
s:style	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^let s:style = {$/;"	v
s:style_event	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^let s:style_event = {}$/;"	v
s:suite	plugin/script/bundle/deoplete.nvim/test/autoload/deoplete/util.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	plugin/script/bundle/neocomplete.vim/test/neocomplete.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	plugin/script/bundle/vimshell.vim/test/commands.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	plugin/script/bundle/vimshell.vim/test/config.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	plugin/script/bundle/vimshell.vim/test/parser.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:supporter	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/stats.vim	/^let s:supporter = {'receiver': s:receiver}$/;"	v
s:syntax_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^  let s:syntax_list = {}$/;"	v
s:szCurrentWorkingDir	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^let s:szCurrentWorkingDir = getcwd()$/;"	v
s:tags_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^  let s:tags_list = {}$/;"	v
s:tags_list	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/tag.vim	/^  let s:tags_list = {}$/;"	v
s:tag_list_switch	plugin/script/bundle/Trinity/plugin/trinity.vim	/^let s:tag_list_switch        = 0$/;"	v
s:tag_list_title	plugin/script/bundle/Trinity/plugin/trinity.vim	/^let s:tag_list_title         = "__Tag_Bar__"$/;"	v
s:themis_home	plugin/script/bundle/deoplete.nvim/vim-themis/macros/themis_startup.vim	/^let s:themis_home = expand('<sfile>:h:h')$/;"	v
s:tlist_app_name	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_ant_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_ant_settings = 'ant;p:projects;t:targets'$/;"	v
s:tlist_def_asm_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings =$/;"	v
s:tlist_def_aspvbs_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings =$/;"	v
s:tlist_def_awk_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_basic_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_basic_settings =$/;"	v
s:tlist_def_beta_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_cobol_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_csh_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_cs_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_c_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_dosbatch_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_dosbatch_settings = 'dosbatch;l:labels;v:variables'$/;"	v
s:tlist_def_d_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_d_settings = 'c++;n:namespace;v:variable;t:typedef;' .$/;"	v
s:tlist_def_eiffel_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_flex_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_flex_settings = 'flex;v:global;c:classes;p:properties;'.$/;"	v
s:tlist_def_fortran_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_go_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_go_settings = 'go;f:function;p:package;t:struct'$/;"	v
s:tlist_def_html_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:function'$/;"	v
s:tlist_def_javascript_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_javascript_settings =$/;"	v
s:tlist_def_java_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_lisp_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_matlab_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_matlab_settings = 'matlab;f:function'$/;"	v
s:tlist_def_ocamal_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_ocamal_settings = 'ocamal;M:module;v:global;t:type;'.$/;"	v
s:tlist_def_pascal_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_php_settings =$/;"	v
s:tlist_def_python_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;f:functions;' .$/;"	v
s:tlist_def_tcl_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_tex_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_tex_settings = 'tex;c:chapters;s:sections;u:subsections;'.$/;"	v
s:tlist_def_vera_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vhdl_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_vhdl_settings = 'vhdl;c:constant;t:type;T:subtype;r:record;e:entity;f:function;p:procedure;P:package'$/;"	v
s:tlist_def_vim_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_vim_settings =$/;"	v
s:tlist_def_yacc_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_names	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_file_name_idx_cache	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_ftype_count	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	plugin/script/bundle/taglist/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	plugin/script/bundle/taglist/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:Tlist_Skip_Refresh	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:tlist_winsize_chgd	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:tlist_win_maximized	plugin/script/bundle/taglist/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tree_markup_reg	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:tree_markup_reg = '[ \\-+~`|]'$/;"	v
s:tree_markup_reg_neg	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:tree_markup_reg_neg = '[^ \\-+~`|]'$/;"	v
s:tree_up_dir_line	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:tree_wid	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^let s:tree_wid = 2$/;"	v
s:Trinity_isDebug	plugin/script/bundle/Trinity/plugin/trinity.vim	/^let s:Trinity_isDebug        = 0$/;"	v
s:Trinity_logPath	plugin/script/bundle/Trinity/plugin/trinity.vim	/^let s:Trinity_logPath        = '~\/trinity.log'$/;"	v
s:Trinity_switch	plugin/script/bundle/Trinity/plugin/trinity.vim	/^let s:Trinity_switch         = 0$/;"	v
s:Trinity_tabPage	plugin/script/bundle/Trinity/plugin/trinity.vim	/^let s:Trinity_tabPage        = 0$/;"	v
s:TypeInfo	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:TypeInfo = {}$/;"	v
s:TYPE_DICT	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_DICT	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:type_init_done	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:TYPE_LIST	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_LIST	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:type_names	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^let s:type_names = {$/;"	v
s:TYPE_STRING	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^let s:TYPE_STRING = type('')$/;"	v
s:TYPE_STRING	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^let s:TYPE_STRING = type('')$/;"	v
s:UNPROTECTED_CHAR_PRFX	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:UNPROTECTED_CHAR_PRFX = '\\%(\\%([^\\\\]\\|^\\)\\\\\\%(\\\\\\\\\\)*\\)\\@<!' " Doesn't eat slashes.$/;"	v
s:update_time_save	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^let s:update_time_save = &updatetime$/;"	v
s:use_timer	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^let s:use_timer = has('timers')$/;"	v
s:V	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:V = 5$/;"	v
s:V	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^let s:V = vital#of('neocomplcache')$/;"	v
s:variable	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^let s:variable = {}$/;"	v
s:version	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^let s:version = '1.5.2.1'$/;"	v
s:vim_quitting	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:vim_quitting = 0$/;"	v
s:visibility_symbols	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:visibility_symbols = {$/;"	v
s:Vital	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Vital	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Vital	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:vital_base_dir	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_base_dir	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:warnings	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:warnings = {$/;"	v
s:wcswidth	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^  let s:wcswidth = function('strwidth')$/;"	v
s:wcswidth	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^  let s:wcswidth = function('strwidth')$/;"	v
s:windowName	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^  let s:windowName = '[Lookup File]'$/;"	v
s:window_expanded	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:winrestcmd	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:X	plugin/script/bundle/genutils/autoload/genutils.vim	/^let s:X = 10$/;"	v
s:_cache	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^let s:_cache = { '_': {} }$/;"	v
s:_get_svars_func	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^let s:_get_svars_func = [$/;"	v
s:_plugin_name	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_plugin_name	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_s	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_signal_decode_table	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^let s:_signal_decode_table = {$/;"	v
s:_UNDEFINED	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^let s:_UNDEFINED = function('s:_undefined')$/;"	v
s:_unify_path_cache	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^  let s:_unify_path_cache = {}$/;"	v
SaveScreenState	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:SaveScreenState()$/;"	f
SaveSett	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:SaveSett(sett)$/;"	f
save_foldinfo	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! s:save_foldinfo() "{{{$/;"	f
scan	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:scan(str, pattern)$/;"	f
scan	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
scan	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
ScopeKeeper.back	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:ScopeKeeper.back(scope_id, back_scope) abort$/;"	f
ScopeKeeper.extend	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:ScopeKeeper.extend(val, copy) abort$/;"	f
ScopeKeeper.push	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:ScopeKeeper.push(scope, scope_id, parent) abort$/;"	f
ScopeKeeper.scope	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:ScopeKeeper.scope(scope_id) abort$/;"	f
ScopeKeeper.tmp_scope	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:ScopeKeeper.tmp_scope(from) abort$/;"	f
scriptnames	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:scriptnames() abort$/;"	f
ScriptWrite	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:ScriptWrite(command, pause)$/;"	f
script_plugin	build_all.sh	/^function script_plugin()$/;"	f
script_tar_bz2_plugin	build_all.sh	/^function script_tar_bz2_plugin()$/;"	f
script_tar_gz_plugin	build_all.sh	/^function script_tar_gz_plugin()$/;"	f
script_tar_plugin	build_all.sh	/^function script_tar_plugin()$/;"	f
script_vim_plugin	build_all.sh	/^function script_vim_plugin()$/;"	f
script_zip_plugin	build_all.sh	/^function script_zip_plugin()$/;"	f
scroll_down	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:scroll_down(number) abort "{{{$/;"	f
scroll_up	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:scroll_up(number) abort "{{{$/;"	f
search	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:search(pattern) abort$/;"	f
search	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:search(pattern) abort dict$/;"	f
search	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:search(pattern) abort dict$/;"	f
SearchAnyMark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:SearchAnyMark(...) " SearchAnyMark(flags)$/;"	f
SearchCurrentMark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:SearchCurrentMark(...) " SearchCurrentMark(flags)$/;"	f
SearchDecl	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:SearchDecl(szVariable)$/;"	f
SearchGlobalMembers	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:SearchGlobalMembers(szBase)$/;"	f
SearchMembers	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:SearchMembers(resolvedTagItem, szBase)$/;"	f
SearchNext	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:SearchNext(...) " SearchNext(flags)$/;"	f
SearchTypeInfoOfDecl	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:SearchTypeInfoOfDecl(szVariable)$/;"	f
search_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:search_prompt(flag) abort "{{{$/;"	f
search_vim_path	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/cache.vim	/^function! s:search_vim_path() abort "{{{$/;"	f
self.suite.after	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  function! self.suite.after() abort$/;"	f
self.suite.after_each	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  function! self.suite.after_each() abort$/;"	f
self.suite.before_each	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  function! self.suite.before_each() abort$/;"	f
self.suite.parent_test	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  function! self.suite.parent_test() abort$/;"	f
self.suite.test1	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  function! self.suite.test1() abort$/;"	f
self.suite.test2	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/hook.vim	/^  function! self.suite.test2() abort$/;"	f
send_intrrupt	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! s:send_intrrupt() abort "{{{$/;"	f
SetFoldLevel	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
SetFoldLevelRecursive	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
SetIndentLine	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:SetIndentLine()$/;"	f
SetStatusLine	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:SetStatusLine()$/;"	f
setup	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def setup(vim, level, output_file=None):$/;"	f
Setup	plugin/script/bundle/indentLine/after/plugin/indentLine.vim	/^function! s:Setup()$/;"	f
SetupBuf	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:SetupBuf()$/;"	f
SetupSyntaxHighlighting	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:SetupSyntaxHighlighting()$/;"	f
setup_keymaps	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^function! s:setup_keymaps() abort$/;"	f
setup_options	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^function! s:setup_options() abort$/;"	f
set_auto_completion_length	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! s:set_auto_completion_length(len) "{{{$/;"	f
set_auto_completion_length	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/commands.vim	/^function! s:set_auto_completion_length(len) abort "{{{$/;"	f
set_complete_results_pos	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:set_complete_results_pos(funcs, cur_text) "{{{$/;"	f
set_complete_results_pos	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^function! s:set_complete_results_pos(funcs, cur_text) abort "{{{$/;"	f
set_complete_results_words	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:set_complete_results_words(complete_results) "{{{$/;"	f
set_complete_results_words	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^function! s:set_complete_results_words(complete_results) abort "{{{$/;"	f
set_cursor	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:set_cursor() abort "{{{$/;"	f
set_default	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def set_default(vim, var, val):$/;"	f
set_default	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:set_default(var, val)$/;"	f
set_default	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default_custom	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! s:set_default_custom() "{{{$/;"	f
set_default_menu	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/complete.vim	/^function! s:set_default_menu(words, source) abort "{{{$/;"	f
set_dictionary_helper	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:set_dictionary_helper(variable, keys, value) "{{{$/;"	f
set_dictionary_helper	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern)$/;"	f
set_list	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def set_list(vim, variable, keys, list):$/;"	f
set_output_pos	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:set_output_pos(is_insert) abort "{{{$/;"	f
set_pattern	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def set_pattern(variable, keys, pattern):$/;"	f
set_props	plugin/script/bundle/vim-header/autoload/header.vim	/^fun s:set_props()$/;"	f
set_screen_pos	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:set_screen_pos(line, col) abort "{{{$/;"	f
set_screen_string	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:set_screen_string(line, col, string) abort "{{{$/;"	f
set_source_attributes	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def set_source_attributes(self, context):$/;"	m	class:Deoplete
sfuncs	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:sfuncs(path) abort$/;"	f
shellescape	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shellescape	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shift	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:shift(list)$/;"	f
shift	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shift	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shiftwidth	plugin/script/bundle/deoplete.nvim/vim-themis/indent/vimspec.vim	/^  function! s:shiftwidth() abort$/;"	f
ShouldSplitToOpen	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:ShouldSplitToOpen(winnumber)$/;"	f
ShouldSplitVertically	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:ShouldSplitVertically()$/;"	f
should_create_cache	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:should_create_cache(bufnr) " {{{$/;"	f
ShowFileSystemMenu	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:ShowFileSystemMenu()$/;"	f
ShowFiller	plugin/script/bundle/LookupFile/autoload/lookupfile.vim	/^function! s:ShowFiller()$/;"	f
ShowInPreviewWin	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
ShowPrototype	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
ShrinkIfExpanded	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
sid	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:sid() abort$/;"	f
sid	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:sid(path) abort$/;"	f
sid2path	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:sid2path(sid) abort$/;"	f
sid2sfuncs	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
sid2sfuncs	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
sid2sfuncs	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
sid2svars	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:sid2svars(sid) abort$/;"	f
SID_PREFIX	plugin/script/bundle/vimshell.vim/autoload/vimshell/altercmd.vim	/^function! s:SID_PREFIX() abort$/;"	f
sign	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:sign(status)$/;"	f
silent!	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	noautocmd silent! exec ''.l:winnr.'wincmd w'$/;"	m
Skip.can_not_omit_message	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^    function! Skip.can_not_omit_message() abort$/;"	f
smart_execute_command	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:smart_execute_command(action, word)$/;"	f
smart_execute_command	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smart_execute_command	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
SNR	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:SNR()$/;"	f
SNR	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:SNR()$/;"	f
sort	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:sort(list, expr)$/;"	f
sort	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sorter.filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_length.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_nothing.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_rank.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_filename.vim	/^function! s:sorter.filter(context) abort "{{{$/;"	f
sorter.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_length.vim	/^function! s:sorter.filter(context) abort "{{{$/;"	f
sorter.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_rank.vim	/^function! s:sorter.filter(context) abort "{{{$/;"	f
sorter.filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/filters/sorter_word.vim	/^function! s:sorter.filter(context) abort "{{{$/;"	f
sortfunc	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:sortfunc(i1, i2) abort "{{{$/;"	f
SortTags	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:SortTags(tags, comparemethod) abort$/;"	f
sort_by	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:sort_by(list, expr)$/;"	f
sort_by	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_by	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
Source	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^class Source(Base):$/;"	c
Source	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^class Source(Base):$/;"	c
Source	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^class Source(Base):$/;"	c
Source	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^class Source(Base):$/;"	c
Source	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^class Source(Base):$/;"	c
Source	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^class Source(Base):$/;"	c
Source	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^class Source(Base):$/;"	c
Source	plugin/script/bundle/vimshell.vim/rplugin/python3/deoplete/sources/vimshell.py	/^class Source(Base):$/;"	c
Source	plugin/script/bundle/vimshell.vim/rplugin/python3/deoplete/sources/vimshell_history.py	/^class Source(Base):$/;"	c
source.async_gather_candidates	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_zsh_complete.vim	/^function! s:source.async_gather_candidates(args, context) abort "{{{$/;"	f
source.finalize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.gather_candidates	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	plugin/script/bundle/neocomplcache.vim/autoload/unite/sources/file_include.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.gather_candidates	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/dictionary.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.gather_candidates	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/file.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.gather_candidates	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.gather_candidates	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.gather_candidates	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/tag.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.gather_candidates	plugin/script/bundle/vimshell.vim/autoload/neocomplete/sources/vimshell.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.gather_candidates	plugin/script/bundle/vimshell.vim/autoload/neocomplete/sources/vimshell_history.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.gather_candidates	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_external_history.vim	/^function! s:source.gather_candidates(args, context) abort "{{{$/;"	f
source.gather_candidates	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_history.vim	/^function! s:source.gather_candidates(args, context) abort "{{{$/;"	f
source.gather_candidates	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_zsh_complete.vim	/^function! s:source.gather_candidates(args, context) abort "{{{$/;"	f
source.get_complete_position	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/file.vim	/^function! s:source.get_complete_position(context) abort "{{{$/;"	f
source.get_complete_position	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^function! s:source.get_complete_position(context) abort "{{{$/;"	f
source.get_complete_position	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^function! s:source.get_complete_position(context) abort "{{{$/;"	f
source.get_complete_position	plugin/script/bundle/vimshell.vim/autoload/neocomplete/sources/vimshell.vim	/^function! s:source.get_complete_position(context) abort "{{{$/;"	f
source.get_complete_position	plugin/script/bundle/vimshell.vim/autoload/neocomplete/sources/vimshell_history.vim	/^function! s:source.get_complete_position(context) abort "{{{$/;"	f
source.get_complete_words	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	plugin/script/bundle/vimshell.vim/autoload/neocomplcache/sources/vimshell_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str) abort "{{{$/;"	f
source.get_keyword_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_list	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_pos	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	plugin/script/bundle/vimshell.vim/autoload/neocomplcache/sources/vimshell_complete.vim	/^function! s:source.get_keyword_pos(cur_text) abort "{{{$/;"	f
source.hooks.on_close	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_history.vim	/^function! s:source.hooks.on_close(args, context) abort "{{{$/;"	f
source.hooks.on_close	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_zsh_complete.vim	/^function! s:source.hooks.on_close(args, context) abort "{{{$/;"	f
source.hooks.on_final	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_final	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:source.hooks.on_final(context) abort "{{{$/;"	f
source.hooks.on_final	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/dictionary.vim	/^function! s:source.hooks.on_final(context) abort "{{{$/;"	f
source.hooks.on_final	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/tag.vim	/^function! s:source.hooks.on_final(context) abort "{{{$/;"	f
source.hooks.on_init	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	plugin/script/bundle/neocomplcache.vim/autoload/unite/sources/file_include.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:source.hooks.on_init(context) abort "{{{$/;"	f
source.hooks.on_init	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/dictionary.vim	/^function! s:source.hooks.on_init(context) abort "{{{$/;"	f
source.hooks.on_init	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/member.vim	/^function! s:source.hooks.on_init(context) abort "{{{$/;"	f
source.hooks.on_init	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/omni.vim	/^function! s:source.hooks.on_init(context) abort "{{{$/;"	f
source.hooks.on_init	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/tag.vim	/^function! s:source.hooks.on_init(context) abort "{{{$/;"	f
source.hooks.on_init	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_external_history.vim	/^function! s:source.hooks.on_init(args, context) abort "{{{$/;"	f
source.hooks.on_init	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_history.vim	/^function! s:source.hooks.on_init(args, context) abort "{{{$/;"	f
source.hooks.on_init	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_zsh_complete.vim	/^function! s:source.hooks.on_init(args, context) abort "{{{$/;"	f
source.hooks.on_post_filter	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/sources/buffer.vim	/^function! s:source.hooks.on_post_filter(context) abort "{{{$/;"	f
source.hooks.on_post_filter	plugin/script/bundle/vimshell.vim/autoload/neocomplete/sources/vimshell_history.vim	/^function! s:source.hooks.on_post_filter(context) abort "{{{$/;"	f
source.hooks.on_post_filter	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_external_history.vim	/^function! s:source.hooks.on_post_filter(args, context) abort "{{{$/;"	f
source.hooks.on_post_filter	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_history.vim	/^function! s:source.hooks.on_post_filter(args, context) abort "{{{$/;"	f
source.hooks.on_post_filter	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_zsh_complete.vim	/^function! s:source.hooks.on_post_filter(args, context) abort "{{{$/;"	f
source.hooks.on_syntax	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_external_history.vim	/^function! s:source.hooks.on_syntax(args, context) abort "{{{$/;"	f
source.hooks.on_syntax	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_history.vim	/^function! s:source.hooks.on_syntax(args, context) abort "{{{$/;"	f
source.hooks.on_syntax	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_zsh_complete.vim	/^function! s:source.hooks.on_syntax(args, context) abort "{{{$/;"	f
source.initialize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
SourceInitError	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/exceptions.py	/^class SourceInitError(Exception):$/;"	c
source_plugin	build_all.sh	/^function source_plugin()$/;"	f
source_tar_bz2_plugin	build_all.sh	/^function source_tar_bz2_plugin()$/;"	f
source_tar_gz_plugin	build_all.sh	/^function source_tar_gz_plugin()$/;"	f
source_tar_plugin	build_all.sh	/^function source_tar_plugin()$/;"	f
source_zip_plugin	build_all.sh	/^function source_zip_plugin()$/;"	f
span	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:span(f, xs)$/;"	f
span	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
span	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
spawn	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
spawn	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
split3	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:split3(expr, pattern)$/;"	f
split3	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split3	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split_args	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:split_args(cur_text, complete_str) "{{{$/;"	f
split_by_displaywidth	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_by_displaywidth	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_leftright	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:split_leftright(expr, pattern)$/;"	f
split_leftright	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_leftright	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_pattern	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:split_pattern(keyword_pattern) "{{{$/;"	f
split_posix_text	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:split_posix_text(text, ...) abort$/;"	f
split_posix_text	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:split_posix_text(text, ...) abort$/;"	f
SrcExpl	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^command! -nargs=0 -bar SrcExpl$/;"	c
SrcExpl	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl()$/;"	f
SrcExplClose	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^command! -nargs=0 -bar SrcExplClose$/;"	c
SrcExplToggle	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^command! -nargs=0 -bar SrcExplToggle$/;"	c
SrcExpl_AdaptPlugins	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_AdaptPlugins()$/;"	f
SrcExpl_CleanUp	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_CleanUp()$/;"	f
SrcExpl_Close	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_Close()$/;"	f
SrcExpl_ColorExpr	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ColorExpr()$/;"	f
SrcExpl_ColorLine	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ColorLine()$/;"	f
SrcExpl_Debug	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_Debug(log)$/;"	f
SrcExpl_GetEditWin	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GetEditWin()$/;"	f
SrcExpl_GetInput	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GetInput(note)$/;"	f
SrcExpl_GetMarkList	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GetMarkList()$/;"	f
SrcExpl_GetSymbol	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GetSymbol()$/;"	f
SrcExpl_GetVer	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_GetVer()$/;"	f
SrcExpl_GetWin	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_GetWin()$/;"	f
SrcExpl_GoBack	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_GoBack()$/;"	f
SrcExpl_GoDecl	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GoDecl(expr)$/;"	f
SrcExpl_Init	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_Init()$/;"	f
SrcExpl_Jump	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_Jump()$/;"	f
SrcExpl_JumpDef	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_JumpDef(dir)$/;"	f
SrcExpl_ListMultiDefs	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ListMultiDefs(list, len)$/;"	f
SrcExpl_MatchExpr	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_MatchExpr()$/;"	f
SrcExpl_NextDef	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_NextDef()$/;"	f
SrcExpl_PrevDef	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_PrevDef()$/;"	f
SrcExpl_Refresh	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_Refresh()$/;"	f
SrcExpl_ReportErr	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ReportErr(err)$/;"	f
SrcExpl_SelToJump	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_SelToJump(dir)$/;"	f
SrcExpl_SetCurrMark	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_SetCurrMark()$/;"	f
SrcExpl_SetMarkList	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_SetMarkList()$/;"	f
SrcExpl_TagSth	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_TagSth(expr)$/;"	f
SrcExpl_Toggle	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_Toggle()$/;"	f
SrcExpl_UpdateTags	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_UpdateTags()$/;"	f
SrcExpl_ViewOneDef	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ViewOneDef(fpath, excmd)$/;"	f
SrcExpl_WinActive	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinActive()$/;"	f
SrcExpl_WinClose	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinClose()$/;"	f
SrcExpl_WinDelete	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinDelete()$/;"	f
SrcExpl_WinEdit	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinEdit(wincmd)$/;"	f
SrcExpl_WinEnter	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinEnter()$/;"	f
SrcExpl_WinGo	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinGo()$/;"	f
SrcExpl_WinNew	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinNew(wincmd)$/;"	f
SrcExpl_WinOpen	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinOpen()$/;"	f
SrcExpl_WinPrompt	plugin/script/bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinPrompt(prompt)$/;"	f
StackInfo.adjusted_lnum	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! s:StackInfo.adjusted_lnum(...) abort$/;"	f
StackInfo.fill_info	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! s:StackInfo.fill_info() abort$/;"	f
StackInfo.format	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! s:StackInfo.format() abort$/;"	f
StackInfo.get_line	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! s:StackInfo.get_line(...) abort$/;"	f
StackInfo.get_line_with_lnum	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! s:StackInfo.get_line_with_lnum(...) abort$/;"	f
StackInfo.make_signature	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! s:StackInfo.make_signature() abort$/;"	f
start	plugin/script/bundle/deoplete.nvim/vim-themis/macros/themis_startup.vim	/^function! s:start() abort$/;"	f
start	plugin/script/bundle/neocomplete.vim/test/neocomplete.vim	/^  let start = reltime()$/;"	v
StartDebug	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:StartDebug(filename) abort$/;"	f
starts_with	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
starts_with	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
STARTUP_SCRIPT	plugin/script/bundle/deoplete.nvim/vim-themis/bin/themis.bat	/^set STARTUP_SCRIPT="%THEMIS_HOME%\\macros\\themis_startup.vim"$/;"	v
start_complete	plugin/script/bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^function! s:start_complete(is_quick_match) "{{{$/;"	f
start_complete	plugin/script/bundle/neocomplete.vim/autoload/unite/sources/neocomplete.vim	/^function! s:start_complete(is_quick_match) abort "{{{$/;"	f
start_history_complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! s:start_history_complete() abort "{{{$/;"	f
start_insert	plugin/script/bundle/vimshell.vim/autoload/vimshell/term_mappings.vim	/^function! s:start_insert() abort "{{{$/;"	f
state.getCurrent	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:state.getCurrent(forcecurrent) abort dict$/;"	f
state.New	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:state.New() abort dict$/;"	f
state.setCurrent	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:state.setCurrent(fileinfo) abort dict$/;"	f
state.setPaused	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:state.setPaused() abort dict$/;"	f
still_have_issues	plugin/script/bundle/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:still_have_issues() abort$/;"	f
StopDebug	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:StopDebug() abort$/;"	f
store	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:store(targets) abort$/;"	f
strchars	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^  function! s:strchars(str)$/;"	f
strchars	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
strchars	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
StringReplace	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:StringReplace(text, old, new)$/;"	f
StringStrip	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^function! s:StringStrip(text)$/;"	f
strip	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:strip(str)$/;"	f
StripMarkupFromLine	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:StripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
strwidth	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def strwidth(string):$/;"	f
strwidthpart	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^function! s:strwidthpart(str, width) "{{{$/;"	f
strwidthpart	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:strwidthpart(str, width)$/;"	f
strwidthpart	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/async_cache.vim	/^function! s:strwidthpart(str, width) abort "{{{$/;"	f
strwidthpart	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart_reverse	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:strwidthpart_reverse(str, width)$/;"	f
strwidthpart_reverse	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
style.can_handle	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^function! s:style.can_handle(filename) abort$/;"	f
style.can_handle	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:style.can_handle(filename) abort$/;"	f
style.get_test_names	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^function! s:style.get_test_names(bundle) abort$/;"	f
style.get_test_names	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:style.get_test_names(bundle) abort$/;"	f
style.load_script	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^function! s:style.load_script(filename, base_bundle) abort$/;"	f
style.load_script	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:style.load_script(filename, base_bundle) abort$/;"	f
style_event._	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! s:style_event._(event, args) abort$/;"	f
substitute_candidate	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:substitute_candidate(candidate) "{{{$/;"	f
substitute_last	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:substitute_last(expr, pat, sub)$/;"	f
substitute_last	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_last	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_path_separator	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:substitute_path_separator(path)$/;"	f
substitute_path_separator	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
substitute_path_separator	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
suite.alias	plugin/script/bundle/vimshell.vim/test/parser.vim	/^function! s:suite.alias() abort$/;"	f
suite.escape	plugin/script/bundle/neocomplete.vim/test/neocomplete.vim	/^function! s:suite.escape() abort$/;"	f
suite.fuzzy	plugin/script/bundle/neocomplete.vim/test/neocomplete.vim	/^function! s:suite.fuzzy() abort$/;"	f
suite.getopt	plugin/script/bundle/vimshell.vim/test/parser.vim	/^function! s:suite.getopt() abort$/;"	f
suite.internal	plugin/script/bundle/vimshell.vim/test/commands.vim	/^function! s:suite.internal() abort$/;"	f
suite.options	plugin/script/bundle/vimshell.vim/test/config.vim	/^function! s:suite.options() abort$/;"	f
suite.overlap	plugin/script/bundle/neocomplete.vim/test/neocomplete.vim	/^function! s:suite.overlap() abort$/;"	f
suite.prompt	plugin/script/bundle/vimshell.vim/test/config.vim	/^function! s:suite.prompt() abort$/;"	f
suite.sort	plugin/script/bundle/neocomplete.vim/test/neocomplete.vim	/^function! s:suite.sort() abort$/;"	f
suite.vimoption2python	plugin/script/bundle/deoplete.nvim/test/autoload/deoplete/util.vim	/^function! s:suite.vimoption2python() abort$/;"	f
sum	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! s:sum(list) abort$/;"	f
supporter.count	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/stats.vim	/^function! s:supporter.count() abort$/;"	f
supporter.fail	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/stats.vim	/^function! s:supporter.fail() abort$/;"	f
supporter.pass	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/stats.vim	/^function! s:supporter.pass() abort$/;"	f
supporter.pending	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/stats.vim	/^function! s:supporter.pending() abort$/;"	f
supporter.stat	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/stats.vim	/^function! s:supporter.stat() abort$/;"	f
svars	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:svars(path) abort$/;"	f
swap	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^function! s:swap(dict) abort$/;"	f
switch_vimshell	plugin/script/bundle/vimshell.vim/autoload/vimshell/init.vim	/^function! s:switch_vimshell(bufnr, context, path) abort "{{{$/;"	f
sync	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:sync(bang, bundle) abort$/;"	f
system	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:system(str, ...)$/;"	f
system	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^function! s:system(str, ...) abort$/;"	f
system	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^function! s:system(str, ...) abort$/;"	f
system	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:system(cmd) abort$/;"	f
Tagbar	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 Tagbar              call tagbar#ToggleWindow()$/;"	c
tagbar#autoopen	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#CloseWindow	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#currentfile	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#gettypeconfig	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#inspect	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#inspect(var) abort$/;"	f
tagbar#OpenWindow	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#StartDebug	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StartDebug(...) abort$/;"	f
tagbar#StopDebug	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StopDebug() abort$/;"	f
tagbar#ToggleWindow	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow(...) abort$/;"	f
tagbar#toggle_pause	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
TagbarBalloonExpr	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarBufName	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:TagbarBufName() abort$/;"	f
TagbarClose	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#StartDebug(<f-args>)$/;"	c
TagbarDebugEnd	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#StopDebug()$/;"	c
TagbarGetTypeConfig	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarOpen	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarState	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:TagbarState() abort$/;"	f
TagbarToggle	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarTogglePause	plugin/script/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
TagList_IsValid	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_title	plugin/script/bundle/taglist/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TagList_WrapUp	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagPopupList	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/complete.vim	/^function! s:TagPopupList(szTypeName, szBase)$/;"	f
TagsCacheItem	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^TagsCacheItem = namedtuple('TagsCacheItem', 'mtime candidates')$/;"	v
take_while	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:take_while(f, xs)$/;"	f
take_while	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
take_while	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
test.eighth	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! test.eighth() abort$/;"	f
test.fifth	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! test.fifth() abort$/;"	f
test.first	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! test.first() abort$/;"	f
test.fourth	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! test.fourth() abort$/;"	f
test.ninth	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! test.ninth() abort$/;"	f
test.second	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! test.second() abort$/;"	f
test.seventh	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! test.seventh() abort$/;"	f
test.sixth	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! test.sixth() abort$/;"	f
test.tenth	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! test.tenth() abort$/;"	f
test.third	plugin/script/bundle/deoplete.nvim/vim-themis/test/style/basic/order.vim	/^  function! test.third() abort$/;"	f
test_charwidth	plugin/script/bundle/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_charwidth():$/;"	f
test_compare	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^function! s:test_compare(a, b) abort$/;"	f
test_custom	plugin/script/bundle/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_custom():$/;"	f
test_fuzzy_escapse	plugin/script/bundle/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_fuzzy_escapse():$/;"	f
test_globruntime	plugin/script/bundle/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_globruntime():$/;"	f
test_overlap_length	plugin/script/bundle/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_overlap_length():$/;"	f
test_pos	plugin/script/bundle/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_pos():$/;"	f
test_skipping	plugin/script/bundle/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_skipping():$/;"	f
test_strwidth	plugin/script/bundle/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_strwidth():$/;"	f
test_truncate	plugin/script/bundle/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_truncate():$/;"	f
themis#bundle	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#bundle(title) abort$/;"	f
themis#bundle#is_bundle	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! themis#bundle#is_bundle(obj) abort$/;"	f
themis#bundle#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/bundle.vim	/^function! themis#bundle#new(...) abort$/;"	f
themis#command#start	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/command.vim	/^function! themis#command#start(args) abort$/;"	f
themis#emitter#fire	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/emitter.vim	/^function! themis#emitter#fire(listener, event, args) abort$/;"	f
themis#emitter#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/emitter.vim	/^function! themis#emitter#new() abort$/;"	f
themis#exception	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#exception(type, message) abort$/;"	f
themis#failure	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#failure(expr) abort$/;"	f
themis#func_alias	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#func_alias(dict) abort$/;"	f
themis#helper	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#helper(name) abort$/;"	f
themis#helper#assert#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! themis#helper#assert#new(runner) abort$/;"	f
themis#helper#command#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! themis#helper#command#new(runner) abort$/;"	f
themis#helper#expect#define_matcher	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/expect.vim	/^function! themis#helper#expect#define_matcher(name, predicate, ...) abort$/;"	f
themis#helper#expect#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/expect.vim	/^function! themis#helper#expect#new(_) abort$/;"	f
themis#helper#expect#_create_expect	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/expect.vim	/^function! themis#helper#expect#_create_expect(actual) abort$/;"	f
themis#helper#scope#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/scope.vim	/^function! themis#helper#scope#new(runner) abort$/;"	f
themis#log	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#log(expr, ...) abort$/;"	f
themis#logn	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#logn(expr, ...) abort$/;"	f
themis#message	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#message(expr) abort$/;"	f
themis#module#exists	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/module.vim	/^function! themis#module#exists(type, name) abort$/;"	f
themis#module#list	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/module.vim	/^function! themis#module#list(type) abort$/;"	f
themis#module#load	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/module.vim	/^function! themis#module#load(type, name, args) abort$/;"	f
themis#module#reporter	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/module.vim	/^function! themis#module#reporter(name) abort$/;"	f
themis#module#style	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/module.vim	/^function! themis#module#style(name) abort$/;"	f
themis#module#supporter	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/module.vim	/^function! themis#module#supporter(name, runner) abort$/;"	f
themis#option	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#option(...) abort$/;"	f
themis#option#default	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/option.vim	/^function! themis#option#default() abort$/;"	f
themis#option#empty_options	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/option.vim	/^function! themis#option#empty_options() abort$/;"	f
themis#option#merge	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/option.vim	/^function! themis#option#merge(base, overwriter) abort$/;"	f
themis#report#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/report.vim	/^function! themis#report#new(bundle, entry) abort$/;"	f
themis#reporter#dot#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/dot.vim	/^function! themis#reporter#dot#new() abort$/;"	f
themis#reporter#spec#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/spec.vim	/^function! themis#reporter#spec#new() abort$/;"	f
themis#reporter#tap#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/reporter/tap.vim	/^function! themis#reporter#tap#new() abort$/;"	f
themis#run	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#run(paths, ...) abort$/;"	f
themis#runner#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/runner.vim	/^function! themis#runner#new() abort$/;"	f
themis#style#basic#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^function! themis#style#basic#new() abort$/;"	f
themis#style#vimspec#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! themis#style#vimspec#new() abort$/;"	f
themis#style#vimspec#new_scope	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! themis#style#vimspec#new_scope() abort$/;"	f
themis#suite	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#suite(...) abort$/;"	f
themis#supporter#builtin_assert#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/builtin_assert.vim	/^function! themis#supporter#builtin_assert#new(runner) abort$/;"	f
themis#supporter#stats#new	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/supporter/stats.vim	/^function! themis#supporter#stats#new(runner) abort$/;"	f
themis#util#adjust_func_line	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! themis#util#adjust_func_line(target, line) abort$/;"	f
themis#util#callstack	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! themis#util#callstack(throwpoint, ...) abort$/;"	f
themis#util#callstacklines	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! themis#util#callstacklines(throwpoint, ...) abort$/;"	f
themis#util#error_info	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! themis#util#error_info(stacktrace) abort$/;"	f
themis#util#find_files	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! themis#util#find_files(paths, filename) abort$/;"	f
themis#util#funcdata	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! themis#util#funcdata(func) abort$/;"	f
themis#util#funcname	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! themis#util#funcname(funcref) abort$/;"	f
themis#util#func_alias	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! themis#util#func_alias(dict, prefixes) abort$/;"	f
themis#util#get_full_title	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! themis#util#get_full_title(obj, ...) abort$/;"	f
themis#util#is_funcname	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! themis#util#is_funcname(name) abort$/;"	f
themis#util#parse_callstack	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! themis#util#parse_callstack(callstack) abort$/;"	f
themis#util#sortuniq	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! themis#util#sortuniq(list) abort$/;"	f
themis#util#stack_info	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/util.vim	/^function! themis#util#stack_info(stack) abort$/;"	f
themis#version	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#version() abort$/;"	f
themis#_set_base_bundle	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#_set_base_bundle(bundle) abort$/;"	f
themis#_unset_base_bundle	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis.vim	/^function! themis#_unset_base_bundle() abort$/;"	f
THEMIS_ARGS	plugin/script/bundle/deoplete.nvim/Makefile	/^export THEMIS_ARGS := -e -s --headless$/;"	m
THEMIS_ARGS	plugin/script/bundle/deoplete.nvim/vim-themis/bin/themis.bat	/^if "%THEMIS_ARGS%"== "" set THEMIS_ARGS=-e -s$/;"	v
THEMIS_ERRORLEVEL	plugin/script/bundle/deoplete.nvim/vim-themis/bin/themis.bat	/^set THEMIS_ERRORLEVEL=%ERRORLEVEL%$/;"	v
THEMIS_HOME	plugin/script/bundle/deoplete.nvim/Makefile	/^export THEMIS_HOME := .\/vim-themis$/;"	m
THEMIS_HOME	plugin/script/bundle/deoplete.nvim/vim-themis/bin/themis.bat	/^set THEMIS_HOME=%CD%$/;"	v
THEMIS_LOG	plugin/script/bundle/deoplete.nvim/vim-themis/bin/themis.bat	/^set THEMIS_LOG="%TMP%\\themis.log"$/;"	v
THEMIS_VIM	plugin/script/bundle/deoplete.nvim/Makefile	/^export THEMIS_VIM  := nvim$/;"	m
THEMIS_VIM	plugin/script/bundle/deoplete.nvim/vim-themis/bin/themis.bat	/^if "%THEMIS_VIM%"== "" set THEMIS_VIM=vim$/;"	v
ThrowError	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^function! ThrowError(err) abort$/;"	f
Throws.can_check_exception	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^    function! Throws.can_check_exception() abort$/;"	f
Throws.can_use_double_quote_in_argument	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^    function! Throws.can_use_double_quote_in_argument() abort$/;"	f
Throws.detect_exception_in_command	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^    function! Throws.detect_exception_in_command() abort$/;"	f
timer_begin	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:timer_begin() abort$/;"	f
timer_end	plugin/script/bundle/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:timer_end() abort$/;"	f
timer_handler	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:timer_handler(timer) abort "{{{$/;"	f
timer_start	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:timer_start() abort "{{{$/;"	f
timer_stop	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:timer_stop() abort "{{{$/;"	f
Tlist	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	plugin/script/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Create_Folds_For_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Create_Folds_For_File(fidx)$/;"	f
Tlist_Ctags_Cmd	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tagtype	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_Extract_Tag_Scope	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_FileType_Init	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_Filenames	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Get_Filenames()$/;"	f
Tlist_Get_File_Index	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Tagname_By_Line	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Get_Tag_Linenum	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_Scope	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Scope(fidx, tidx)$/;"	f
Tlist_Get_Tag_SearchPat	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	plugin/script/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_Filelist	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Process_File_Always	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
tlist_pyrex_settings	plugin/script/bundle/taglist/plugin/taglist.vim	/^let tlist_pyrex_settings='python;c:classe;m:memder;f:function'$/;"	v
Tlist_Refresh	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_User_Removed_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Use_Horiz_Window	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_Vim_Session_Load	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_Window_Check_Auto_Open	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	plugin/script/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
Tlist_WinHeight	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	plugin/script/bundle/taglist/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
TODO.uses_default_message_when_the_message_is_omitted	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/command.vim	/^    function! TODO.uses_default_message_when_the_message_is_omitted() abort$/;"	f
Toggle	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:Toggle(dir)$/;"	f
ToggleAutoclose	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleAutoclose() abort$/;"	f
ToggleCaseInsensitive	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleCaseInsensitive() abort$/;"	f
ToggleFold	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
ToggleHelp	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
ToggleHideNonPublicTags	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHideNonPublicTags() abort$/;"	f
ToggleIgnoreFilter	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:ToggleIgnoreFilter()$/;"	f
ToggleShowBookmarks	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:ToggleShowBookmarks()$/;"	f
ToggleShowFiles	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:ToggleShowFiles()$/;"	f
ToggleShowHidden	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:ToggleShowHidden()$/;"	f
ToggleSort	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
ToggleWindow	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow(flags) abort$/;"	f
TokensToString	plugin/script/bundle/omnicppcomplete/autoload/omni/cpp/items.vim	/^function! s:TokensToString(tokens)$/;"	f
to_be_dict.throws_a_report_when_type_is_mismatch	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_be_dict.throws_a_report_when_type_is_mismatch() abort$/;"	f
to_be_empty.throws_report_when_the_value_is_not_empty	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_be_empty.throws_report_when_the_value_is_not_empty() abort$/;"	f
to_be_false.checks_value_strictly	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_be_false.checks_value_strictly() abort$/;"	f
to_be_float.throws_a_report_when_type_is_mismatch	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_be_float.throws_a_report_when_type_is_mismatch() abort$/;"	f
to_be_func.throws_a_report_when_type_is_mismatch	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_be_func.throws_a_report_when_type_is_mismatch() abort$/;"	f
to_be_list.throws_a_report_when_type_is_mismatch	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_be_list.throws_a_report_when_type_is_mismatch() abort$/;"	f
to_be_number.throws_a_report_when_type_is_mismatch	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_be_number.throws_a_report_when_type_is_mismatch() abort$/;"	f
to_be_same.throws_a_report_when_values_are_differnt_instances	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_be_same.throws_a_report_when_values_are_differnt_instances() abort$/;"	f
to_be_string.throws_a_report_when_type_is_mismatch	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_be_string.throws_a_report_when_type_is_mismatch() abort$/;"	f
to_be_true.checks_value_strictly	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_be_true.checks_value_strictly() abort$/;"	f
to_be_truthy.throws_a_report_when_value_is_zero_or_not_a_number	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_be_truthy.throws_a_report_when_value_is_zero_or_not_a_number() abort$/;"	f
to_camel_case	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:to_camel_case(str) abort$/;"	f
to_equal.throws_a_report_when_values_are_differnt	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_equal.throws_a_report_when_values_are_differnt() abort$/;"	f
to_exist.after	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_exist.after() abort$/;"	f
to_exist.checks_existence	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_exist.checks_existence() abort$/;"	f
to_exist.throws_report_when_the_value_does_not_to_exist	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_exist.throws_report_when_the_value_does_not_to_exist() abort$/;"	f
to_have_key.checks_index_exists_in_array	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_have_key.checks_index_exists_in_array() abort$/;"	f
to_have_key.throws_a_report_when_index_is_not_exist_in_array	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_have_key.throws_a_report_when_index_is_not_exist_in_array() abort$/;"	f
to_have_key.throws_a_report_when_key_is_not_exist_in_dict	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_have_key.throws_a_report_when_key_is_not_exist_in_dict() abort$/;"	f
to_have_length.checks_length_of_dict	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_have_length.checks_length_of_dict() abort$/;"	f
to_have_length.checks_length_of_list	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_have_length.checks_length_of_list() abort$/;"	f
to_have_length.throws_a_report_when_first_argument_is_not_valid	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_have_length.throws_a_report_when_first_argument_is_not_valid() abort$/;"	f
to_have_length.throws_a_report_when_length_is_mismatch	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_have_length.throws_a_report_when_length_is_mismatch() abort$/;"	f
to_i	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/basic.vim	/^function! s:to_i(value) abort$/;"	f
to_match.throws_a_report_when_value_does_not_match	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_match.throws_a_report_when_value_does_not_match() abort$/;"	f
to_match.throws_a_report_when_value_is_not_string	plugin/script/bundle/deoplete.nvim/vim-themis/test/helper/expect.vim	/^    function! to_match.throws_a_report_when_value_is_not_string() abort$/;"	f
to_scope	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:to_scope(dict) abort$/;"	f
TransformUserTypeDef	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
TranslateAlpha	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:TranslateAlpha(pat)$/;"	f
TranslateFileRegex	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:TranslateFileRegex(filePat)$/;"	f
TranslateFileWild	plugin/script/bundle/LookupFile/plugin/lookupfile.vim	/^function! s:TranslateFileWild(fileWild)$/;"	f
translate_script	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/style/vimspec.vim	/^function! s:translate_script(lines) abort$/;"	f
TreeExistsForTab	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:TreeExistsForTab()$/;"	f
trim	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:trim(str)$/;"	f
trim	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim_end	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
trim_end	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
trim_start	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
trim_start	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
TrinityToggleAll	plugin/script/bundle/Trinity/plugin/trinity.vim	/^command! -nargs=0 -bar TrinityToggleAll$/;"	c
TrinityToggleNERDTree	plugin/script/bundle/Trinity/plugin/trinity.vim	/^command! -nargs=0 -bar TrinityToggleNERDTree$/;"	c
TrinityToggleSourceExplorer	plugin/script/bundle/Trinity/plugin/trinity.vim	/^command! -nargs=0 -bar TrinityToggleSourceExplorer$/;"	c
TrinityToggleTagbar	plugin/script/bundle/Trinity/plugin/trinity.vim	/^command! -nargs=0 -bar TrinityToggleTagbar$/;"	c
TrinityToggleTagList	plugin/script/bundle/Trinity/plugin/trinity.vim	/^command! -nargs=0 -bar TrinityToggleTagList$/;"	c
TrinityUpdateWindow	plugin/script/bundle/Trinity/plugin/trinity.vim	/^command! -nargs=0 -bar TrinityUpdateWindow$/;"	c
Trinity_Debug	plugin/script/bundle/Trinity/plugin/trinity.vim	/^function! <SID>Trinity_Debug(log)$/;"	f
Trinity_GetEditWin	plugin/script/bundle/Trinity/plugin/trinity.vim	/^function! <SID>Trinity_GetEditWin()$/;"	f
Trinity_InitNERDTree	plugin/script/bundle/Trinity/plugin/trinity.vim	/^function! <SID>Trinity_InitNERDTree()$/;"	f
Trinity_InitSourceExplorer	plugin/script/bundle/Trinity/plugin/trinity.vim	/^function! <SID>Trinity_InitSourceExplorer()$/;"	f
Trinity_InitTagList	plugin/script/bundle/Trinity/plugin/trinity.vim	/^function! <SID>Trinity_InitTagList()$/;"	f
Trinity_Toggle	plugin/script/bundle/Trinity/plugin/trinity.vim	/^function! <SID>Trinity_Toggle()$/;"	f
Trinity_ToggleNERDTree	plugin/script/bundle/Trinity/plugin/trinity.vim	/^function! <SID>Trinity_ToggleNERDTree()$/;"	f
Trinity_ToggleSourceExplorer	plugin/script/bundle/Trinity/plugin/trinity.vim	/^function! <SID>Trinity_ToggleSourceExplorer()$/;"	f
Trinity_ToggleTagList	plugin/script/bundle/Trinity/plugin/trinity.vim	/^function! <SID>Trinity_ToggleTagList()$/;"	f
Trinity_UpdateStatus	plugin/script/bundle/Trinity/plugin/trinity.vim	/^function! <SID>Trinity_UpdateStatus()$/;"	f
Trinity_UpdateWindow	plugin/script/bundle/Trinity/plugin/trinity.vim	/^function! <SID>Trinity_UpdateWindow()$/;"	f
truncate	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def truncate(string, max_width):$/;"	f
truncate	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^function! s:truncate(str, width) "{{{$/;"	f
truncate	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:truncate(str, width)$/;"	f
truncate	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/async_cache.vim	/^function! s:truncate(str, width) abort "{{{$/;"	f
truncate	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate_skipping	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def truncate_skipping(string, max_width, footer, footer_len):$/;"	f
truncate_skipping	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator)$/;"	f
truncate_skipping	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_smart	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator)$/;"	f
type	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:type(value) abort$/;"	f
TypeInfo.createKinddict	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.createKinddict() abort dict$/;"	f
TypeInfo.getKind	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.getKind(kind) abort dict$/;"	f
TypeInfo.New	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.New(...) abort dict$/;"	f
UnCommentLine	plugin/script/bundle/comments/plugin/comments.vim	/^function! UnCommentLine()$/;"	f
unescape	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:unescape(str, chars) abort$/;"	f
unescape	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:unescape(str, chars) abort$/;"	f
unescape_pattern	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:unescape_pattern(str) abort$/;"	f
unescape_pattern	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:unescape_pattern(str) abort$/;"	f
uniq	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:uniq(list, ...)$/;"	f
uniq	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq_by	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
uniq_by	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
unite#kinds#vimshell_history#define	plugin/script/bundle/vimshell.vim/autoload/unite/kinds/vimshell_history.vim	/^function! unite#kinds#vimshell_history#define() abort "{{{$/;"	f
unite#sources#file_include#define	plugin/script/bundle/neocomplcache.vim/autoload/unite/sources/file_include.vim	/^function! unite#sources#file_include#define()$/;"	f
unite#sources#neocomplcache#define	plugin/script/bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#define() "{{{$/;"	f
unite#sources#neocomplcache#start_complete	plugin/script/bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#start_complete() "{{{$/;"	f
unite#sources#neocomplcache#start_quick_match	plugin/script/bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#start_quick_match() "{{{$/;"	f
unite#sources#neocomplete#define	plugin/script/bundle/neocomplete.vim/autoload/unite/sources/neocomplete.vim	/^function! unite#sources#neocomplete#define() abort "{{{$/;"	f
unite#sources#neocomplete#start_complete	plugin/script/bundle/neocomplete.vim/autoload/unite/sources/neocomplete.vim	/^function! unite#sources#neocomplete#start_complete() abort "{{{$/;"	f
unite#sources#neocomplete#start_quick_match	plugin/script/bundle/neocomplete.vim/autoload/unite/sources/neocomplete.vim	/^function! unite#sources#neocomplete#start_quick_match() abort "{{{$/;"	f
unite#sources#vimshell_external_history#define	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_external_history.vim	/^function! unite#sources#vimshell_external_history#define() abort "{{{$/;"	f
unite#sources#vimshell_history#define	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_history.vim	/^function! unite#sources#vimshell_history#define() abort "{{{$/;"	f
unite#sources#vimshell_history#start_complete	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_history.vim	/^function! unite#sources#vimshell_history#start_complete(is_insert) abort "{{{$/;"	f
unite#sources#vimshell_history#_change_histories	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_history.vim	/^function! unite#sources#vimshell_history#_change_histories(histories) abort "{{{$/;"	f
unite#sources#vimshell_zsh_complete#define	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_zsh_complete.vim	/^function! unite#sources#vimshell_zsh_complete#define() abort "{{{$/;"	f
unite#sources#vimshell_zsh_complete#start_complete	plugin/script/bundle/vimshell.vim/autoload/unite/sources/vimshell_zsh_complete.vim	/^function! unite#sources#vimshell_zsh_complete#start_complete(is_insert) abort "{{{$/;"	f
unload	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:unload() abort$/;"	f
unload	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:unload()$/;"	f
unload	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:unload() abort dict$/;"	f
unload	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:unload() abort dict$/;"	f
unshift	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:unshift(list, val)$/;"	f
unshift	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
unshift	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
UpdateMark	plugin/script/bundle/mark.vim/plugin/mark.vim	/^function! s:UpdateMark()$/;"	f
update_header	plugin/script/bundle/vim-header/autoload/header.vim	/^fun s:update_header()$/;"	f
UpDir	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:UpDir(keepState)$/;"	f
use_conceal	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! s:use_conceal() abort "{{{$/;"	f
use_previous_result	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def use_previous_result(self, context, result):$/;"	m	class:Deoplete
use_previous_result	plugin/script/bundle/neocomplete.vim/autoload/neocomplete/complete.vim	/^function! s:use_previous_result(source, context) abort "{{{$/;"	f
ValidateBookmark	plugin/script/bundle/Trinity/plugin/NERD_tree.vim	/^function! s:ValidateBookmark(bookmark)$/;"	f
variable.restore	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:variable.restore() abort$/;"	f
view_changelog	plugin/script/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:view_changelog()$/;"	f
view_log	plugin/script/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:view_log()$/;"	f
vimleave	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:vimleave() abort "{{{$/;"	f
vimoption2python	plugin/script/bundle/deoplete.nvim/autoload/deoplete/util.vim	/^function! s:vimoption2python(option) abort$/;"	f
vimshell	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^augroup vimshell$/;"	a
VimShell	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^      \\ VimShell$/;"	c
vimshell#altercmd#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/altercmd.vim	/^function! vimshell#altercmd#define(original, alternative) abort "{{{$/;"	f
vimshell#available_commands	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#available_commands(...) abort "{{{$/;"	f
vimshell#cd	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#cd(directory) abort "{{{$/;"	f
vimshell#check_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#check_prompt(...) abort "{{{$/;"	f
vimshell#commands#alias#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/alias.vim	/^function! vimshell#commands#alias#define() abort$/;"	f
vimshell#commands#bg#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/bg.vim	/^function! vimshell#commands#bg#define() abort$/;"	f
vimshell#commands#bg#init	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/bg.vim	/^function! vimshell#commands#bg#init(commands, context, options, interactive) abort "{{{$/;"	f
vimshell#commands#build#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/build.vim	/^function! vimshell#commands#build#define() abort$/;"	f
vimshell#commands#cd#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/cd.vim	/^function! vimshell#commands#cd#define() abort$/;"	f
vimshell#commands#cdup#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/cdup.vim	/^function! vimshell#commands#cdup#define() abort$/;"	f
vimshell#commands#clear#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/clear.vim	/^function! vimshell#commands#clear#define() abort$/;"	f
vimshell#commands#dirs#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/dirs.vim	/^function! vimshell#commands#dirs#define() abort$/;"	f
vimshell#commands#echo#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/echo.vim	/^function! vimshell#commands#echo#define() abort$/;"	f
vimshell#commands#eval#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/eval.vim	/^function! vimshell#commands#eval#define() abort$/;"	f
vimshell#commands#exe#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/exe.vim	/^function! vimshell#commands#exe#define() abort$/;"	f
vimshell#commands#exit#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/exit.vim	/^function! vimshell#commands#exit#define() abort$/;"	f
vimshell#commands#export#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/export.vim	/^function! vimshell#commands#export#define() abort$/;"	f
vimshell#commands#galias#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/galias.vim	/^function! vimshell#commands#galias#define() abort$/;"	f
vimshell#commands#gcd#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/gcd.vim	/^function! vimshell#commands#gcd#define() abort$/;"	f
vimshell#commands#gendoc#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/gendoc.vim	/^function! vimshell#commands#gendoc#define() abort$/;"	f
vimshell#commands#gexe#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/gexe.vim	/^function! vimshell#commands#gexe#define() abort$/;"	f
vimshell#commands#h#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/h.vim	/^function! vimshell#commands#h#define() abort$/;"	f
vimshell#commands#histdel#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/histdel.vim	/^function! vimshell#commands#histdel#define() abort$/;"	f
vimshell#commands#history#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/history.vim	/^function! vimshell#commands#history#define() abort$/;"	f
vimshell#commands#iexe#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/iexe.vim	/^function! vimshell#commands#iexe#define() abort$/;"	f
vimshell#commands#iexe#init	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/iexe.vim	/^function! vimshell#commands#iexe#init(context, interactive, new_pos, old_pos, is_insert) abort "{{{$/;"	f
vimshell#commands#less#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/less.vim	/^function! vimshell#commands#less#define() abort$/;"	f
vimshell#commands#let#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/let.vim	/^function! vimshell#commands#let#define() abort$/;"	f
vimshell#commands#ls#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/ls.vim	/^function! vimshell#commands#ls#define() abort$/;"	f
vimshell#commands#mkcd#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/mkcd.vim	/^function! vimshell#commands#mkcd#define() abort$/;"	f
vimshell#commands#nop#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/nop.vim	/^function! vimshell#commands#nop#define() abort$/;"	f
vimshell#commands#open#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/open.vim	/^function! vimshell#commands#open#define() abort$/;"	f
vimshell#commands#popd#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/popd.vim	/^function! vimshell#commands#popd#define() abort$/;"	f
vimshell#commands#pwd#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/pwd.vim	/^function! vimshell#commands#pwd#define() abort$/;"	f
vimshell#commands#repeat#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/repeat.vim	/^function! vimshell#commands#repeat#define() abort$/;"	f
vimshell#commands#scp#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/scp.vim	/^function! vimshell#commands#scp#define() abort$/;"	f
vimshell#commands#sexe#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/sexe.vim	/^function! vimshell#commands#sexe#define() abort$/;"	f
vimshell#commands#shell#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/shell.vim	/^function! vimshell#commands#shell#define() abort$/;"	f
vimshell#commands#source#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/source.vim	/^function! vimshell#commands#source#define() abort$/;"	f
vimshell#commands#source_shellcmd#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/source_shellcmd.vim	/^function! vimshell#commands#source_shellcmd#define() abort$/;"	f
vimshell#commands#ssh#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/ssh.vim	/^function! vimshell#commands#ssh#define() abort$/;"	f
vimshell#commands#sudo#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/sudo.vim	/^function! vimshell#commands#sudo#define() abort$/;"	f
vimshell#commands#time#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/time.vim	/^function! vimshell#commands#time#define() abort$/;"	f
vimshell#commands#vexe#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/vexe.vim	/^function! vimshell#commands#vexe#define() abort$/;"	f
vimshell#commands#view#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/view.vim	/^function! vimshell#commands#view#define() abort$/;"	f
vimshell#commands#vim#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/vim.vim	/^function! vimshell#commands#vim#define() abort$/;"	f
vimshell#commands#vimdiff#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/vimdiff.vim	/^function! vimshell#commands#vimdiff#define() abort$/;"	f
vimshell#commands#vimsh#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/vimsh.vim	/^function! vimshell#commands#vimsh#define() abort$/;"	f
vimshell#commands#whereis#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/whereis.vim	/^function! vimshell#commands#whereis#define() abort$/;"	f
vimshell#commands#which#define	plugin/script/bundle/vimshell.vim/autoload/vimshell/commands/which.vim	/^function! vimshell#commands#which#define() abort$/;"	f
vimshell#complete	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#complete(arglead, cmdline, cursorpos) abort "{{{$/;"	f
vimshell#complete#gather_candidates	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete.vim	/^function! vimshell#complete#gather_candidates(complete_str) abort "{{{$/;"	f
vimshell#complete#get_keyword_position	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete.vim	/^function! vimshell#complete#get_keyword_position() abort "{{{$/;"	f
vimshell#complete#helper#aliases	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#aliases(cur_keyword_str) abort "{{{$/;"	f
vimshell#complete#helper#args	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#args(command, args) abort "{{{$/;"	f
vimshell#complete#helper#buffers	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#buffers(cur_keyword_str) abort "{{{$/;"	f
vimshell#complete#helper#call_omnifunc	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#call_omnifunc(omnifunc) abort "{{{$/;"	f
vimshell#complete#helper#cdpath_directories	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#cdpath_directories(cur_keyword_str) abort "{{{$/;"	f
vimshell#complete#helper#command_args	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#command_args(args) abort "{{{$/;"	f
vimshell#complete#helper#compare_rank	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#compare_rank(i1, i2) abort "{{{$/;"	f
vimshell#complete#helper#directories	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#directories(cur_keyword_str) abort "{{{$/;"	f
vimshell#complete#helper#directory_stack	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#directory_stack(cur_keyword_str) abort "{{{$/;"	f
vimshell#complete#helper#environments	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#environments(cur_keyword_str) abort "{{{$/;"	f
vimshell#complete#helper#executables	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#executables(cur_keyword_str, ...) abort "{{{$/;"	f
vimshell#complete#helper#files	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#files(cur_keyword_str, ...) abort "{{{$/;"	f
vimshell#complete#helper#get_files	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#get_files(path, complete_str) abort "{{{$/;"	f
vimshell#complete#helper#internals	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#internals(cur_keyword_str) abort "{{{$/;"	f
vimshell#complete#helper#keyword_filter	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#keyword_filter(list, cur_keyword_str) abort "{{{$/;"	f
vimshell#complete#helper#keyword_simple_filter	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#keyword_simple_filter(list, cur_keyword_str) abort "{{{$/;"	f
vimshell#complete#helper#restore_omnifunc	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#restore_omnifunc(omnifunc) abort "{{{$/;"	f
vimshell#complete#helper#variables	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete/helper.vim	/^function! vimshell#complete#helper#variables(cur_keyword_str) abort "{{{$/;"	f
vimshell#complete#omnifunc	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete.vim	/^function! vimshell#complete#omnifunc(findstart, base) abort "{{{$/;"	f
vimshell#complete#start	plugin/script/bundle/vimshell.vim/autoload/vimshell/complete.vim	/^function! vimshell#complete#start() abort "{{{$/;"	f
vimshell#echo_error	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#echo_error(string) abort "{{{$/;"	f
vimshell#error_line	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#error_line(fd, string) abort "{{{$/;"	f
vimshell#execute	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#execute(cmdline, ...) abort "{{{$/;"	f
vimshell#execute_async	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#execute_async(cmdline, ...) abort "{{{$/;"	f
vimshell#execute_current_line	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#execute_current_line(is_insert) abort "{{{$/;"	f
vimshell#get_context	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#get_context() abort "{{{$/;"	f
vimshell#get_cur_line	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#get_cur_line() abort "{{{$/;"	f
vimshell#get_cur_text	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#get_cur_text() abort "{{{$/;"	f
vimshell#get_data_directory	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#get_data_directory() abort "{{{$/;"	f
vimshell#get_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#get_prompt(...) abort "{{{$/;"	f
vimshell#get_prompt_length	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#get_prompt_length(...) abort "{{{$/;"	f
vimshell#get_right_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#get_right_prompt() abort "{{{$/;"	f
vimshell#get_secondary_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#get_secondary_prompt() abort "{{{$/;"	f
vimshell#get_status_string	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#get_status_string() abort "{{{$/;"	f
vimshell#get_user_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#get_user_prompt() abort "{{{$/;"	f
vimshell#handlers#_on_bufwin_enter	plugin/script/bundle/vimshell.vim/autoload/vimshell/handlers.vim	/^function! vimshell#handlers#_on_bufwin_enter(bufnr) abort "{{{$/;"	f
vimshell#handlers#_restore_statusline	plugin/script/bundle/vimshell.vim/autoload/vimshell/handlers.vim	/^function! vimshell#handlers#_restore_statusline() abort  "{{{$/;"	f
vimshell#help#get_cached_doc	plugin/script/bundle/vimshell.vim/autoload/vimshell/help.vim	/^function! vimshell#help#get_cached_doc() abort "{{{$/;"	f
vimshell#help#init	plugin/script/bundle/vimshell.vim/autoload/vimshell/help.vim	/^function! vimshell#help#init() abort "{{{$/;"	f
vimshell#help#set_cached_doc	plugin/script/bundle/vimshell.vim/autoload/vimshell/help.vim	/^function! vimshell#help#set_cached_doc(cache) abort "{{{$/;"	f
vimshell#helpers#check_cursor_is_end	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#check_cursor_is_end() abort "{{{$/;"	f
vimshell#helpers#complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#complete(arglead, cmdline, cursorpos) abort "{{{$/;"	f
vimshell#helpers#execute	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#execute(cmdline, ...) abort "{{{$/;"	f
vimshell#helpers#execute_async	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#execute_async(cmdline, ...) abort "{{{$/;"	f
vimshell#helpers#execute_internal_command	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#execute_internal_command(command, args, context) abort "{{{$/;"	f
vimshell#helpers#get_alias	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#get_alias(name) abort "{{{$/;"	f
vimshell#helpers#get_alias_pattern	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#get_alias_pattern() abort "{{{$/;"	f
vimshell#helpers#get_command_path	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#get_command_path(program) abort "{{{$/;"	f
vimshell#helpers#get_current_args	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#get_current_args(...) abort "{{{$/;"	f
vimshell#helpers#get_editor_name	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#get_editor_name() abort "{{{$/;"	f
vimshell#helpers#get_galias	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#get_galias(name) abort "{{{$/;"	f
vimshell#helpers#get_program_pattern	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#get_program_pattern() abort "{{{$/;"	f
vimshell#helpers#get_winwidth	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#get_winwidth() abort "{{{$/;"	f
vimshell#helpers#imdisable	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#imdisable() abort "{{{$/;"	f
vimshell#helpers#restore_pos	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#restore_pos(pos) abort "{{{$/;"	f
vimshell#helpers#set_alias	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#set_alias(name, value) abort "{{{$/;"	f
vimshell#helpers#set_galias	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#set_galias(name, value) abort "{{{$/;"	f
vimshell#helpers#split	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#split(command) abort "{{{$/;"	f
vimshell#helpers#vimshell_execute_complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/helpers.vim	/^function! vimshell#helpers#vimshell_execute_complete(arglead, cmdline, cursorpos) abort "{{{$/;"	f
vimshell#history#append	plugin/script/bundle/vimshell.vim/autoload/vimshell/history.vim	/^function! vimshell#history#append(command) abort "{{{$/;"	f
vimshell#history#get_history_path	plugin/script/bundle/vimshell.vim/autoload/vimshell/history.vim	/^function! vimshell#history#get_history_path() abort "{{{$/;"	f
vimshell#history#read	plugin/script/bundle/vimshell.vim/autoload/vimshell/history.vim	/^function! vimshell#history#read(...) abort "{{{$/;"	f
vimshell#history#write	plugin/script/bundle/vimshell.vim/autoload/vimshell/history.vim	/^function! vimshell#history#write(list, ...) abort "{{{$/;"	f
vimshell#hook#add	plugin/script/bundle/vimshell.vim/autoload/vimshell/hook.vim	/^function! vimshell#hook#add(hook_point, hook_name, func) abort "{{{$/;"	f
vimshell#hook#call	plugin/script/bundle/vimshell.vim/autoload/vimshell/hook.vim	/^function! vimshell#hook#call(hook_point, context, args) abort "{{{$/;"	f
vimshell#hook#call_filter	plugin/script/bundle/vimshell.vim/autoload/vimshell/hook.vim	/^function! vimshell#hook#call_filter(hook_point, context, cmdline) abort "{{{$/;"	f
vimshell#hook#get	plugin/script/bundle/vimshell.vim/autoload/vimshell/hook.vim	/^function! vimshell#hook#get(hook_point) abort "{{{$/;"	f
vimshell#hook#remove	plugin/script/bundle/vimshell.vim/autoload/vimshell/hook.vim	/^function! vimshell#hook#remove(hook_point, hook_name) abort "{{{$/;"	f
vimshell#hook#set	plugin/script/bundle/vimshell.vim/autoload/vimshell/hook.vim	/^function! vimshell#hook#set(hook_point, func_list) abort "{{{$/;"	f
vimshell#init#tab_variable	plugin/script/bundle/vimshell.vim/autoload/vimshell/init.vim	/^function! vimshell#init#tab_variable() abort "{{{$/;"	f
vimshell#init#_context	plugin/script/bundle/vimshell.vim/autoload/vimshell/init.vim	/^function! vimshell#init#_context(context) abort "{{{$/;"	f
vimshell#init#_default_settings	plugin/script/bundle/vimshell.vim/autoload/vimshell/init.vim	/^function! vimshell#init#_default_settings() abort "{{{$/;"	f
vimshell#init#_internal_commands	plugin/script/bundle/vimshell.vim/autoload/vimshell/init.vim	/^function! vimshell#init#_internal_commands(command) abort "{{{$/;"	f
vimshell#init#_start	plugin/script/bundle/vimshell.vim/autoload/vimshell/init.vim	/^function! vimshell#init#_start(path, ...) abort "{{{$/;"	f
vimshell#interactive#decode_signal	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#decode_signal(signal) abort$/;"	f
vimshell#interactive#error_buffer	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#error_buffer(fd, string) abort "{{{$/;"	f
vimshell#interactive#execute_process_out	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#execute_process_out(is_insert) abort "{{{$/;"	f
vimshell#interactive#execute_pty_inout	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#execute_pty_inout(is_insert) abort "{{{$/;"	f
vimshell#interactive#exit	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#exit() abort "{{{$/;"	f
vimshell#interactive#force_exit	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#force_exit() abort "{{{$/;"	f
vimshell#interactive#get_cur_line	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#get_cur_line(line, ...) abort "{{{$/;"	f
vimshell#interactive#get_cur_text	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#get_cur_text() abort "{{{$/;"	f
vimshell#interactive#get_default_encoding	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#get_default_encoding(commands) abort "{{{$/;"	f
vimshell#interactive#get_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#get_prompt(...) abort "{{{$/;"	f
vimshell#interactive#hang_up	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#hang_up(afile) abort "{{{$/;"	f
vimshell#interactive#iexe_send_string	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#iexe_send_string(string, is_insert, ...) abort "{{{$/;"	f
vimshell#interactive#init	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#init() abort "{{{$/;"	f
vimshell#interactive#print_buffer	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#print_buffer(fd, string) abort "{{{$/;"	f
vimshell#interactive#quit_buffer	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#quit_buffer() abort "{{{$/;"	f
vimshell#interactive#read	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#read(fd) abort "{{{$/;"	f
vimshell#interactive#send	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#send(expr) abort "{{{$/;"	f
vimshell#interactive#send_char	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#send_char(char) abort "{{{$/;"	f
vimshell#interactive#send_input	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#send_input() abort "{{{$/;"	f
vimshell#interactive#send_region	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#send_region(line1, line2, string) abort "{{{$/;"	f
vimshell#interactive#send_string	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#send_string(...) abort "{{{$/;"	f
vimshell#interactive#set_send_buffer	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! vimshell#interactive#set_send_buffer(bufname) abort "{{{$/;"	f
vimshell#int_mappings#clear	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! vimshell#int_mappings#clear() abort "{{{$/;"	f
vimshell#int_mappings#command_complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! vimshell#int_mappings#command_complete() abort "{{{$/;"	f
vimshell#int_mappings#define_default_mappings	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! vimshell#int_mappings#define_default_mappings() abort "{{{$/;"	f
vimshell#int_mappings#execute_line	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! vimshell#int_mappings#execute_line(is_insert) abort "{{{$/;"	f
vimshell#int_mappings#_insert_head	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! vimshell#int_mappings#_insert_head() abort "{{{$/;"	f
vimshell#int_mappings#_paste_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/int_mappings.vim	/^function! vimshell#int_mappings#_paste_prompt() abort "{{{$/;"	f
vimshell#is_interactive	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#is_interactive() abort "{{{$/;"	f
vimshell#mappings#define_default_mappings	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! vimshell#mappings#define_default_mappings() abort "{{{$/;"	f
vimshell#mappings#execute_line	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! vimshell#mappings#execute_line(is_insert) abort "{{{$/;"	f
vimshell#mappings#smart_map	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! vimshell#mappings#smart_map(vimshell_map, execute_map) abort$/;"	f
vimshell#mappings#_paste_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/mappings.vim	/^function! vimshell#mappings#_paste_prompt() abort "{{{$/;"	f
vimshell#next_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#next_prompt(context, ...) abort "{{{$/;"	f
vimshell#open	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#open(filename) abort "{{{$/;"	f
vimshell#parser#check_script	plugin/script/bundle/vimshell.vim/autoload/vimshell/parser.vim	/^function! vimshell#parser#check_script(script) abort "{{{$/;"	f
vimshell#parser#check_wildcard	plugin/script/bundle/vimshell.vim/autoload/vimshell/parser.vim	/^function! vimshell#parser#check_wildcard() abort "{{{$/;"	f
vimshell#parser#eval_script	plugin/script/bundle/vimshell.vim/autoload/vimshell/parser.vim	/^function! vimshell#parser#eval_script(script, context) abort "{{{$/;"	f
vimshell#parser#execute_command	plugin/script/bundle/vimshell.vim/autoload/vimshell/parser.vim	/^function! vimshell#parser#execute_command(commands, context) abort "{{{$/;"	f
vimshell#parser#execute_continuation	plugin/script/bundle/vimshell.vim/autoload/vimshell/parser.vim	/^function! vimshell#parser#execute_continuation(is_insert) abort "{{{$/;"	f
vimshell#parser#getopt	plugin/script/bundle/vimshell.vim/autoload/vimshell/parser.vim	/^function! vimshell#parser#getopt(args, optsyntax, ...) abort "{{{$/;"	f
vimshell#parser#parse_alias	plugin/script/bundle/vimshell.vim/autoload/vimshell/parser.vim	/^function! vimshell#parser#parse_alias(statement) abort "{{{$/;"	f
vimshell#parser#parse_program	plugin/script/bundle/vimshell.vim/autoload/vimshell/parser.vim	/^function! vimshell#parser#parse_program(statement) abort "{{{$/;"	f
vimshell#print	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#print(fd, string) abort "{{{$/;"	f
vimshell#print_line	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#print_line(fd, string) abort "{{{$/;"	f
vimshell#print_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#print_prompt(...) abort "{{{$/;"	f
vimshell#print_secondary_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#print_secondary_prompt() abort "{{{$/;"	f
vimshell#set_alias	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#set_alias(name, value) abort "{{{$/;"	f
vimshell#set_context	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#set_context(context) abort "{{{$/;"	f
vimshell#set_execute_file	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#set_execute_file(exts, program) abort "{{{$/;"	f
vimshell#set_galias	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#set_galias(name, value) abort "{{{$/;"	f
vimshell#set_syntax	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#set_syntax(syntax_name) abort "{{{$/;"	f
vimshell#start_insert	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#start_insert(...) abort "{{{$/;"	f
vimshell#terminal#clear_highlight	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! vimshell#terminal#clear_highlight() abort "{{{$/;"	f
vimshell#terminal#get_col	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! vimshell#terminal#get_col(line, start_virtual, start_real, max_col, is_virtual) abort "{{{$/;"	f
vimshell#terminal#init	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! vimshell#terminal#init() abort "{{{$/;"	f
vimshell#terminal#init_highlight	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! vimshell#terminal#init_highlight() abort "{{{$/;"	f
vimshell#terminal#print	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! vimshell#terminal#print(string, is_error) abort "{{{$/;"	f
vimshell#terminal#restore_title	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! vimshell#terminal#restore_title() abort "{{{$/;"	f
vimshell#terminal#set_title	plugin/script/bundle/vimshell.vim/autoload/vimshell/terminal.vim	/^function! vimshell#terminal#set_title() abort "{{{$/;"	f
vimshell#term_mappings#define_default_mappings	plugin/script/bundle/vimshell.vim/autoload/vimshell/term_mappings.vim	/^function! vimshell#term_mappings#define_default_mappings() abort "{{{$/;"	f
vimshell#term_mappings#send_key	plugin/script/bundle/vimshell.vim/autoload/vimshell/term_mappings.vim	/^function! vimshell#term_mappings#send_key(key) abort "{{{$/;"	f
vimshell#term_mappings#send_keys	plugin/script/bundle/vimshell.vim/autoload/vimshell/term_mappings.vim	/^function! vimshell#term_mappings#send_keys(keys) abort "{{{$/;"	f
vimshell#util#alternate_buffer	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#alternate_buffer() abort "{{{$/;"	f
vimshell#util#delete_buffer	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#delete_buffer(...) abort "{{{$/;"	f
vimshell#util#disable_auto_complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#disable_auto_complete() abort "{{{$/;"	f
vimshell#util#enable_auto_complete	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#enable_auto_complete() abort "{{{$/;"	f
vimshell#util#escape_file_searching	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#escape_file_searching(...) abort "{{{$/;"	f
vimshell#util#escape_match	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#escape_match(str) abort "{{{$/;"	f
vimshell#util#expand	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#expand(path) abort "{{{$/;"	f
vimshell#util#get_vimshell_winnr	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#get_vimshell_winnr(buffer_name) abort "{{{$/;"	f
vimshell#util#get_vital	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#get_vital() abort "{{{$/;"	f
vimshell#util#glob	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#glob(pattern, ...) abort "{{{$/;"	f
vimshell#util#has_vimproc	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#has_vimproc(...) abort "{{{$/;"	f
vimshell#util#head_match	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#head_match(checkstr, headstr) abort "{{{$/;"	f
vimshell#util#input_yesno	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#input_yesno(message) abort "{{{$/;"	f
vimshell#util#is_auto_delimiter	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#is_auto_delimiter() abort "{{{$/;"	f
vimshell#util#is_auto_select	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#is_auto_select() abort "{{{$/;"	f
vimshell#util#is_cmdwin	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#is_cmdwin() abort "{{{$/;"	f
vimshell#util#is_complete_hold	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#is_complete_hold() abort "{{{$/;"	f
vimshell#util#is_sudo	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#is_sudo() abort "{{{$/;"	f
vimshell#util#is_windows	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#is_windows(...) abort "{{{$/;"	f
vimshell#util#path2project_directory	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#path2project_directory(...) abort$/;"	f
vimshell#util#resolve	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#resolve(filename) abort "{{{$/;"	f
vimshell#util#restore_variables	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#restore_variables(variables) abort "{{{$/;"	f
vimshell#util#set_default	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#set_default(var, val, ...) abort "{{{$/;"	f
vimshell#util#set_default_dictionary_helper	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#set_default_dictionary_helper(variable, keys, value) abort "{{{$/;"	f
vimshell#util#set_dictionary_helper	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#set_dictionary_helper(variable, keys, value) abort "{{{$/;"	f
vimshell#util#set_variables	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#set_variables(variables) abort "{{{$/;"	f
vimshell#util#sort_by	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#sort_by(...) abort "{{{$/;"	f
vimshell#util#strchars	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#strchars(...) abort "{{{$/;"	f
vimshell#util#strwidthpart	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#strwidthpart(...) abort "{{{$/;"	f
vimshell#util#strwidthpart_len	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#strwidthpart_len(str, width) abort "{{{$/;"	f
vimshell#util#strwidthpart_len_reverse	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#strwidthpart_len_reverse(str, width) abort "{{{$/;"	f
vimshell#util#strwidthpart_reverse	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#strwidthpart_reverse(...) abort "{{{$/;"	f
vimshell#util#substitute_path_separator	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#substitute_path_separator(...) abort "{{{$/;"	f
vimshell#util#system	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#system(...) abort "{{{$/;"	f
vimshell#util#tail_match	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#tail_match(checkstr, tailstr) abort "{{{$/;"	f
vimshell#util#truncate	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#truncate(...) abort "{{{$/;"	f
vimshell#util#truncate_smart	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#truncate_smart(...) abort "{{{$/;"	f
vimshell#util#uniq	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#uniq(...) abort "{{{$/;"	f
vimshell#util#uniq_by	plugin/script/bundle/vimshell.vim/autoload/vimshell/util.vim	/^function! vimshell#util#uniq_by(...) abort "{{{$/;"	f
vimshell#variables#internal_commands	plugin/script/bundle/vimshell.vim/autoload/vimshell/variables.vim	/^function! vimshell#variables#internal_commands() abort "{{{$/;"	f
vimshell#variables#options	plugin/script/bundle/vimshell.vim/autoload/vimshell/variables.vim	/^function! vimshell#variables#options() abort "{{{$/;"	f
vimshell#version	plugin/script/bundle/vimshell.vim/autoload/vimshell.vim	/^function! vimshell#version() abort "{{{$/;"	f
vimshell#view#_cd	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_cd(directory) abort "{{{$/;"	f
vimshell#view#_check_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_check_prompt(...) abort "{{{$/;"	f
vimshell#view#_check_secondary_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_check_secondary_prompt(...) abort "{{{$/;"	f
vimshell#view#_check_user_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_check_user_prompt(...) abort "{{{$/;"	f
vimshell#view#_close	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_close(buffer_name) abort "{{{$/;"	f
vimshell#view#_get_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_get_prompt(...) abort "{{{$/;"	f
vimshell#view#_get_prompt_command	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_get_prompt_command(...) abort "{{{$/;"	f
vimshell#view#_next_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_next_prompt(context, ...) abort "{{{$/;"	f
vimshell#view#_print_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_print_prompt(...) abort "{{{$/;"	f
vimshell#view#_print_secondary_prompt	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_print_secondary_prompt() abort "{{{$/;"	f
vimshell#view#_set_highlight	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_set_highlight() abort "{{{$/;"	f
vimshell#view#_set_prompt_command	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_set_prompt_command(string) abort "{{{$/;"	f
vimshell#view#_simple_insert	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_simple_insert(...) abort "{{{$/;"	f
vimshell#view#_start_insert	plugin/script/bundle/vimshell.vim/autoload/vimshell/view.vim	/^function! vimshell#view#_start_insert(...) abort "{{{$/;"	f
VimShellBufferDir	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^      \\ VimShellBufferDir$/;"	c
VimShellClose	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^      \\ VimShellClose$/;"	c
VimShellCreate	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^      \\ VimShellCreate$/;"	c
VimShellCurrentDir	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^      \\ VimShellCurrentDir$/;"	c
VimShellExecute	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^      \\ VimShellExecute$/;"	c
VimShellInteractive	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^      \\ VimShellInteractive$/;"	c
VimShellPop	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^      \\ VimShellPop$/;"	c
VimShellSendBuffer	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^      \\ VimShellSendBuffer$/;"	c
VimShellSendString	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^      \\ VimShellSendString$/;"	c
VimShellTab	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^      \\ VimShellTab$/;"	c
vimshell_execute	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^function! s:vimshell_execute(args) abort "{{{$/;"	f
vimshell_interactive	plugin/script/bundle/vimshell.vim/plugin/vimshell.vim	/^function! s:vimshell_interactive(args) abort "{{{$/;"	f
vimtool_finish	build_all.sh	/^function vimtool_finish()$/;"	f
vital#	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! vital#{s:self_version}#new()$/;"	f
vital#	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#of	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital#of	plugin/script/bundle/neocomplcache.vim/autoload/vital.vim	/^function! vital#of(name)$/;"	f
vital#of	plugin/script/bundle/neocomplete.vim/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital#of	plugin/script/bundle/vimshell.vim/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital#_neocomplete#Data#List#import	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^  function! vital#_neocomplete#Data#List#import() abort$/;"	f
vital#_neocomplete#Data#String#import	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^  function! vital#_neocomplete#Data#String#import() abort$/;"	f
vital#_neocomplete#Prelude#import	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^  function! vital#_neocomplete#Prelude#import() abort$/;"	f
vital#_neocomplete#Process#import	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^  function! vital#_neocomplete#Process#import() abort$/;"	f
vital#_neocomplete#System#Cache#Deprecated#import	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^  function! vital#_neocomplete#System#Cache#Deprecated#import() abort$/;"	f
vital#_vimshell#Data#Dict#import	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^  function! vital#_vimshell#Data#Dict#import() abort$/;"	f
vital#_vimshell#Data#List#import	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^  function! vital#_vimshell#Data#List#import() abort$/;"	f
vital#_vimshell#Data#String#import	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^  function! vital#_vimshell#Data#String#import() abort$/;"	f
vital#_vimshell#Prelude#import	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^  function! vital#_vimshell#Prelude#import() abort$/;"	f
vital#_vimshell#Process#import	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^  function! vital#_vimshell#Process#import() abort$/;"	f
vital#_vimshell#Vim#Buffer#import	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Buffer.vim	/^  function! vital#_vimshell#Vim#Buffer#import() abort$/;"	f
vital#_vimshell#Vim#Guard#import	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^  function! vital#_vimshell#Vim#Guard#import() abort$/;"	f
vital_files	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:vital_files() abort$/;"	f
vital_files	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:vital_files() abort$/;"	f
vital_files	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:vital_files() abort$/;"	f
vundle#begin	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^func! vundle#begin(...) abort$/;"	f
vundle#bundles	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#bundles = []$/;"	v
vundle#bundle_dir	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#bundle_dir = expand('$HOME\/.vim\/bundle', 1)$/;"	v
vundle#config#activate_bundles	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#activate_bundles()$/;"	f
vundle#config#bundle	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#bundle(arg, ...)$/;"	f
vundle#config#init	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#init()$/;"	f
vundle#config#init_bundle	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#init_bundle(name, opts)$/;"	f
vundle#config#require	plugin/script/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#require(bundles) abort$/;"	f
vundle#end	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^func! vundle#end(...) abort$/;"	f
vundle#installer#clean	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#clean(bang) abort$/;"	f
vundle#installer#delete	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#delete(bang, dir_name) abort$/;"	f
vundle#installer#docs	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#docs() abort$/;"	f
vundle#installer#helptags	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#helptags(bundles) abort$/;"	f
vundle#installer#install	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#install(bang, name) abort$/;"	f
vundle#installer#install_and_require	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#install_and_require(bang, name) abort$/;"	f
vundle#installer#list	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#list(bang) abort$/;"	f
vundle#installer#new	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#new(bang, ...) abort$/;"	f
vundle#installer#run	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#run(func_name, name, ...) abort$/;"	f
vundle#installer#shellesc	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#shellesc(cmd) abort$/;"	f
vundle#installer#shellesc_cd	plugin/script/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#shellesc_cd(cmd) abort$/;"	f
vundle#lazy_load	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#lazy_load = 0$/;"	v
vundle#log	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#log = []$/;"	v
vundle#rc	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^func! vundle#rc(...) abort$/;"	f
vundle#scripts#all	plugin/script/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#all(bang, ...)$/;"	f
vundle#scripts#bundle_names	plugin/script/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#bundle_names(names)$/;"	f
vundle#scripts#complete	plugin/script/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#complete(a,c,d)$/;"	f
vundle#scripts#reload	plugin/script/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#reload() abort$/;"	f
vundle#scripts#view	plugin/script/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#view(title, headers, results)$/;"	f
vundle#updated_bundles	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#updated_bundles = []$/;"	v
VundleClean	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang                                          VundleClean   PluginClean<bang>$/;"	c
VundleDocs	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0                                                VundleDocs    PluginDocs$/;"	c
VundleInstall	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleInstall PluginInstall<bang> <args>$/;"	c
VundleSearch	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleSearch  PluginSearch<bang> <args>$/;"	c
VundleUpdate	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com!                                                         VundleUpdate  PluginInstall!$/;"	c
VundleUpdate	plugin/script/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=*       -complete=custom,vundle#scripts#complete VundleUpdate  PluginInstall! <args>$/;"	c
warn	plugin/script/autoload/pathogen.vim	/^function! s:warn(msg) abort$/;"	f
warn	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    warn = warning$/;"	v	class:LoggingMixin
warning	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def warning(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
warning	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:warning(msg) abort$/;"	f
wcswidth	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^  function! s:wcswidth(str) "{{{$/;"	f
wcswidth	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^  function! s:wcswidth(str)$/;"	f
wcswidth	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcwidth	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^  function! s:wcwidth(str) "{{{$/;"	f
wcwidth	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^  function! s:wcwidth(ucs) "{{{$/;"	f
windo	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	noautocmd windo call s:WindowCheck(0)$/;"	m
windo	plugin/script/bundle/asyncrun.vim/plugin/asyncrun.vim	/^	noautocmd windo call s:WindowCheck(1)$/;"	m
winenter	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:winenter() abort "{{{$/;"	f
winleave	plugin/script/bundle/vimshell.vim/autoload/vimshell/interactive.vim	/^function! s:winleave(bufname) abort "{{{$/;"	f
with_index	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:with_index(list, ...)$/;"	f
with_index	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
with_index	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
word_caching	plugin/script/bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:word_caching(srcname) "{{{$/;"	f
wrap	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:wrap(str,...)$/;"	f
wrap	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrapper	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def wrapper(self, *args, **kwargs):$/;"	f	function:logmethod
wrap_exception	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/command.vim	/^function! s:wrap_exception(exception, lnum) abort$/;"	f
writefile	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:writefile(cache_dir, filename, list)$/;"	f
writefile	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
zip	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:zip(...)$/;"	f
zip	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip_fill	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:zip_fill(xs, ys, filler)$/;"	f
zip_fill	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zip_fill	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
ZoomWindow	plugin/script/bundle/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
_build_module	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:_build_module(sid) abort$/;"	f
_build_module	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:_build_module(sid)$/;"	f
_cache.get	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:_cache.get(key) abort$/;"	f
_cache.has	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:_cache.has(key) abort$/;"	f
_cache.return	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:_cache.return(key, value) abort$/;"	f
_capture	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:_capture(command) abort$/;"	f
_capture_lines	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:_capture_lines(command) abort$/;"	f
_compare	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:_compare(a, b)$/;"	f
_compare	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_create_hash	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:_create_hash(dir, str)$/;"	f
_create_hash	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
_default_compare	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_default_compare	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_dot_to_sharp	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
_dot_to_sharp	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
_encode_name	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:_encode_name(cache_dir, filename)$/;"	f
_encode_name	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
_exists_autoload_func_with_source	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_exists_autoload_func_with_source(funcname) abort$/;"	f
_exists_autoload_func_with_source	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_exists_autoload_func_with_source(funcname) abort$/;"	f
_extract_files	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
_extract_files	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
_extract_files	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
_file2module	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:_file2module(file) abort$/;"	f
_file2module	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_file2module(file) abort$/;"	f
_file2module	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_file2module(file) abort$/;"	f
_foldl	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^function! s:_foldl(f, init, xs) abort$/;"	f
_function	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^  function! s:_function(fstr) abort$/;"	f
_function	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^  function! s:_function(fstr) abort$/;"	f
_get_builtin_module	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
_get_builtin_module	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
_get_functions	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_module	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_get_module(name) abort dict$/;"	f
_get_module	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_get_module(name) abort dict$/;"	f
_get_module_path	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_module_path	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:_get_module_path(name)$/;"	f
_get_sid_by_script	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_global_vital_files	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:_global_vital_files() abort$/;"	f
_global_vital_files	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_global_vital_files() abort$/;"	f
_global_vital_files	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_global_vital_files() abort$/;"	f
_import	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:_import(name) abort$/;"	f
_import	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:_import(name, scripts)$/;"	f
_import	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_import(name) abort dict$/;"	f
_import	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_import(name) abort dict$/;"	f
_import_func_name	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
_import_func_name	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
_is_absolute_path	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_absolute_path	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^  function! s:_is_absolute_path(path)$/;"	f
_is_comparable	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/themis/helper/assert.vim	/^function! s:_is_comparable(tname1, tname2) abort$/;"	f
_logger	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    _logger = None  # type: logging.Logger$/;"	v	class:LoggingMixin
_makeArgumentList	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:_makeArgumentList()$/;"	f
_makeArgumentString	plugin/script/bundle/genutils/autoload/genutils.vim	/^function! s:_makeArgumentString()$/;"	f
_max_by	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^function! s:_max_by(dict, expr) abort$/;"	f
_module_path	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_module_path(name) abort$/;"	f
_module_path	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_module_path(name) abort$/;"	f
_module_sid	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_module_sid(name) abort$/;"	f
_module_sid	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_module_sid(name) abort$/;"	f
_module_sid_base_dir	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
_module_sid_base_dir	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
_new_environment	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:_new_environment(name) abort$/;"	f
_new_instance	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:_new_instance(instance, ...) abort$/;"	f
_new_option	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:_new_option(name) abort$/;"	f
_new_register	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:_new_register(name) abort$/;"	f
_new_variable	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:_new_variable(name, ...) abort$/;"	f
_pad_with_char	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_pad_with_char	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_path2project_directory_git	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_git	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_others	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_others	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_svn	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_path2project_directory_svn	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_redir	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:_redir(cmd) abort$/;"	f
_redir	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:_redir(cmd)$/;"	f
_redir	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_redir(cmd) abort$/;"	f
_redir	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_redir(cmd) abort$/;"	f
_replace	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:_replace(str, from, to, flags)$/;"	f
_replace	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_replace	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_runtime	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_runtime(path) abort$/;"	f
_runtime	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_runtime(path) abort$/;"	f
_scripts	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:_scripts()$/;"	f
_self_vital_files	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^function! s:_self_vital_files() abort$/;"	f
_self_vital_files	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_self_vital_files() abort$/;"	f
_self_vital_files	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_self_vital_files() abort$/;"	f
_sfuncname	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
_sfuncname	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
_sfuncname	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
_sid	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:_sid(abspath, scriptnames) abort$/;"	f
_SID	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^  function! s:_SID() abort$/;"	f
_sid	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
_SID	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/List.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Process.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^  function! s:_SID() abort$/;"	f
_sid	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
_SID	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/Dict.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/List.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Process.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Buffer.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^  function! s:_SID() abort$/;"	f
_source	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:_source(path) abort$/;"	f
_source	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^function! s:_source(path) abort$/;"	f
_source	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^function! s:_source(path) abort$/;"	f
_split_by_wcswidth	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:_split_by_wcswidth(body, x)$/;"	f
_split_by_wcswidth	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth_once	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x)$/;"	f
_split_by_wcswidth_once	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_split_by_wcswidth_once	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_throw	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:_throw(message) abort$/;"	f
_throw	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:_throw(msg) abort$/;"	f
_undefined	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:_undefined() abort$/;"	f
_unify_path	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^  function! s:_unify_path(path) abort$/;"	f
_unify_path	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis/Vim/ScriptLocal.vim	/^function! s:_unify_path(path) abort$/;"	f
_unify_path	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^  function! s:_unify_path(path)$/;"	f
_unify_path	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^  function! s:_unify_path(path) abort$/;"	f
_unify_path	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^  function! s:_unify_path(path) abort$/;"	f
_uniq	plugin/script/bundle/deoplete.nvim/vim-themis/autoload/vital/_themis.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	plugin/script/bundle/neocomplete.vim/autoload/vital/neocomplete.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	plugin/script/bundle/vimshell.vim/autoload/vital/vimshell.vim	/^  function! s:_uniq(list) abort$/;"	f
_vital_created	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_vital_created(module) abort$/;"	f
_vital_created	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:_vital_created(module) abort$/;"	f
_vital_created	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:_vital_created(module) abort$/;"	f
_vital_depends	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Buffer.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_loaded	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Vim/Guard.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_warn_deprecated	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
_warn_deprecated	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
_wcwidth	plugin/script/bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^  function! s:_wcwidth(ucs)$/;"	f
_wcwidth	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	plugin/script/bundle/neocomplete.vim/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	plugin/script/bundle/vimshell.vim/autoload/vital/_vimshell/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
__get_dictionaries	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def __get_dictionaries(self, context):$/;"	m	class:Source	file:
__get_tagfiles	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def __get_tagfiles(self, context):$/;"	m	class:Source	file:
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def __init__(self, vim):$/;"	m	class:Deoplete
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^    def __init__(self, vim):$/;"	m	class:Base
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def __init__(self, vim, name=''):$/;"	m	class:DeopleteLogFilter
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def __init__(self, commands, context, cwd):$/;"	m	class:Process
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def __init__(self, vim):$/;"	m	class:Base
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def __init__(self, vim):$/;"	m	class:DeopleteHandlers
__init__	plugin/script/bundle/vimshell.vim/rplugin/python3/deoplete/sources/vimshell.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugin/script/bundle/vimshell.vim/rplugin/python3/deoplete/sources/vimshell_history.py	/^    def __init__(self, vim):$/;"	m	class:Source
__longest_path_that_exists	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def __longest_path_that_exists(self, context, input_str):$/;"	m	class:Source	file:
__make_cache	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def __make_cache(self, context, bufnr):$/;"	m	class:Source	file:
__make_cache	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def __make_cache(self, context):$/;"	m	class:Source	file:
__substitute_path	plugin/script/bundle/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def __substitute_path(self, context, path):$/;"	m	class:Source	file:
